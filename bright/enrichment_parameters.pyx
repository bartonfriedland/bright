################################################
#                 WARNING!                     #
# This file has been auto-generated by xdress. #
# Do not modify!!!                             #
#                                              #
#                                              #
#                    Come on, guys. I mean it! #
################################################
"""Python wrapper for enrichment parameters.
"""
from libc.stdlib cimport free
from pyne cimport cpp_nucname
from pyne cimport nucname

from pyne import nucname

cdef class EnrichmentParameters:
    """This class is a collection of values that mirror the attributes in 
    Enrichment that are required for the cascade model to run. Like 
    ReactorParameters, this class takes no arguments on initialization.  An 
    empty ErichmentParameters instance has all values set to zero.
    """

    # constuctors
    def __cinit__(self, *args, **kwargs):
        self._inst = NULL
        self._free_inst = True

        # cached property defaults


    def __init__(self):
        """EnrichmentParameters(self)
        """
        self._inst = new cpp_enrichment_parameters.EnrichmentParameters()
    
    
    def __dealloc__(self):
        if self._free_inst:
            free(self._inst)

    # attributes
    property M0:
        """This is the number of stripping stages initially guessed by the user."""
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).M0)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).M0 = <double> value
    
    
    property Mstar_0:
        """The :math:`M^*_0` represents a first guess at what the `Mstar` should be.
        The value of Mstar_0 on initialization should be in the ballpark
        of the optimized result of the Mstar attribute.  However, :math:`M^*_0` must
        always have a value between the weights of the j and k key components.
        """
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).Mstar_0)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).Mstar_0 = <double> value
    
    
    property N0:
        """This is the number of enriching stages initially guessed by the user."""
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).N0)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).N0 = <double> value
    
    
    property alpha_0:
        """The :math:`\\alpha_0` attribute specifies the overall stage separation factor
        for the cascade.  This should be set on initialization.  Values should be
        greater than one.  Values less than one represent de-enrichment.
        """
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).alpha_0)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).alpha_0 = <double> value
    
    
    property j:
        """This is an integer in zzaaam-form that represents the jth key component.
        This nuclide is preferentially enriched in the product stream.
        For standard uranium cascades j is 922350 (ie U-235).
        """
        def __get__(self):
            return int((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).j)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).j = nucname.zzaaam(value)
    
    
    property k:
        """This is an integer in zzaaam-form that represents the kth key component.
        This nuclide is preferentially enriched in the waste stream.
        For standard uranium cascades k is 922380 (ie U-238).
        """
        def __get__(self):
            return int((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).k)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).k = nucname.zzaaam(value)
    
    
    property xP_j:
        """This is the target enrichment of the jth isotope in the
        product stream mat_prod.  The :math:`x^P_j` value is set by 
        the user at initialization or run-time.  For typical uranium 
        vectors, this value is about U-235 = 0.05.
        """
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).xP_j)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).xP_j = <double> value
    
    
    property xW_j:
        """This is the target enrichment of the jth isotope in the
        waste stream ms_tail.  The :math:`x^W_j` value is set by the 
        user at initialization or runtime.  For typical uranium vectors,
        this value is about U-235 = 0.0025.
        """
        def __get__(self):
            return float((<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).xW_j)
    
        def __set__(self, value):
            (<cpp_enrichment_parameters.EnrichmentParameters *> self._inst).xW_j = <double> value
    
    
    # methods


def uranium_enrichment_defaults():
    """This function returns a new EnrichmentParameters instance which 
    holds sensible initial values a urnaium enrichment cascade.

    The values of this instance of EnrichmentParameters are as
    follows::

        ued = bright.enrichment.EnrichmentParameters()

        ued.alpha_0 = 1.05
        ued.Mstar_0 = 236.5

        ued.j = 922350
        ued.k = 922380

        ued.xP_j = 0.05
        ued.xW_j = 0.0025

        ued.N0 = 30.0
        ued.M0 = 10.0

    """
    cdef cpp_enrichment_parameters.EnrichmentParameters cpp_ued = cpp_enrichment_parameters.fillUraniumEnrichmentDefaults()
    cdef EnrichmentParameters ued = EnrichmentParameters()
    (<cpp_enrichment_parameters.EnrichmentParameters *> ued._inst)[0] = cpp_ued
    return ued




