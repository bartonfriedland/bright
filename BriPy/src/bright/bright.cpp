/* Generated by Cython 0.14.1rc3 on Sat Feb 19 23:52:33 2011 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif

#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__bright
#include <utility>
#include <map>
#include <set>
#include <string>
#include "../MassStream.h"
#include "stdexcept"
#include <vector>
#include "../bright.h"
#include "../FCComp.h"
#include "../Enrichment.h"
#include "../Reprocess.h"
#include "../Storage.h"
#include "../Reactor1G.h"
#include "../LightWaterReactor1G.h"
#include "../FastReactor1G.h"
#include "../FuelFabrication.h"
#include "stdlib.h"
#include "stdio.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif

#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

static const char *__pyx_f[] = {
  "bright.pyx",
  "numpy.pxd",
  "mass_stream.pxd",
};

typedef npy_int8 __pyx_t_5numpy_int8_t;

typedef npy_int16 __pyx_t_5numpy_int16_t;

typedef npy_int32 __pyx_t_5numpy_int32_t;

typedef npy_int64 __pyx_t_5numpy_int64_t;

typedef npy_uint8 __pyx_t_5numpy_uint8_t;

typedef npy_uint16 __pyx_t_5numpy_uint16_t;

typedef npy_uint32 __pyx_t_5numpy_uint32_t;

typedef npy_uint64 __pyx_t_5numpy_uint64_t;

typedef npy_float32 __pyx_t_5numpy_float32_t;

typedef npy_float64 __pyx_t_5numpy_float64_t;

typedef npy_long __pyx_t_5numpy_int_t;

typedef npy_longlong __pyx_t_5numpy_long_t;

typedef npy_intp __pyx_t_5numpy_intp_t;

typedef npy_uintp __pyx_t_5numpy_uintp_t;

typedef npy_ulong __pyx_t_5numpy_uint_t;

typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

typedef npy_double __pyx_t_5numpy_float_t;

typedef npy_double __pyx_t_5numpy_double_t;

typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif

/* Type declarations */

typedef MassStream *__pyx_t_11mass_stream_msp;

typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "bright.pxd":16
 * cimport cpp_bright
 * 
 * cdef class FCComp:             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.FCComp * fccomp_pointer
 * 
 */

struct __pyx_obj_6bright_FCComp {
  PyObject_HEAD
  FCComp *fccomp_pointer;
};

/* "bright.pxd":56
 * 
 * 
 * cdef class FuelFabrication(FCComp):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.FuelFabrication * ff_pointer
 */

struct __pyx_obj_6bright_FuelFabrication {
  struct __pyx_obj_6bright_FCComp __pyx_base;
  FuelFabrication *ff_pointer;
};

/* "bright.pxd":32
 * 
 * 
 * cdef class Storage(FCComp):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.Storage * s_pointer
 * 
 */

struct __pyx_obj_6bright_Storage {
  struct __pyx_obj_6bright_FCComp __pyx_base;
  Storage *s_pointer;
};

/* "bright.pxd":44
 * 
 * 
 * cdef class Reactor1G(FCComp):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.Reactor1G * r1g_pointer
 * 
 */

struct __pyx_obj_6bright_Reactor1G {
  struct __pyx_obj_6bright_FCComp __pyx_base;
  Reactor1G *r1g_pointer;
};

/* "bright.pxd":40
 * 
 * 
 * cdef class ReactorParameters:             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.ReactorParameters * rp_pointer
 * 
 */

struct __pyx_obj_6bright_ReactorParameters {
  PyObject_HEAD
  ReactorParameters *rp_pointer;
};

/* "bright.pxd":52
 * 
 * 
 * cdef class FastReactor1G(Reactor1G):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.FastReactor1G * fr1g_pointer
 * 
 */

struct __pyx_obj_6bright_FastReactor1G {
  struct __pyx_obj_6bright_Reactor1G __pyx_base;
  FastReactor1G *fr1g_pointer;
};

/* "bright.pyx":58
 * #######################################
 * 
 * cdef class BrightConfig:             # <<<<<<<<<<<<<<
 * 
 *     # From bright namespace
 */

struct __pyx_obj_6bright_BrightConfig {
  PyObject_HEAD
};

/* "bright.pxd":28
 * 
 * 
 * cdef class Reprocess(FCComp):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.Reprocess * r_pointer
 * 
 */

struct __pyx_obj_6bright_Reprocess {
  struct __pyx_obj_6bright_FCComp __pyx_base;
  Reprocess *r_pointer;
};

/* "bright.pxd":20
 * 
 * 
 * cdef class EnrichmentParameters:             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.EnrichmentParameters * ep_pointer
 * 
 */

struct __pyx_obj_6bright_EnrichmentParameters {
  PyObject_HEAD
  EnrichmentParameters *ep_pointer;
};

/* "bright.pxd":24
 * 
 * 
 * cdef class Enrichment(FCComp):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.Enrichment * e_pointer
 * 
 */

struct __pyx_obj_6bright_Enrichment {
  struct __pyx_obj_6bright_FCComp __pyx_base;
  Enrichment *e_pointer;
};

/* "bright.pxd":48
 * 
 * 
 * cdef class LightWaterReactor1G(Reactor1G):             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.LightWaterReactor1G * lwr1g_pointer
 * 
 */

struct __pyx_obj_6bright_LightWaterReactor1G {
  struct __pyx_obj_6bright_Reactor1G __pyx_base;
  LightWaterReactor1G *lwr1g_pointer;
};

/* "bright.pxd":36
 * 
 * 
 * cdef class FluencePoint:             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.FluencePoint * fp_pointer
 * 
 */

struct __pyx_obj_6bright_FluencePoint {
  PyObject_HEAD
  FluencePoint *fp_pointer;
};

/* "mass_stream.pxd":10
 * cimport cpp_mass_stream
 * 
 * cdef class MassStream:             # <<<<<<<<<<<<<<
 *     cdef cpp_mass_stream.MassStream * ms_pointer
 * 
 */

struct __pyx_obj_11mass_stream_MassStream {
  PyObject_HEAD
  MassStream *ms_pointer;
};

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static CYTHON_INLINE long __Pyx_NegateNonNeg(long b) { return unlikely(b < 0) ? b : !b; }
static CYTHON_INLINE PyObject* __Pyx_PyBoolOrNull_FromLong(long b) {
    return unlikely(b < 0) ? NULL : __Pyx_PyBool_FromLong(b);
}


static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}


#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}


#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    PyObject *r;
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (PyTuple_CheckExact(o) && ((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_item && (likely(i >= 0))) {
        r = PySequence_GetItem(o, i);
    }
    else {
        r = __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
    }
    return r;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict,
    const char* function_name, int kw_allowed); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static PyObject *__Pyx_UnpackItem(PyObject *, Py_ssize_t index); /*proto*/
static int __Pyx_EndUnpack(PyObject *, Py_ssize_t expected); /*proto*/

static double __Pyx__PyObject_AsDouble(PyObject* obj); /* proto */

#define __Pyx_PyObject_AsDouble(obj) \
    ((likely(PyFloat_CheckExact(obj))) ? \
     PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

/* Run-time type information about structs used with buffers */
struct __Pyx_StructField_;

typedef struct {
  const char* name; /* for error messages only */
  struct __Pyx_StructField_* fields;
  size_t size;     /* sizeof(type) */
  char typegroup; /* _R_eal, _C_omplex, Signed _I_nt, _U_nsigned int, _S_truct, _P_ointer, _O_bject */
} __Pyx_TypeInfo;

typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;

typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;


static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list); /*proto*/
#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
#define __Pyx_GetBuffer PyObject_GetBuffer
#define __Pyx_ReleaseBuffer PyBuffer_Release
#endif

Py_ssize_t __Pyx_zeros[] = {0};
Py_ssize_t __Pyx_minusones[] = {-1};

#if PY_VERSION_HEX < 0x02050000
#ifndef PyAnySet_CheckExact

#define PyAnySet_CheckExact(ob) \
    ((ob)->ob_type == &PySet_Type || \
     (ob)->ob_type == &PyFrozenSet_Type)

#define PySet_New(iterable) \
    PyObject_CallFunctionObjArgs((PyObject *)&PySet_Type, (iterable), NULL)

#define Pyx_PyFrozenSet_New(iterable) \
    PyObject_CallFunctionObjArgs((PyObject *)&PyFrozenSet_Type, (iterable), NULL)

#define PySet_Size(anyset) \
    PyObject_Size((anyset))

#define PySet_Contains(anyset, key) \
    PySequence_Contains((anyset), (key))

#define PySet_Pop(set) \
    PyObject_CallMethod(set, (char *)"pop", NULL)

static CYTHON_INLINE int PySet_Clear(PyObject *set) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"clear", NULL);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}

static CYTHON_INLINE int PySet_Discard(PyObject *set, PyObject *key) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"discard", (char *)"O", key);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}

static CYTHON_INLINE int PySet_Add(PyObject *set, PyObject *key) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"add", (char *)"O", key);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}

#endif /* PyAnySet_CheckExact (<= Py2.4) */

#if PY_VERSION_HEX < 0x02040000
#ifndef Py_SETOBJECT_H
#define Py_SETOBJECT_H

static PyTypeObject *__Pyx_PySet_Type = NULL;
static PyTypeObject *__Pyx_PyFrozenSet_Type = NULL;

#define PySet_Type (*__Pyx_PySet_Type)
#define PyFrozenSet_Type (*__Pyx_PyFrozenSet_Type)

#define PyAnySet_Check(ob) \
    (PyAnySet_CheckExact(ob) || \
     PyType_IsSubtype((ob)->ob_type, &PySet_Type) || \
     PyType_IsSubtype((ob)->ob_type, &PyFrozenSet_Type))

#define PyFrozenSet_CheckExact(ob) ((ob)->ob_type == &PyFrozenSet_Type)

static int __Pyx_Py23SetsImport(void) {
    PyObject *sets=0, *Set=0, *ImmutableSet=0;

    sets = PyImport_ImportModule((char *)"sets");
    if (!sets) goto bad;
    Set = PyObject_GetAttrString(sets, (char *)"Set");
    if (!Set) goto bad;
    ImmutableSet = PyObject_GetAttrString(sets, (char *)"ImmutableSet");
    if (!ImmutableSet) goto bad;
    Py_DECREF(sets);

    __Pyx_PySet_Type       = (PyTypeObject*) Set;
    __Pyx_PyFrozenSet_Type = (PyTypeObject*) ImmutableSet;

    return 0;

 bad:
    Py_XDECREF(sets);
    Py_XDECREF(Set);
    Py_XDECREF(ImmutableSet);
    return -1;
}

#else
static int __Pyx_Py23SetsImport(void) { return 0; }
#endif /* !Py_SETOBJECT_H */
#endif /* < Py2.4  */
#endif /* < Py2.5  */

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif

#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size, int strict);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from libcpp.utility */

/* Module declarations from libcpp.map */

/* Module declarations from libcpp.pair */

/* Module declarations from libcpp.set */

/* Module declarations from std */

/* Module declarations from cpp_mass_stream */

/* Module declarations from libcpp.vector */

/* Module declarations from mass_stream */

static PyTypeObject *__pyx_ptype_11mass_stream_MassStream = 0;
static std::map<std::string,__pyx_t_11mass_stream_msp> (*__pyx_f_11mass_stream_dict_to_map_str_msp)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_11mass_stream_map_to_dict_str_msp)(std::map<std::string,__pyx_t_11mass_stream_msp>); /*proto*/
/* Module declarations from cpp_bright */

/* Module declarations from libc.stdlib */

/* Module declarations from cpython.buffer */

/* Module declarations from cpython.ref */

/* Module declarations from libc.stdio */

/* Module declarations from cpython.object */

/* Module declarations from numpy */

/* Module declarations from numpy */

static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *, PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *); /*proto*/
/* Module declarations from stlconverters */

static std::map<int,double> (*__pyx_f_13stlconverters_dict_to_map_int_dbl)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_int_dbl)(std::map<int,double>); /*proto*/
static std::map<std::string,int> (*__pyx_f_13stlconverters_dict_to_map_str_int)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_str_int)(std::map<std::string,int>); /*proto*/
static std::map<int,std::string> (*__pyx_f_13stlconverters_dict_to_map_int_str)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_int_str)(std::map<int,std::string>); /*proto*/
static std::map<std::string,double> (*__pyx_f_13stlconverters_dict_to_map_str_dbl)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_str_dbl)(std::map<std::string,double>); /*proto*/
static std::set<int> (*__pyx_f_13stlconverters_py_to_cpp_set_int)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_cpp_to_py_set_int)(std::set<int>); /*proto*/
static std::set<std::string> (*__pyx_f_13stlconverters_py_to_cpp_set_str)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_cpp_to_py_set_str)(std::set<std::string>); /*proto*/
static std::vector<double> (*__pyx_f_13stlconverters_array_to_vector_1d_dbl)(PyArrayObject *); /*proto*/
static PyArrayObject *(*__pyx_f_13stlconverters_vector_to_array_1d_dbl)(std::vector<double>); /*proto*/
static std::map<int,std::vector<double> > (*__pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl)(std::map<int,std::vector<double> >); /*proto*/
static std::map<int,std::map<int,std::vector<double> > > (*__pyx_f_13stlconverters_dict_to_map_int_int_vector_to_array_1d_dbl)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_13stlconverters_map_to_dict_int_int_array_to_vector_1d_dbl)(std::map<int,std::map<int,std::vector<double> > >); /*proto*/
/* Module declarations from bright */

static PyTypeObject *__pyx_ptype_6bright_FCComp = 0;
static PyTypeObject *__pyx_ptype_6bright_EnrichmentParameters = 0;
static PyTypeObject *__pyx_ptype_6bright_Enrichment = 0;
static PyTypeObject *__pyx_ptype_6bright_Reprocess = 0;
static PyTypeObject *__pyx_ptype_6bright_Storage = 0;
static PyTypeObject *__pyx_ptype_6bright_FluencePoint = 0;
static PyTypeObject *__pyx_ptype_6bright_ReactorParameters = 0;
static PyTypeObject *__pyx_ptype_6bright_Reactor1G = 0;
static PyTypeObject *__pyx_ptype_6bright_LightWaterReactor1G = 0;
static PyTypeObject *__pyx_ptype_6bright_FastReactor1G = 0;
static PyTypeObject *__pyx_ptype_6bright_FuelFabrication = 0;
static PyTypeObject *__pyx_ptype_6bright_BrightConfig = 0;
static PyObject *__pyx_f_6bright_PyBrightStart(int __pyx_skip_dispatch); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t = { "float64_t", NULL, sizeof(__pyx_t_5numpy_float64_t), 'R' };
#define __Pyx_MODULE_NAME "bright"
static int __pyx_module_is_main_bright = 0;

/* Implementation of bright */
static PyObject *__pyx_builtin_basestring;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_1[] = "";
static char __pyx_k_2[] = "Separation keys must be strings or integers.";
static char __pyx_k_5[] = "'input' must be a MassStream, dict, or None.";
static char __pyx_k_8[] = "The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got ";
static char __pyx_k_9[] = "The params2track keyword must be a set of strings or None.  Got ";
static char __pyx_k_10[] = "reactor.h5";
static char __pyx_k_11[] = "The libfile keyword must be a string or None.  Got ";
static char __pyx_k_12[] = "The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got ";
static char __pyx_k_13[] = "The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got ";
static char __pyx_k_14[] = "The reactor keyword must be a Reactor1G instance or None.  Got ";
static char __pyx_k_15[] = "ndarray is not C contiguous";
static char __pyx_k_17[] = "ndarray is not Fortran contiguous";
static char __pyx_k_19[] = "Non-native byte order not supported";
static char __pyx_k_21[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_22[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_25[] = "Format string allocated too short.";
static char __pyx_k_27[] = "Python wrapper for isoname library.";
static char __pyx_k_28[] = "load_isos2track_hdf5";
static char __pyx_k_29[] = "load_isos2track_text";
static char __pyx_k_30[] = "UraniumEnrichmentDefaults";
static char __pyx_k__B[] = "B";
static char __pyx_k__F[] = "F";
static char __pyx_k__H[] = "H";
static char __pyx_k__I[] = "I";
static char __pyx_k__K[] = "K";
static char __pyx_k__L[] = "L";
static char __pyx_k__M[] = "M";
static char __pyx_k__N[] = "N";
static char __pyx_k__O[] = "O";
static char __pyx_k__Q[] = "Q";
static char __pyx_k__a[] = "a";
static char __pyx_k__b[] = "b";
static char __pyx_k__d[] = "d";
static char __pyx_k__f[] = "f";
static char __pyx_k__g[] = "g";
static char __pyx_k__h[] = "h";
static char __pyx_k__i[] = "i";
static char __pyx_k__j[] = "j";
static char __pyx_k__k[] = "k";
static char __pyx_k__l[] = "l";
static char __pyx_k__m[] = "m";
static char __pyx_k__q[] = "q";
static char __pyx_k__r[] = "r";
static char __pyx_k__Fd[] = "Fd";
static char __pyx_k__M0[] = "M0";
static char __pyx_k__N0[] = "N0";
static char __pyx_k__VC[] = "VC";
static char __pyx_k__VF[] = "VF";
static char __pyx_k__Zd[] = "Zd";
static char __pyx_k__Zf[] = "Zf";
static char __pyx_k__Zg[] = "Zg";
static char __pyx_k__fd[] = "fd";
static char __pyx_k__np[] = "np";
static char __pyx_k__os[] = "os";
static char __pyx_k__BUd[] = "BUd";
static char __pyx_k__BUt[] = "BUt";
static char __pyx_k__InU[] = "InU";
static char __pyx_k__MWC[] = "MWC";
static char __pyx_k__MWF[] = "MWF";
static char __pyx_k__NiC[] = "NiC";
static char __pyx_k__NiF[] = "NiF";
static char __pyx_k__S_O[] = "S_O";
static char __pyx_k__S_T[] = "S_T";
static char __pyx_k__buf[] = "buf";
static char __pyx_k__miC[] = "miC";
static char __pyx_k__miF[] = "miF";
static char __pyx_k__niC[] = "niC";
static char __pyx_k__niF[] = "niF";
static char __pyx_k__obj[] = "obj";
static char __pyx_k__phi[] = "phi";
static char __pyx_k__pnl[] = "pnl";
static char __pyx_k__x_F[] = "x_F";
static char __pyx_k__x_P[] = "x_P";
static char __pyx_k__x_W[] = "x_W";
static char __pyx_k__D_F_[] = "D_F_";
static char __pyx_k__LLzz[] = "LLzz";
static char __pyx_k__OutU[] = "OutU";
static char __pyx_k__P_F_[] = "P_F_";
static char __pyx_k__P_NL[] = "P_NL";
static char __pyx_k__base[] = "base";
static char __pyx_k__flux[] = "flux";
static char __pyx_k__join[] = "join";
static char __pyx_k__k_F_[] = "k_F_";
static char __pyx_k__name[] = "name";
static char __pyx_k__ndim[] = "ndim";
static char __pyx_k__path[] = "path";
static char __pyx_k__rhoC[] = "rhoC";
static char __pyx_k__rhoF[] = "rhoF";
static char __pyx_k__xP_j[] = "xP_j";
static char __pyx_k__xW_j[] = "xW_j";
static char __pyx_k__A_IHM[] = "A_IHM";
static char __pyx_k__BU_F_[] = "BU_F_";
static char __pyx_k__InACT[] = "InACT";
static char __pyx_k__InLAN[] = "InLAN";
static char __pyx_k__InTRU[] = "InTRU";
static char __pyx_k__Mj_F_[] = "Mj_F_";
static char __pyx_k__Mstar[] = "Mstar";
static char __pyx_k__TruCR[] = "TruCR";
static char __pyx_k__c_str[] = "c_str";
static char __pyx_k__clear[] = "clear";
static char __pyx_k__dC_F_[] = "dC_F_";
static char __pyx_k__dF_F_[] = "dF_F_";
static char __pyx_k__descr[] = "descr";
static char __pyx_k__di_F_[] = "di_F_";
static char __pyx_k__input[] = "input";
static char __pyx_k__items[] = "items";
static char __pyx_k__names[] = "names";
static char __pyx_k__numpy[] = "numpy";
static char __pyx_k__pi_F_[] = "pi_F_";
static char __pyx_k__range[] = "range";
static char __pyx_k__shape[] = "shape";
static char __pyx_k__split[] = "split";
static char __pyx_k__BUi_F_[] = "BUi_F_";
static char __pyx_k__IsosIn[] = "IsosIn";
static char __pyx_k__Length[] = "Length";
static char __pyx_k__OutACT[] = "OutACT";
static char __pyx_k__OutLAN[] = "OutLAN";
static char __pyx_k__OutTRU[] = "OutTRU";
static char __pyx_k__PoverF[] = "PoverF";
static char __pyx_k__Radius[] = "Radius";
static char __pyx_k__Tij_F_[] = "Tij_F_";
static char __pyx_k__WoverF[] = "WoverF";
static char __pyx_k__bright[] = "bright";
static char __pyx_k__deltaR[] = "deltaR";
static char __pyx_k__doCalc[] = "doCalc";
static char __pyx_k__fields[] = "fields";
static char __pyx_k__format[] = "format";
static char __pyx_k__params[] = "params";
static char __pyx_k__sepeff[] = "sepeff";
static char __pyx_k__IsosOut[] = "IsosOut";
static char __pyx_k__Lattice[] = "Lattice";
static char __pyx_k__Mstar_0[] = "Mstar_0";
static char __pyx_k__PassNum[] = "PassNum";
static char __pyx_k__Run_PNL[] = "Run_PNL";
static char __pyx_k__alpha_0[] = "alpha_0";
static char __pyx_k__batches[] = "batches";
static char __pyx_k__deltaRs[] = "deltaRs";
static char __pyx_k__environ[] = "environ";
static char __pyx_k__isoname[] = "isoname";
static char __pyx_k__libfile[] = "libfile";
static char __pyx_k__loadLib[] = "loadLib";
static char __pyx_k__mkMj_F_[] = "mkMj_F_";
static char __pyx_k__reactor[] = "reactor";
static char __pyx_k__strides[] = "strides";
static char __pyx_k__useZeta[] = "useZeta";
static char __pyx_k__zeta_F_[] = "zeta_F_";
static char __pyx_k__FuelForm[] = "FuelForm";
static char __pyx_k__IsosTail[] = "IsosTail";
static char __pyx_k__PDk_flag[] = "PDk_flag";
static char __pyx_k__ParamsIn[] = "ParamsIn";
static char __pyx_k__TargetBU[] = "TargetBU";
static char __pyx_k____file__[] = "__file__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__batchAve[] = "batchAve";
static char __pyx_k__calcZeta[] = "calcZeta";
static char __pyx_k__filename[] = "filename";
static char __pyx_k__itemsize[] = "itemsize";
static char __pyx_k__mkMj_Fd_[] = "mkMj_Fd_";
static char __pyx_k__readonly[] = "readonly";
static char __pyx_k__type_num[] = "type_num";
static char __pyx_k__writeout[] = "writeout";
static char __pyx_k__ParamsOut[] = "ParamsOut";
static char __pyx_k__TypeError[] = "TypeError";
static char __pyx_k__batchAveK[] = "batchAveK";
static char __pyx_k__byteorder[] = "byteorder";
static char __pyx_k__calcTruCR[] = "calcTruCR";
static char __pyx_k__e_pointer[] = "e_pointer";
static char __pyx_k__kappaC_F_[] = "kappaC_F_";
static char __pyx_k__kappaF_F_[] = "kappaF_F_";
static char __pyx_k__r_pointer[] = "r_pointer";
static char __pyx_k__s_pointer[] = "s_pointer";
static char __pyx_k__setParams[] = "setParams";
static char __pyx_k__writeHDF5[] = "writeHDF5";
static char __pyx_k__writeText[] = "writeText";
static char __pyx_k__FRDefaults[] = "FRDefaults";
static char __pyx_k__SWUperFeed[] = "SWUperFeed";
static char __pyx_k__SigmaCa_F_[] = "SigmaCa_F_";
static char __pyx_k__SigmaFa_F_[] = "SigmaFa_F_";
static char __pyx_k__ValueError[] = "ValueError";
static char __pyx_k__basestring[] = "basestring";
static char __pyx_k__calcOutIso[] = "calcOutIso";
static char __pyx_k__decay_time[] = "decay_time";
static char __pyx_k__ep_pointer[] = "ep_pointer";
static char __pyx_k__ff_pointer[] = "ff_pointer";
static char __pyx_k__fp_pointer[] = "fp_pointer";
static char __pyx_k__initialize[] = "initialize";
static char __pyx_k__ms_pointer[] = "ms_pointer";
static char __pyx_k__open_slots[] = "open_slots";
static char __pyx_k__rp_pointer[] = "rp_pointer";
static char __pyx_k__suboffsets[] = "suboffsets";
static char __pyx_k__BRIGHT_DATA[] = "BRIGHT_DATA";
static char __pyx_k__BrightStart[] = "BrightStart";
static char __pyx_k__CoolantForm[] = "CoolantForm";
static char __pyx_k__FluenceAtBU[] = "FluenceAtBU";
static char __pyx_k__FuelDensity[] = "FuelDensity";
static char __pyx_k__LWRDefaults[] = "LWRDefaults";
static char __pyx_k__LatticeE_F_[] = "LatticeE_F_";
static char __pyx_k__LatticeF_F_[] = "LatticeF_F_";
static char __pyx_k__LatticeType[] = "LatticeType";
static char __pyx_k__SigmaCtr_F_[] = "SigmaCtr_F_";
static char __pyx_k__SigmaFtr_F_[] = "SigmaFtr_F_";
static char __pyx_k___cpp_sepeff[] = "_cpp_sepeff";
static char __pyx_k__bright_data[] = "bright_data";
static char __pyx_k__calc_deltaR[] = "calc_deltaR";
static char __pyx_k__datasetname[] = "datasetname";
static char __pyx_k__mass_stream[] = "mass_stream";
static char __pyx_k__r1g_pointer[] = "r1g_pointer";
static char __pyx_k__total_slots[] = "total_slots";
static char __pyx_k__H_XS_Rescale[] = "H_XS_Rescale";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k__TotalPerFeed[] = "TotalPerFeed";
static char __pyx_k__calc_deltaRs[] = "calc_deltaRs";
static char __pyx_k__fr1g_pointer[] = "fr1g_pointer";
static char __pyx_k__mass_streams[] = "mass_streams";
static char __pyx_k__natural_name[] = "natural_name";
static char __pyx_k__params2track[] = "params2track";
static char __pyx_k__writeIsoPass[] = "writeIsoPass";
static char __pyx_k__SWUperProduct[] = "SWUperProduct";
static char __pyx_k__bright_config[] = "bright_config";
static char __pyx_k__enrich_params[] = "enrich_params";
static char __pyx_k__lwr1g_pointer[] = "lwr1g_pointer";
static char __pyx_k__CoolantDensity[] = "CoolantDensity";
static char __pyx_k__LatticeEPlanar[] = "LatticeEPlanar";
static char __pyx_k__LatticeFPlanar[] = "LatticeFPlanar";
static char __pyx_k__calcSubStreams[] = "calcSubStreams";
static char __pyx_k__calcZetaPlanar[] = "calcZetaPlanar";
static char __pyx_k__fccomp_pointer[] = "fccomp_pointer";
static char __pyx_k__mixed_2_zzaaam[] = "mixed_2_zzaaam";
static char __pyx_k__writeParamPass[] = "writeParamPass";
static char __pyx_k__HydrogenRescale[] = "HydrogenRescale";
static char __pyx_k__calc_core_input[] = "calc_core_input";
static char __pyx_k__foldMassWeights[] = "foldMassWeights";
static char __pyx_k__mass_weights_in[] = "mass_weights_in";
static char __pyx_k__useDisadvantage[] = "useDisadvantage";
static char __pyx_k__FuelChemicalForm[] = "FuelChemicalForm";
static char __pyx_k__calc_mass_ratios[] = "calc_mass_ratios";
static char __pyx_k__mass_weights_out[] = "mass_weights_out";
static char __pyx_k__LatticeESpherical[] = "LatticeESpherical";
static char __pyx_k__LatticeFSpherical[] = "LatticeFSpherical";
static char __pyx_k__calcZetaSpherical[] = "calcZetaSpherical";
static char __pyx_k__reactor_parameters[] = "reactor_parameters";
static char __pyx_k__BUd_BisectionMethod[] = "BUd_BisectionMethod";
static char __pyx_k__Calibrate_PNL_2_BUd[] = "Calibrate_PNL_2_BUd";
static char __pyx_k__CoolantChemicalForm[] = "CoolantChemicalForm";
static char __pyx_k__LatticeECylindrical[] = "LatticeECylindrical";
static char __pyx_k__LatticeFCylindrical[] = "LatticeFCylindrical";
static char __pyx_k__calcZetaCylindrical[] = "calcZetaCylindrical";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_kp_s_14;
static PyObject *__pyx_kp_u_15;
static PyObject *__pyx_kp_u_17;
static PyObject *__pyx_kp_u_19;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_kp_u_21;
static PyObject *__pyx_kp_u_22;
static PyObject *__pyx_kp_u_25;
static PyObject *__pyx_n_s_28;
static PyObject *__pyx_n_s_29;
static PyObject *__pyx_n_s_30;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_n_s__A_IHM;
static PyObject *__pyx_n_s__B;
static PyObject *__pyx_n_s__BRIGHT_DATA;
static PyObject *__pyx_n_s__BU_F_;
static PyObject *__pyx_n_s__BUd;
static PyObject *__pyx_n_s__BUd_BisectionMethod;
static PyObject *__pyx_n_s__BUi_F_;
static PyObject *__pyx_n_s__BUt;
static PyObject *__pyx_n_s__BrightStart;
static PyObject *__pyx_n_s__Calibrate_PNL_2_BUd;
static PyObject *__pyx_n_s__CoolantChemicalForm;
static PyObject *__pyx_n_s__CoolantDensity;
static PyObject *__pyx_n_s__CoolantForm;
static PyObject *__pyx_n_s__D_F_;
static PyObject *__pyx_n_s__F;
static PyObject *__pyx_n_s__FRDefaults;
static PyObject *__pyx_n_s__Fd;
static PyObject *__pyx_n_s__FluenceAtBU;
static PyObject *__pyx_n_s__FuelChemicalForm;
static PyObject *__pyx_n_s__FuelDensity;
static PyObject *__pyx_n_s__FuelForm;
static PyObject *__pyx_n_s__H_XS_Rescale;
static PyObject *__pyx_n_s__HydrogenRescale;
static PyObject *__pyx_n_s__InACT;
static PyObject *__pyx_n_s__InLAN;
static PyObject *__pyx_n_s__InTRU;
static PyObject *__pyx_n_s__InU;
static PyObject *__pyx_n_s__IsosIn;
static PyObject *__pyx_n_s__IsosOut;
static PyObject *__pyx_n_s__IsosTail;
static PyObject *__pyx_n_s__LLzz;
static PyObject *__pyx_n_s__LWRDefaults;
static PyObject *__pyx_n_s__Lattice;
static PyObject *__pyx_n_s__LatticeECylindrical;
static PyObject *__pyx_n_s__LatticeEPlanar;
static PyObject *__pyx_n_s__LatticeESpherical;
static PyObject *__pyx_n_s__LatticeE_F_;
static PyObject *__pyx_n_s__LatticeFCylindrical;
static PyObject *__pyx_n_s__LatticeFPlanar;
static PyObject *__pyx_n_s__LatticeFSpherical;
static PyObject *__pyx_n_s__LatticeF_F_;
static PyObject *__pyx_n_s__LatticeType;
static PyObject *__pyx_n_s__Length;
static PyObject *__pyx_n_s__M;
static PyObject *__pyx_n_s__M0;
static PyObject *__pyx_n_s__MWC;
static PyObject *__pyx_n_s__MWF;
static PyObject *__pyx_n_s__Mj_F_;
static PyObject *__pyx_n_s__Mstar;
static PyObject *__pyx_n_s__Mstar_0;
static PyObject *__pyx_n_s__N;
static PyObject *__pyx_n_s__N0;
static PyObject *__pyx_n_s__NiC;
static PyObject *__pyx_n_s__NiF;
static PyObject *__pyx_n_s__OutACT;
static PyObject *__pyx_n_s__OutLAN;
static PyObject *__pyx_n_s__OutTRU;
static PyObject *__pyx_n_s__OutU;
static PyObject *__pyx_n_s__PDk_flag;
static PyObject *__pyx_n_s__P_F_;
static PyObject *__pyx_n_s__P_NL;
static PyObject *__pyx_n_s__ParamsIn;
static PyObject *__pyx_n_s__ParamsOut;
static PyObject *__pyx_n_s__PassNum;
static PyObject *__pyx_n_s__PoverF;
static PyObject *__pyx_n_s__Radius;
static PyObject *__pyx_n_s__Run_PNL;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__SWUperFeed;
static PyObject *__pyx_n_s__SWUperProduct;
static PyObject *__pyx_n_s__S_O;
static PyObject *__pyx_n_s__S_T;
static PyObject *__pyx_n_s__SigmaCa_F_;
static PyObject *__pyx_n_s__SigmaCtr_F_;
static PyObject *__pyx_n_s__SigmaFa_F_;
static PyObject *__pyx_n_s__SigmaFtr_F_;
static PyObject *__pyx_n_s__TargetBU;
static PyObject *__pyx_n_s__Tij_F_;
static PyObject *__pyx_n_s__TotalPerFeed;
static PyObject *__pyx_n_s__TruCR;
static PyObject *__pyx_n_s__TypeError;
static PyObject *__pyx_n_s__VC;
static PyObject *__pyx_n_s__VF;
static PyObject *__pyx_n_s__ValueError;
static PyObject *__pyx_n_s__WoverF;
static PyObject *__pyx_n_s____file__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___cpp_sepeff;
static PyObject *__pyx_n_s__a;
static PyObject *__pyx_n_s__alpha_0;
static PyObject *__pyx_n_s__b;
static PyObject *__pyx_n_s__base;
static PyObject *__pyx_n_s__basestring;
static PyObject *__pyx_n_s__batchAve;
static PyObject *__pyx_n_s__batchAveK;
static PyObject *__pyx_n_s__batches;
static PyObject *__pyx_n_s__bright;
static PyObject *__pyx_n_s__bright_config;
static PyObject *__pyx_n_s__bright_data;
static PyObject *__pyx_n_s__buf;
static PyObject *__pyx_n_s__byteorder;
static PyObject *__pyx_n_s__c_str;
static PyObject *__pyx_n_s__calcOutIso;
static PyObject *__pyx_n_s__calcSubStreams;
static PyObject *__pyx_n_s__calcTruCR;
static PyObject *__pyx_n_s__calcZeta;
static PyObject *__pyx_n_s__calcZetaCylindrical;
static PyObject *__pyx_n_s__calcZetaPlanar;
static PyObject *__pyx_n_s__calcZetaSpherical;
static PyObject *__pyx_n_s__calc_core_input;
static PyObject *__pyx_n_s__calc_deltaR;
static PyObject *__pyx_n_s__calc_deltaRs;
static PyObject *__pyx_n_s__calc_mass_ratios;
static PyObject *__pyx_n_s__clear;
static PyObject *__pyx_n_s__dC_F_;
static PyObject *__pyx_n_s__dF_F_;
static PyObject *__pyx_n_s__datasetname;
static PyObject *__pyx_n_s__decay_time;
static PyObject *__pyx_n_s__deltaR;
static PyObject *__pyx_n_s__deltaRs;
static PyObject *__pyx_n_s__descr;
static PyObject *__pyx_n_s__di_F_;
static PyObject *__pyx_n_s__doCalc;
static PyObject *__pyx_n_s__e_pointer;
static PyObject *__pyx_n_s__enrich_params;
static PyObject *__pyx_n_s__environ;
static PyObject *__pyx_n_s__ep_pointer;
static PyObject *__pyx_n_s__f;
static PyObject *__pyx_n_s__fccomp_pointer;
static PyObject *__pyx_n_s__fd;
static PyObject *__pyx_n_s__ff_pointer;
static PyObject *__pyx_n_s__fields;
static PyObject *__pyx_n_s__filename;
static PyObject *__pyx_n_s__flux;
static PyObject *__pyx_n_s__foldMassWeights;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__fp_pointer;
static PyObject *__pyx_n_s__fr1g_pointer;
static PyObject *__pyx_n_s__initialize;
static PyObject *__pyx_n_s__input;
static PyObject *__pyx_n_s__isoname;
static PyObject *__pyx_n_s__items;
static PyObject *__pyx_n_s__itemsize;
static PyObject *__pyx_n_s__j;
static PyObject *__pyx_n_s__join;
static PyObject *__pyx_n_s__k;
static PyObject *__pyx_n_s__k_F_;
static PyObject *__pyx_n_s__kappaC_F_;
static PyObject *__pyx_n_s__kappaF_F_;
static PyObject *__pyx_n_s__l;
static PyObject *__pyx_n_s__libfile;
static PyObject *__pyx_n_s__loadLib;
static PyObject *__pyx_n_s__lwr1g_pointer;
static PyObject *__pyx_n_s__m;
static PyObject *__pyx_n_s__mass_stream;
static PyObject *__pyx_n_s__mass_streams;
static PyObject *__pyx_n_s__mass_weights_in;
static PyObject *__pyx_n_s__mass_weights_out;
static PyObject *__pyx_n_s__miC;
static PyObject *__pyx_n_s__miF;
static PyObject *__pyx_n_s__mixed_2_zzaaam;
static PyObject *__pyx_n_s__mkMj_F_;
static PyObject *__pyx_n_s__mkMj_Fd_;
static PyObject *__pyx_n_s__ms_pointer;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__names;
static PyObject *__pyx_n_s__natural_name;
static PyObject *__pyx_n_s__ndim;
static PyObject *__pyx_n_s__niC;
static PyObject *__pyx_n_s__niF;
static PyObject *__pyx_n_s__np;
static PyObject *__pyx_n_s__numpy;
static PyObject *__pyx_n_s__obj;
static PyObject *__pyx_n_s__open_slots;
static PyObject *__pyx_n_s__os;
static PyObject *__pyx_n_s__params;
static PyObject *__pyx_n_s__params2track;
static PyObject *__pyx_n_s__path;
static PyObject *__pyx_n_s__phi;
static PyObject *__pyx_n_s__pi_F_;
static PyObject *__pyx_n_s__pnl;
static PyObject *__pyx_n_s__r;
static PyObject *__pyx_n_s__r1g_pointer;
static PyObject *__pyx_n_s__r_pointer;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__reactor;
static PyObject *__pyx_n_s__reactor_parameters;
static PyObject *__pyx_n_s__readonly;
static PyObject *__pyx_n_s__rhoC;
static PyObject *__pyx_n_s__rhoF;
static PyObject *__pyx_n_s__rp_pointer;
static PyObject *__pyx_n_s__s_pointer;
static PyObject *__pyx_n_s__sepeff;
static PyObject *__pyx_n_s__setParams;
static PyObject *__pyx_n_s__shape;
static PyObject *__pyx_n_s__split;
static PyObject *__pyx_n_s__strides;
static PyObject *__pyx_n_s__suboffsets;
static PyObject *__pyx_n_s__total_slots;
static PyObject *__pyx_n_s__type_num;
static PyObject *__pyx_n_s__useDisadvantage;
static PyObject *__pyx_n_s__useZeta;
static PyObject *__pyx_n_s__writeHDF5;
static PyObject *__pyx_n_s__writeIsoPass;
static PyObject *__pyx_n_s__writeParamPass;
static PyObject *__pyx_n_s__writeText;
static PyObject *__pyx_n_s__writeout;
static PyObject *__pyx_n_s__xP_j;
static PyObject *__pyx_n_s__xW_j;
static PyObject *__pyx_n_s__x_F;
static PyObject *__pyx_n_s__x_P;
static PyObject *__pyx_n_s__x_W;
static PyObject *__pyx_n_s__zeta_F_;
static PyObject *__pyx_int_15;
static PyObject *__pyx_k_4;
static PyObject *__pyx_k_tuple_3;
static PyObject *__pyx_k_tuple_6;
static PyObject *__pyx_k_tuple_7;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_18;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_23;
static PyObject *__pyx_k_tuple_24;
static PyObject *__pyx_k_tuple_26;

/* "bright.pyx":38
 * 
 * # Specifiy the BRIGHT_DATA directory
 * cpdef PyBrightStart():             # <<<<<<<<<<<<<<
 *     if "BRIGHT_DATA" not in os.environ:
 *         bd = os.path.split(bright_data.__file__)
 */

static PyObject *__pyx_pf_6bright_PyBrightStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static  PyObject *__pyx_f_6bright_PyBrightStart(int __pyx_skip_dispatch) {
  PyObject *__pyx_v_bd;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("PyBrightStart");
  __pyx_v_bd = Py_None; __Pyx_INCREF(Py_None);

  /* "bright.pyx":39
 * # Specifiy the BRIGHT_DATA directory
 * cpdef PyBrightStart():
 *     if "BRIGHT_DATA" not in os.environ:             # <<<<<<<<<<<<<<
 *         bd = os.path.split(bright_data.__file__)
 *         os.environ['BRIGHT_DATA'] = os.path.join(*(bd[0], ''))
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__environ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__Pyx_NegateNonNeg(PySequence_Contains(__pyx_t_2, ((PyObject *)__pyx_n_s__BRIGHT_DATA)))); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "bright.pyx":40
 * cpdef PyBrightStart():
 *     if "BRIGHT_DATA" not in os.environ:
 *         bd = os.path.split(bright_data.__file__)             # <<<<<<<<<<<<<<
 *         os.environ['BRIGHT_DATA'] = os.path.join(*(bd[0], ''))
 * 
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__path); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__split); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__bright_data); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s____file__); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_bd);
    __pyx_v_bd = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "bright.pyx":41
 *     if "BRIGHT_DATA" not in os.environ:
 *         bd = os.path.split(bright_data.__file__)
 *         os.environ['BRIGHT_DATA'] = os.path.join(*(bd[0], ''))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_4, __pyx_n_s__path); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__join); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_bd, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_1));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_kp_s_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_1));
    __pyx_t_1 = 0;
    __pyx_t_1 = PySequence_Tuple(((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__environ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__BRIGHT_DATA), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bright.PyBrightStart");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_bd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":38
 * 
 * # Specifiy the BRIGHT_DATA directory
 * cpdef PyBrightStart():             # <<<<<<<<<<<<<<
 *     if "BRIGHT_DATA" not in os.environ:
 *         bd = os.path.split(bright_data.__file__)
 */

static PyObject *__pyx_pf_6bright_PyBrightStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_6bright_PyBrightStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyBrightStart");
  __pyx_self = __pyx_self;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_6bright_PyBrightStart(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.PyBrightStart");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":45
 * 
 * # Expose the C-code start up routine
 * def BrightStart():             # <<<<<<<<<<<<<<
 *     cpp_bright.BrightStart()
 * 
 */

static PyObject *__pyx_pf_6bright_1BrightStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6bright_1BrightStart = {__Pyx_NAMESTR("BrightStart"), (PyCFunction)__pyx_pf_6bright_1BrightStart, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pf_6bright_1BrightStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("BrightStart");
  __pyx_self = __pyx_self;

  /* "bright.pyx":46
 * # Expose the C-code start up routine
 * def BrightStart():
 *     cpp_bright.BrightStart()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  bright::BrightStart();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":63
 * 
 *     property BRIGHT_DATA:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = cpp_bright.BRIGHT_DATA
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":64
 *     property BRIGHT_DATA:
 *         def __get__(self):
 *             cdef std.string value = cpp_bright.BRIGHT_DATA             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = bright::BRIGHT_DATA;

  /* "bright.pyx":65
 *         def __get__(self):
 *             cdef std.string value = cpp_bright.BRIGHT_DATA
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.BRIGHT_DATA.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":67
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             cpp_bright.BRIGHT_DATA = std.string(value)
 * 
 */

static int __pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.BrightConfig.BRIGHT_DATA.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":68
 * 
 *         def __set__(self, char * value):
 *             cpp_bright.BRIGHT_DATA = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  bright::BRIGHT_DATA = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":74
 * 
 *     property isos2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_int(cpp_bright.isos2track)
 * 
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_10isos2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_10isos2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":75
 *     property isos2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_int(cpp_bright.isos2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_int(FCComps::isos2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.isos2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":77
 *             return conv.cpp_to_py_set_int(cpp_bright.isos2track)
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             s = set([isoname.mixed_2_zzaaam(v) for v in value])
 *             cpp_bright.isos2track = conv.py_to_cpp_set_int(s)
 */

static int __pyx_pf_6bright_12BrightConfig_10isos2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_10isos2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_s;
  PyObject *__pyx_v_v;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_s = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_v = Py_None; __Pyx_INCREF(Py_None);

  /* "bright.pyx":78
 * 
 *         def __set__(self, value):
 *             s = set([isoname.mixed_2_zzaaam(v) for v in value])             # <<<<<<<<<<<<<<
 *             cpp_bright.isos2track = conv.py_to_cpp_set_int(s)
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyList_CheckExact(__pyx_v_value) || PyTuple_CheckExact(__pyx_v_value)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_v_value; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else {
      __pyx_t_4 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_4) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_v_v);
    __pyx_v_v = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__isoname); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_GetAttr(__pyx_t_4, __pyx_n_s__mixed_2_zzaaam); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __Pyx_INCREF(__pyx_v_v);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_v);
    __Pyx_GIVEREF(__pyx_v_v);
    __pyx_t_6 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    if (unlikely(PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_6))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PySet_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_s));
  __pyx_v_s = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":79
 *         def __set__(self, value):
 *             s = set([isoname.mixed_2_zzaaam(v) for v in value])
 *             cpp_bright.isos2track = conv.py_to_cpp_set_int(s)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::isos2track = __pyx_f_13stlconverters_py_to_cpp_set_int(__pyx_v_s);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bright.BrightConfig.isos2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_s);
  __Pyx_DECREF(__pyx_v_v);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":83
 * 
 *     property verbosity:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return cpp_bright.verbosity
 * 
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_9verbosity___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_9verbosity___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":84
 *     property verbosity:
 *         def __get__(self):
 *             return cpp_bright.verbosity             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(FCComps::verbosity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.verbosity.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":86
 *             return cpp_bright.verbosity
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             cpp_bright.verbosity = value
 * 
 */

static int __pyx_pf_6bright_12BrightConfig_9verbosity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_9verbosity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.BrightConfig.verbosity.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":87
 * 
 *         def __set__(self, int value):
 *             cpp_bright.verbosity = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::verbosity = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":91
 * 
 *     property write_hdf5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return cpp_bright.write_hdf5
 * 
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_10write_hdf5___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_10write_hdf5___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":92
 *     property write_hdf5:
 *         def __get__(self):
 *             return cpp_bright.write_hdf5             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(FCComps::write_hdf5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.write_hdf5.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":94
 *             return cpp_bright.write_hdf5
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             cpp_bright.write_hdf5 = value
 * 
 */

static int __pyx_pf_6bright_12BrightConfig_10write_hdf5_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_10write_hdf5_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.BrightConfig.write_hdf5.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":95
 * 
 *         def __set__(self, bint value):
 *             cpp_bright.write_hdf5 = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::write_hdf5 = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":99
 * 
 *     property write_text:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return cpp_bright.write_text
 * 
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_10write_text___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_10write_text___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":100
 *     property write_text:
 *         def __get__(self):
 *             return cpp_bright.write_text             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(FCComps::write_text); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.write_text.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":102
 *             return cpp_bright.write_text
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             cpp_bright.write_text = value
 * 
 */

static int __pyx_pf_6bright_12BrightConfig_10write_text_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_10write_text_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.BrightConfig.write_text.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":103
 * 
 *         def __set__(self, bint value):
 *             cpp_bright.write_text = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::write_text = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":107
 * 
 *     property output_filename:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = cpp_bright.output_filename
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_12BrightConfig_15output_filename___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12BrightConfig_15output_filename___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":108
 *     property output_filename:
 *         def __get__(self):
 *             cdef std.string value = cpp_bright.output_filename             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = FCComps::output_filename;

  /* "bright.pyx":109
 *         def __get__(self):
 *             cdef std.string value = cpp_bright.output_filename
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.BrightConfig.output_filename.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":111
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             cpp_bright.output_filename = std.string(value)
 * 
 */

static int __pyx_pf_6bright_12BrightConfig_15output_filename_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12BrightConfig_15output_filename_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.BrightConfig.output_filename.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":112
 * 
 *         def __set__(self, char * value):
 *             cpp_bright.output_filename = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::output_filename = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":120
 * 
 * # Load isos2track from file functions
 * def load_isos2track_hdf5(char * filename, char * datasetname="", bint clear=False):             # <<<<<<<<<<<<<<
 *     """This convience function tries to load the isos2track set from a dataset
 *     in an HDF5 file.  The dataset *must* be of integer type.  String-based
 */

static PyObject *__pyx_pf_6bright_2load_isos2track_hdf5(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_2load_isos2track_hdf5[] = "This convience function tries to load the isos2track set from a dataset \n    in an HDF5 file.  The dataset *must* be of integer type.  String-based\n    nuclide names are currently not supported. \n\n    Args:\n        * filename (str): Path to the data library.\n        * dataset (str):  Dataset name to grab nuclides from.\n        * clear (bool):   Flag that if set removes the currrent entries\n          from isos2track prior to loading in new values.\n\n    If the dataset argument is not provided or empty, the function tries to \n    load from various default datasets in the following order::\n\n        \"/isos2track\"  \n        \"/Isos2Track\"\n        \"/isostrack\"   \n        \"/IsosTrack\"\n        \"/isotrack\"   \n        \"/IsoTrack\"    \n        \"/ToIso\"\n        \"/ToIsos\"\n        \"/ToIso_zz\"\n        \"/ToIso_MCNP\"\n        \"/FromIso\"  \n        \"/FromIsos\"  \n        \"/FromIso_zz\" \n        \"/FromIso_MCNP\"\n    ";
static PyMethodDef __pyx_mdef_6bright_2load_isos2track_hdf5 = {__Pyx_NAMESTR("load_isos2track_hdf5"), (PyCFunction)__pyx_pf_6bright_2load_isos2track_hdf5, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_2load_isos2track_hdf5)};
static PyObject *__pyx_pf_6bright_2load_isos2track_hdf5(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_filename;
  char *__pyx_v_datasetname;
  int __pyx_v_clear;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__filename,&__pyx_n_s__datasetname,&__pyx_n_s__clear,0};
  __Pyx_RefNannySetupContext("load_isos2track_hdf5");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__filename);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__datasetname);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__clear);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "load_isos2track_hdf5") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_filename = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_datasetname = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_datasetname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_datasetname = ((char *)__pyx_k_1);
    }
    if (values[2]) {
      __pyx_v_clear = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_clear == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_clear = ((int)0);
    }
  } else {
    __pyx_v_datasetname = ((char *)__pyx_k_1);
    __pyx_v_clear = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_clear = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_clear == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_datasetname = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_datasetname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_filename = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_isos2track_hdf5", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.load_isos2track_hdf5");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":149
 *         "/FromIso_MCNP"
 *     """
 *     cpp_bright.load_isos2track_hdf5(std.string(filename), std.string(datasetname), clear)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::load_isos2track_hdf5(std::string(__pyx_v_filename), std::string(__pyx_v_datasetname), __pyx_v_clear);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":152
 * 
 * 
 * def load_isos2track_text(char * filename, bint clear=False):             # <<<<<<<<<<<<<<
 *     """This convience function tries to load the isos2track set from a text
 *     file.  The nuclide names may use any naming convention.  Mixing different
 */

static PyObject *__pyx_pf_6bright_3load_isos2track_text(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_3load_isos2track_text[] = "This convience function tries to load the isos2track set from a text\n    file.  The nuclide names may use any naming convention.  Mixing different\n    conventions in the same file is allowed.  Whitespace is required between\n    isotopic names.\n\n    Args:\n        * filename (str): Path to the data library.\n        * clear (bool):   Flag that if set removes the currrent entries\n          from isos2track prior to loading in new values.\n    ";
static PyMethodDef __pyx_mdef_6bright_3load_isos2track_text = {__Pyx_NAMESTR("load_isos2track_text"), (PyCFunction)__pyx_pf_6bright_3load_isos2track_text, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_3load_isos2track_text)};
static PyObject *__pyx_pf_6bright_3load_isos2track_text(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_filename;
  int __pyx_v_clear;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__filename,&__pyx_n_s__clear,0};
  __Pyx_RefNannySetupContext("load_isos2track_text");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__filename);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__clear);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "load_isos2track_text") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_filename = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_clear = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_clear == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_clear = ((int)0);
    }
  } else {
    __pyx_v_clear = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_clear = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_clear == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_filename = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_isos2track_text", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.load_isos2track_text");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":163
 *           from isos2track prior to loading in new values.
 *     """
 *     cpp_bright.load_isos2track_text(std.string(filename), clear)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  FCComps::load_isos2track_text(std::string(__pyx_v_filename), __pyx_v_clear);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":183
 *     #cdef cpp_bright.FCComp * fccomp_pointer
 * 
 *     def __cinit__(self, params=None, char * name="", *args, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef cpp_set[std.string] param_set
 * 
 */

static int __pyx_pf_6bright_6FCComp___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_6FCComp___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_params = 0;
  char *__pyx_v_name;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  std::set<std::string> __pyx_v_param_set;
  int __pyx_r;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__params,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args)); __Pyx_GOTREF(__pyx_v_args);

    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwargs);
      return -1;
    }
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__params);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      const Py_ssize_t used_pos_args = (PyTuple_GET_SIZE(__pyx_args) < 2) ? PyTuple_GET_SIZE(__pyx_args) : 2;
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, used_pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_params = values[0];
    if (values[1]) {
      __pyx_v_name = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_params = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  2: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_params = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_AddTraceback("bright.FCComp.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":186
 *         cdef cpp_set[std.string] param_set
 * 
 *         if params is None:             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer = new cpp_bright.FCComp(std.string(name))
 *         else:
 */
  __pyx_t_1 = (__pyx_v_params == Py_None);
  if (__pyx_t_1) {

    /* "bright.pyx":187
 * 
 *         if params is None:
 *             self.fccomp_pointer = new cpp_bright.FCComp(std.string(name))             # <<<<<<<<<<<<<<
 *         else:
 *             param_set = conv.py_to_cpp_set_str(params)
 */
    ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer = new FCComp(std::string(__pyx_v_name));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":189
 *             self.fccomp_pointer = new cpp_bright.FCComp(std.string(name))
 *         else:
 *             param_set = conv.py_to_cpp_set_str(params)             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer = new cpp_bright.FCComp(param_set, std.string(name))
 * 
 */
    if (!(likely(PySet_CheckExact(__pyx_v_params))||((__pyx_v_params) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_params)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_param_set = __pyx_f_13stlconverters_py_to_cpp_set_str(((PyObject*)__pyx_v_params));

    /* "bright.pyx":190
 *         else:
 *             param_set = conv.py_to_cpp_set_str(params)
 *             self.fccomp_pointer = new cpp_bright.FCComp(param_set, std.string(name))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer = new FCComp(__pyx_v_param_set, std::string(__pyx_v_name));
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":193
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.fccomp_pointer
 * 
 */

static void __pyx_pf_6bright_6FCComp_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_6FCComp_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":194
 * 
 *     def __dealloc__(self):
 *         del self.fccomp_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":202
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.fccomp_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_6FCComp_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":203
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.fccomp_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->name;

  /* "bright.pyx":204
 *         def __get__(self):
 *             cdef std.string n = self.fccomp_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":206
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_6FCComp_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_6FCComp_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FCComp.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":207
 * 
 *         def __set__(self, char * n):
 *             self.fccomp_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":211
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.fccomp_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_6FCComp_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":212
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.fccomp_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->natural_name;

  /* "bright.pyx":213
 *         def __get__(self):
 *             cdef std.string n = self.fccomp_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":215
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_6FCComp_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_6FCComp_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FCComp.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":216
 * 
 *         def __set__(self, char * n):
 *             self.fccomp_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":220
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_6FCComp_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":221
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":222
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->IsosIn;

  /* "bright.pyx":223
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":225
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_6FCComp_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_6FCComp_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":226
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fccomp_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":230
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_6FCComp_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":231
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":232
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->IsosOut;

  /* "bright.pyx":233
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fccomp_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":235
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_6FCComp_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_6FCComp_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":236
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fccomp_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":240
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_6FCComp_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":241
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":243
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_6FCComp_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_6FCComp_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":244
 * 
 *         def __set__(self, dict pi):
 *             self.fccomp_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":248
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_6FCComp_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":249
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":251
 *             return conv.map_to_dict_str_dbl(self.fccomp_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_6FCComp_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_6FCComp_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":252
 * 
 *         def __set__(self, dict po):
 *             self.fccomp_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":256
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fccomp_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_6FCComp_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":257
 *     property PassNum:
 *         def __get__(self):
 *             return self.fccomp_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":259
 *             return self.fccomp_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_6FCComp_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_6FCComp_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FCComp.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":260
 * 
 *         def __set__(self, int pn):
 *             self.fccomp_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":264
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.fccomp_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_6FCComp_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_6FCComp_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":265
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.fccomp_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":267
 *             return conv.cpp_to_py_set_str(self.fccomp_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.fccomp_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_6FCComp_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_6FCComp_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":268
 * 
 *         def __set__(self, set p2t):
 *             self.fccomp_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 *     #
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FCComp.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":274
 *     #
 * 
 *     def writeIsoPass(self):             # <<<<<<<<<<<<<<
 *         """This method is responsible for adding a new pass to the output text file
 *         "{FCComp.name}Isos.txt" for this component.  Further calculations should
 */

static PyObject *__pyx_pf_6bright_6FCComp_2writeIsoPass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_2writeIsoPass[] = "This method is responsible for adding a new pass to the output text file \n        \"{FCComp.name}Isos.txt\" for this component.  Further calculations should\n        not be performed after :meth:`writeIsoPass` has been called.\n\n        This function has one very important subtlety: it does not write out mass streams data.\n        Rather, input columns are given as normalized isotopic vectors.\n        As weight fractions, input columns are in units of [kgInIso/kgIsosIn.mass].\n        Moreover, the output columns are given in terms relative to the mass of the input mass, \n        [kgOutIso/kgIsosIn.mass].  These are calculated via the following expressions.\n\n        .. math::\n\n            \\mbox{inpcol[iso]} = \\mbox{IsosIn.comp[iso]}\n\n            \\mbox{outcol[iso]} = \\mbox{IsosOut.comp[iso]} \times \014rac{\\mbox{IsosOut.mass}}{\\mbox{IsosIn.mass}}\n\n        Because of the units of these two columns, total mass flow data may often only be recovered via the \n        a \"Mass\" parameter in the \"{FCComp.name}Params.txt\" file.  Here is a sample LWRIsos.txt file for a\n        light water reactor for the first pass::\n\n            Isotope 1in             1out    \n            H1      0.000000E+00    0.000000E+00\n            H3      0.000000E+00    8.568522E-08\n            HE4     0.000000E+00    4.421615E-07\n            B10     0.000000E+00    0.000000E+00\n            B11     0.000000E+00    0.000000E+00\n            C14     0.000000E+00    4.015091E-11\n            O16     0.000000E+00    0.000000E+00\n            SR90    0.000000E+00    8.221283E-04\n            TC99    0.000000E+00    1.112580E-03\n            CS137   0.000000E+00    1.821226E-03\n            U234    0.000000E+00    2.807466E-06\n            U235    4.773292E-02    8.951725E-03\n            U236    0.000000E+00    6.155297E-03\n            U237    0.000000E+00    1.719458E-05\n            U238    9.522671E-01    9.211956E-01\n            U239    0.000000E+00    6.953862E-07""\n            NP237   0.000000E+00    8.057270E-04\n            PU238   0.000000E+00    2.842232E-04\n            PU239   0.000000E+00    5.353362E-03\n            PU240   0.000000E+00    2.114728E-03\n\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_2writeIsoPass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("writeIsoPass");

  /* "bright.pyx":318
 * 
 *         """
 *         self.fccomp_pointer.writeIsoPass()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->writeIsoPass();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":321
 * 
 * 
 *     def writeParamPass(self):             # <<<<<<<<<<<<<<
 *         """What writeIsoPass() does for a component's input and output isotopics,
 *         this function does for the components parameters.  To ensure that meaningful
 */

static PyObject *__pyx_pf_6bright_6FCComp_3writeParamPass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_3writeParamPass[] = "What writeIsoPass() does for a component's input and output isotopics, \n        this function does for the components parameters.  To ensure that meaningful \n        data is available, writeParamPass() first must have setParams()\n        called elsewhere in the program.  Note that to get the pass numbering correct, \n        PassNum should always be incremented prior to this method.  The \n        following is an example of \"{FCComp.name}Params.txt\" for a light water \n        reactor spent fuel reprocessing facility::\n\n            Param   1in             1out    \n            Mass    9.985828E-01    9.975915E-01\n\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_3writeParamPass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("writeParamPass");

  /* "bright.pyx":334
 * 
 *         """
 *         self.fccomp_pointer.writeParamPass()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->writeParamPass();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":337
 * 
 * 
 *     def writeText(self):             # <<<<<<<<<<<<<<
 *         """This method calls writeIsoPass() and then, if available, calls
 *         writeParamPass().  This is convience function for producing
 */

static PyObject *__pyx_pf_6bright_6FCComp_4writeText(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_4writeText[] = "This method calls writeIsoPass() and then, if available, calls \n        writeParamPass().  This is convience function for producing \n        text-based output.  However, using writeout() is recommended.\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_4writeText(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("writeText");

  /* "bright.pyx":342
 *         text-based output.  However, using writeout() is recommended.
 *         """
 *         self.fccomp_pointer.writeText()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->writeText();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":345
 * 
 * 
 *     def writeHDF5(self):             # <<<<<<<<<<<<<<
 *         """This method writes out the isotopic pass data to an HDF5 file.
 *         Then, if available, it also writes parameter data as well.
 */

static PyObject *__pyx_pf_6bright_6FCComp_5writeHDF5(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_5writeHDF5[] = "This method writes out the isotopic pass data to an HDF5 file. \n        Then, if available, it also writes parameter data as well.  \n        Using writeout() instead is recommended.\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_5writeHDF5(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("writeHDF5");

  /* "bright.pyx":350
 *         Using writeout() instead is recommended.
 *         """
 *         self.fccomp_pointer.writeHDF5()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->writeHDF5();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":353
 * 
 * 
 *     def writeout(self):             # <<<<<<<<<<<<<<
 *         """This is a convenience function that first increments up PassNum.
 *         Then, it checks to see if there are any parameters for this component.
 */

static PyObject *__pyx_pf_6bright_6FCComp_6writeout(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_6writeout[] = "This is a convenience function that first increments up PassNum.\n        Then, it checks to see if there are any parameters for this component.\n        If there are, it sets the current values using :meth:`setParams`.\n\n        If BriPy.write_hdf5 is set, then writeHDF5() is called.\n\n        If BriPy.write_text is set, then writeText() is called.\n\n        This is what is most often used to write Bright output.  Therefore it is\n        seen as the last step for every component in each pass.\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_6writeout(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("writeout");

  /* "bright.pyx":365
 *         seen as the last step for every component in each pass.
 *         """
 *         self.fccomp_pointer.writeout()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->writeout();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":370
 *     # Virtual methods
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """By calling this method, all parameter values are calculated and set for the fuel cycle component.
 *         This should be done following a doCalc() calculation but before data is written out.
 */

static PyObject *__pyx_pf_6bright_6FCComp_7setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_7setParams[] = "By calling this method, all parameter values are calculated and set for the fuel cycle component.\n        This should be done following a doCalc() calculation but before data is written out.\n        If a component has important parameters associated with it, this function must be overridden and called.\n\n        Note that this is called first thing when writeParamPass() is called.  For example, reprocessing only \n        has a \"Mass\" parameter.  Translated into Python, setParams() here looks like the following::\n\n            def setParams(self):\n                self.ParamsIn[\"Mass\"]  = self.IsosIn.mass\n                self.ParamsOut[\"Mass\"] = self.IsosOut.mass\n                return\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_7setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":383
 *                 return
 *         """
 *         self.fccomp_pointer.setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":386
 * 
 * 
 *     def doCalc(self):             # <<<<<<<<<<<<<<
 *         """This method is used to determine a component's output isotopics from its input isotopics.
 *         Therefore, this is typically where the bulk of a fuel cycle component's algorithm lies.
 */

static PyObject *__pyx_pf_6bright_6FCComp_8doCalc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_6FCComp_8doCalc[] = "This method is used to determine a component's output isotopics from its input isotopics.\n        Therefore, this is typically where the bulk of a fuel cycle component's algorithm lies.\n        As each component type has a distinct methodology, the doCalc() method  needs \n        to be overridden child classes.\n\n        This method should return IsosOut so that component calculations may be easily \n        daisy-chained together.\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n\n        ";
static PyObject *__pyx_pf_6bright_6FCComp_8doCalc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("doCalc");

  /* "bright.pyx":404
 * 
 *         """
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *         py_ms.ms_pointer[0] = self.fccomp_pointer.doCalc()
 *         return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":405
 *         """
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *         py_ms.ms_pointer[0] = self.fccomp_pointer.doCalc()             # <<<<<<<<<<<<<<
 *         return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FCComp *)__pyx_v_self)->fccomp_pointer->doCalc();

  /* "bright.pyx":406
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *         py_ms.ms_pointer[0] = self.fccomp_pointer.doCalc()
 *         return py_ms             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FCComp.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":425
 *     #cdef cpp_bright.EnrichmentParameters * ep_pointer
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.ep_pointer = new cpp_bright.EnrichmentParameters()
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "bright.pyx":426
 * 
 *     def __cinit__(self):
 *         self.ep_pointer = new cpp_bright.EnrichmentParameters()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer = new EnrichmentParameters();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":428
 *         self.ep_pointer = new cpp_bright.EnrichmentParameters()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.ep_pointer
 * 
 */

static void __pyx_pf_6bright_20EnrichmentParameters_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_20EnrichmentParameters_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":429
 * 
 *     def __dealloc__(self):
 *         del self.ep_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":437
 * 
 *     property alpha_0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.alpha_0
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_7alpha_0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_7alpha_0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":438
 *     property alpha_0:
 *         def __get__(self):
 *             return self.ep_pointer.alpha_0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->alpha_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.alpha_0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":440
 *             return self.ep_pointer.alpha_0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.alpha_0 = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_7alpha_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_7alpha_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":441
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.alpha_0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->alpha_0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.alpha_0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":445
 * 
 *     property Mstar_0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.Mstar_0
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_7Mstar_0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_7Mstar_0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":446
 *     property Mstar_0:
 *         def __get__(self):
 *             return self.ep_pointer.Mstar_0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->Mstar_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.Mstar_0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":448
 *             return self.ep_pointer.Mstar_0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.Mstar_0 = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_7Mstar_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_7Mstar_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":449
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.Mstar_0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->Mstar_0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.Mstar_0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":453
 * 
 *     property j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.j
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_1j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_1j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":454
 *     property j:
 *         def __get__(self):
 *             return self.ep_pointer.j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":456
 *             return self.ep_pointer.j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.j = <int> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_1j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_1j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":457
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.j = <int> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":461
 * 
 *     property k:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.k
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_1k___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_1k___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":462
 *     property k:
 *         def __get__(self):
 *             return self.ep_pointer.k             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.k.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":464
 *             return self.ep_pointer.k
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.k = <int> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":465
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.k = <int> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->k = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.k.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":469
 * 
 *     property N0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.N0
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_2N0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_2N0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":470
 *     property N0:
 *         def __get__(self):
 *             return self.ep_pointer.N0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->N0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.N0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":472
 *             return self.ep_pointer.N0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.N0 = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_2N0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_2N0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":473
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.N0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->N0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.N0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":477
 * 
 *     property M0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.M0
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_2M0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_2M0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":478
 *     property M0:
 *         def __get__(self):
 *             return self.ep_pointer.M0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->M0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.M0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":480
 *             return self.ep_pointer.M0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.M0 = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_2M0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_2M0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":481
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.M0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->M0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.M0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":485
 * 
 *     property xP_j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.xP_j
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_4xP_j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_4xP_j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":486
 *     property xP_j:
 *         def __get__(self):
 *             return self.ep_pointer.xP_j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->xP_j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.xP_j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":488
 *             return self.ep_pointer.xP_j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.xP_j = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_4xP_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_4xP_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":489
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.xP_j = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->xP_j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.xP_j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":493
 * 
 *     property xW_j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ep_pointer.xW_j
 * 
 */

static PyObject *__pyx_pf_6bright_20EnrichmentParameters_4xW_j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_20EnrichmentParameters_4xW_j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":494
 *     property xW_j:
 *         def __get__(self):
 *             return self.ep_pointer.xW_j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->xW_j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.EnrichmentParameters.xW_j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":496
 *             return self.ep_pointer.xW_j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.ep_pointer.xW_j = <double> value
 * 
 */

static int __pyx_pf_6bright_20EnrichmentParameters_4xW_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_20EnrichmentParameters_4xW_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":497
 * 
 *         def __set__(self, value):
 *             self.ep_pointer.xW_j = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_self)->ep_pointer->xW_j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.EnrichmentParameters.xW_j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":501
 * 
 * 
 * def UraniumEnrichmentDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.EnrichmentParameters cpp_ued = cpp_bright.fillUraniumEnrichmentDefaults()
 *     cdef EnrichmentParameters ued = EnrichmentParameters()
 */

static PyObject *__pyx_pf_6bright_4UraniumEnrichmentDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6bright_4UraniumEnrichmentDefaults = {__Pyx_NAMESTR("UraniumEnrichmentDefaults"), (PyCFunction)__pyx_pf_6bright_4UraniumEnrichmentDefaults, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pf_6bright_4UraniumEnrichmentDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  EnrichmentParameters __pyx_v_cpp_ued;
  struct __pyx_obj_6bright_EnrichmentParameters *__pyx_v_ued = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("UraniumEnrichmentDefaults");
  __pyx_self = __pyx_self;

  /* "bright.pyx":502
 * 
 * def UraniumEnrichmentDefaults():
 *     cdef cpp_bright.EnrichmentParameters cpp_ued = cpp_bright.fillUraniumEnrichmentDefaults()             # <<<<<<<<<<<<<<
 *     cdef EnrichmentParameters ued = EnrichmentParameters()
 *     ued.ep_pointer[0] = cpp_ued
 */
  __pyx_v_cpp_ued = fillUraniumEnrichmentDefaults();

  /* "bright.pyx":503
 * def UraniumEnrichmentDefaults():
 *     cdef cpp_bright.EnrichmentParameters cpp_ued = cpp_bright.fillUraniumEnrichmentDefaults()
 *     cdef EnrichmentParameters ued = EnrichmentParameters()             # <<<<<<<<<<<<<<
 *     ued.ep_pointer[0] = cpp_ued
 *     return ued
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_EnrichmentParameters)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ued = ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":504
 *     cdef cpp_bright.EnrichmentParameters cpp_ued = cpp_bright.fillUraniumEnrichmentDefaults()
 *     cdef EnrichmentParameters ued = EnrichmentParameters()
 *     ued.ep_pointer[0] = cpp_ued             # <<<<<<<<<<<<<<
 *     return ued
 * 
 */
  (__pyx_v_ued->ep_pointer[0]) = __pyx_v_cpp_ued;

  /* "bright.pyx":505
 *     cdef EnrichmentParameters ued = EnrichmentParameters()
 *     ued.ep_pointer[0] = cpp_ued
 *     return ued             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ued));
  __pyx_r = ((PyObject *)__pyx_v_ued);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.UraniumEnrichmentDefaults");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ued);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":524
 *     #cdef cpp_bright.Enrichment * e_pointer
 * 
 *     def __cinit__(self, enrich_params=None, char * name=""):             # <<<<<<<<<<<<<<
 *         cdef EnrichmentParameters enr_par
 * 
 */

static int __pyx_pf_6bright_10Enrichment___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_10Enrichment___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_enrich_params = 0;
  char *__pyx_v_name;
  struct __pyx_obj_6bright_EnrichmentParameters *__pyx_v_enr_par;
  int __pyx_r;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__enrich_params,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__enrich_params);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_enrich_params = values[0];
    if (values[1]) {
      __pyx_v_name = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_enrich_params = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_enrich_params = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_enr_par = ((struct __pyx_obj_6bright_EnrichmentParameters *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":527
 *         cdef EnrichmentParameters enr_par
 * 
 *         if enrich_params is None:             # <<<<<<<<<<<<<<
 *             self.e_pointer = new cpp_bright.Enrichment(std.string(name))
 *         elif isinstance(enrich_params, EnrichmentParameters):
 */
  __pyx_t_1 = (__pyx_v_enrich_params == Py_None);
  if (__pyx_t_1) {

    /* "bright.pyx":528
 * 
 *         if enrich_params is None:
 *             self.e_pointer = new cpp_bright.Enrichment(std.string(name))             # <<<<<<<<<<<<<<
 *         elif isinstance(enrich_params, EnrichmentParameters):
 *             enr_par = enrich_params
 */
    ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer = new Enrichment(std::string(__pyx_v_name));
    goto __pyx_L6;
  }

  /* "bright.pyx":529
 *         if enrich_params is None:
 *             self.e_pointer = new cpp_bright.Enrichment(std.string(name))
 *         elif isinstance(enrich_params, EnrichmentParameters):             # <<<<<<<<<<<<<<
 *             enr_par = enrich_params
 *             self.e_pointer = new cpp_bright.Enrichment(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0], std.string(name))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_enrich_params, ((PyObject*)__pyx_ptype_6bright_EnrichmentParameters)); 
  if (__pyx_t_1) {

    /* "bright.pyx":530
 *             self.e_pointer = new cpp_bright.Enrichment(std.string(name))
 *         elif isinstance(enrich_params, EnrichmentParameters):
 *             enr_par = enrich_params             # <<<<<<<<<<<<<<
 *             self.e_pointer = new cpp_bright.Enrichment(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0], std.string(name))
 * 
 */
    if (!(likely(((__pyx_v_enrich_params) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_enrich_params, __pyx_ptype_6bright_EnrichmentParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_enrich_params);
    __Pyx_DECREF(((PyObject *)__pyx_v_enr_par));
    __pyx_v_enr_par = ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_enrich_params);

    /* "bright.pyx":531
 *         elif isinstance(enrich_params, EnrichmentParameters):
 *             enr_par = enrich_params
 *             self.e_pointer = new cpp_bright.Enrichment(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0], std.string(name))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer = new Enrichment((__pyx_v_enr_par->ep_pointer[0]), std::string(__pyx_v_name));
    goto __pyx_L6;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_enr_par);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":533
 *             self.e_pointer = new cpp_bright.Enrichment(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0], std.string(name))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.e_pointer
 * 
 */

static void __pyx_pf_6bright_10Enrichment_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_10Enrichment_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":534
 * 
 *     def __dealloc__(self):
 *         del self.e_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":544
 * 
 *     property alpha_0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.alpha_0
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_7alpha_0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_7alpha_0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":545
 *     property alpha_0:
 *         def __get__(self):
 *             return self.e_pointer.alpha_0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->alpha_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.alpha_0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":547
 *             return self.e_pointer.alpha_0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.alpha_0 = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_7alpha_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_7alpha_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":548
 * 
 *         def __set__(self, value):
 *             self.e_pointer.alpha_0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->alpha_0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.alpha_0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":552
 * 
 *     property Mstar_0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.Mstar_0
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_7Mstar_0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_7Mstar_0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":553
 *     property Mstar_0:
 *         def __get__(self):
 *             return self.e_pointer.Mstar_0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->Mstar_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.Mstar_0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":555
 *             return self.e_pointer.Mstar_0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.Mstar_0 = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_7Mstar_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_7Mstar_0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":556
 * 
 *         def __set__(self, value):
 *             self.e_pointer.Mstar_0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->Mstar_0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.Mstar_0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":560
 * 
 *     property Mstar:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.Mstar
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_5Mstar___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_5Mstar___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":561
 *     property Mstar:
 *         def __get__(self):
 *             return self.e_pointer.Mstar             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->Mstar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.Mstar.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":563
 *             return self.e_pointer.Mstar
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.Mstar = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_5Mstar_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_5Mstar_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":564
 * 
 *         def __set__(self, value):
 *             self.e_pointer.Mstar = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->Mstar = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.Mstar.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":568
 * 
 *     property IsosTail:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosTail
 */

static PyObject *__pyx_pf_6bright_10Enrichment_8IsosTail___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_8IsosTail___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":569
 *     property IsosTail:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosTail
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":570
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosTail             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosTail;

  /* "bright.pyx":571
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosTail
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.IsosTail.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":573
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.e_pointer.IsosTail = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_10Enrichment_8IsosTail_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_10Enrichment_8IsosTail_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":574
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.e_pointer.IsosTail = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosTail = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.IsosTail.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":578
 * 
 *     property j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.j
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_1j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_1j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":579
 *     property j:
 *         def __get__(self):
 *             return self.e_pointer.j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":581
 *             return self.e_pointer.j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.j = <int> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_1j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_1j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":582
 * 
 *         def __set__(self, value):
 *             self.e_pointer.j = <int> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":586
 * 
 *     property k:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.k
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_1k___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_1k___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":587
 *     property k:
 *         def __get__(self):
 *             return self.e_pointer.k             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.k.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":589
 *             return self.e_pointer.k
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.k = <int> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":590
 * 
 *         def __set__(self, value):
 *             self.e_pointer.k = <int> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->k = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.k.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":594
 * 
 *     property xP_j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.xP_j
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_4xP_j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_4xP_j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":595
 *     property xP_j:
 *         def __get__(self):
 *             return self.e_pointer.xP_j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->xP_j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.xP_j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":597
 *             return self.e_pointer.xP_j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.xP_j = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_4xP_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_4xP_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":598
 * 
 *         def __set__(self, value):
 *             self.e_pointer.xP_j = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->xP_j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.xP_j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":602
 * 
 *     property xW_j:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.xW_j
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_4xW_j___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_4xW_j___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":603
 *     property xW_j:
 *         def __get__(self):
 *             return self.e_pointer.xW_j             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->xW_j); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.xW_j.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":605
 *             return self.e_pointer.xW_j
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.xW_j = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_4xW_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_4xW_j_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":606
 * 
 *         def __set__(self, value):
 *             self.e_pointer.xW_j = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->xW_j = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.xW_j.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":610
 * 
 *     property N:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.N
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_1N___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_1N___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":611
 *     property N:
 *         def __get__(self):
 *             return self.e_pointer.N             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->N); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.N.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":613
 *             return self.e_pointer.N
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.N = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_1N_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_1N_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":614
 * 
 *         def __set__(self, value):
 *             self.e_pointer.N = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->N = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.N.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":618
 * 
 *     property M:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.M
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_1M___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_1M___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":619
 *     property M:
 *         def __get__(self):
 *             return self.e_pointer.M             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->M); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.M.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":621
 *             return self.e_pointer.M
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.M = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_1M_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_1M_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":622
 * 
 *         def __set__(self, value):
 *             self.e_pointer.M = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->M = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.M.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":626
 * 
 *     property N0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.N0
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_2N0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_2N0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":627
 *     property N0:
 *         def __get__(self):
 *             return self.e_pointer.N0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->N0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.N0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":629
 *             return self.e_pointer.N0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.N0 = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_2N0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_2N0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":630
 * 
 *         def __set__(self, value):
 *             self.e_pointer.N0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->N0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.N0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":634
 * 
 *     property M0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.M0
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_2M0___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_2M0___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":635
 *     property M0:
 *         def __get__(self):
 *             return self.e_pointer.M0             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->M0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.M0.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":637
 *             return self.e_pointer.M0
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.M0 = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_2M0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_2M0_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":638
 * 
 *         def __set__(self, value):
 *             self.e_pointer.M0 = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->M0 = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.M0.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":642
 * 
 *     property TotalPerFeed:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.TotalPerFeed
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_12TotalPerFeed___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_12TotalPerFeed___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":643
 *     property TotalPerFeed:
 *         def __get__(self):
 *             return self.e_pointer.TotalPerFeed             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->TotalPerFeed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.TotalPerFeed.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":645
 *             return self.e_pointer.TotalPerFeed
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.TotalPerFeed = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_12TotalPerFeed_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_12TotalPerFeed_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":646
 * 
 *         def __set__(self, value):
 *             self.e_pointer.TotalPerFeed = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->TotalPerFeed = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.TotalPerFeed.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":650
 * 
 *     property SWUperFeed:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.SWUperFeed
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_10SWUperFeed___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_10SWUperFeed___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":651
 *     property SWUperFeed:
 *         def __get__(self):
 *             return self.e_pointer.SWUperFeed             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->SWUperFeed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.SWUperFeed.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":653
 *             return self.e_pointer.SWUperFeed
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.SWUperFeed = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_10SWUperFeed_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_10SWUperFeed_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":654
 * 
 *         def __set__(self, value):
 *             self.e_pointer.SWUperFeed = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->SWUperFeed = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.SWUperFeed.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":658
 * 
 *     property SWUperProduct:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.SWUperProduct
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_13SWUperProduct___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_13SWUperProduct___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":659
 *     property SWUperProduct:
 *         def __get__(self):
 *             return self.e_pointer.SWUperProduct             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->SWUperProduct); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.SWUperProduct.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":661
 *             return self.e_pointer.SWUperProduct
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.e_pointer.SWUperProduct = <double> value
 * 
 */

static int __pyx_pf_6bright_10Enrichment_13SWUperProduct_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_10Enrichment_13SWUperProduct_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":662
 * 
 *         def __set__(self, value):
 *             self.e_pointer.SWUperProduct = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->SWUperProduct = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.SWUperProduct.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":668
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.e_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_10Enrichment_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":669
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.e_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->name;

  /* "bright.pyx":670
 *         def __get__(self):
 *             cdef std.string n = self.e_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":672
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.e_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_10Enrichment_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_10Enrichment_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":673
 * 
 *         def __set__(self, char * n):
 *             self.e_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":677
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.e_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_10Enrichment_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":678
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.e_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->natural_name;

  /* "bright.pyx":679
 *         def __get__(self):
 *             cdef std.string n = self.e_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":681
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.e_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_10Enrichment_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_10Enrichment_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":682
 * 
 *         def __set__(self, char * n):
 *             self.e_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":686
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_10Enrichment_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":687
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":688
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosIn;

  /* "bright.pyx":689
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":691
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.e_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_10Enrichment_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_10Enrichment_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":692
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.e_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":696
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_10Enrichment_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":697
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":698
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosOut;

  /* "bright.pyx":699
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.e_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":701
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.e_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_10Enrichment_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_10Enrichment_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":702
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.e_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":706
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":707
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":709
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.e_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_10Enrichment_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_10Enrichment_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":710
 * 
 *         def __set__(self, dict pi):
 *             self.e_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":714
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":715
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":717
 *             return conv.map_to_dict_str_dbl(self.e_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.e_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_10Enrichment_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_10Enrichment_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":718
 * 
 *         def __set__(self, dict po):
 *             self.e_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":722
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.e_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":723
 *     property PassNum:
 *         def __get__(self):
 *             return self.e_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":725
 *             return self.e_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.e_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_10Enrichment_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_10Enrichment_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":726
 * 
 *         def __set__(self, int pn):
 *             self.e_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":730
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.e_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_10Enrichment_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":731
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.e_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":733
 *             return conv.cpp_to_py_set_str(self.e_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.e_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_10Enrichment_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_10Enrichment_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":734
 * 
 *         def __set__(self, set p2t):
 *             self.e_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":742
 *     #
 * 
 *     def initialize(self, EnrichmentParameters enrich_params):             # <<<<<<<<<<<<<<
 *         """The initialize function takes an enrichment parameter object and sets
 *         the corresponding Enrichment attributes to the same value.
 */

static PyObject *__pyx_pf_6bright_10Enrichment_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_enrich_params); /*proto*/
static char __pyx_doc_6bright_10Enrichment_2initialize[] = "The initialize function takes an enrichment parameter object and sets\n        the corresponding Enrichment attributes to the same value.\n\n        Args:\n            * enrich_params (EnrichmentParameters): A class containing the values to\n              (re-)initialize an Enrichment cascade with.\n        ";
static PyObject *__pyx_pf_6bright_10Enrichment_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_enrich_params) {
  struct __pyx_obj_6bright_EnrichmentParameters *__pyx_v_enr_par = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_enrich_params), __pyx_ptype_6bright_EnrichmentParameters, 1, "enrich_params", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":750
 *               (re-)initialize an Enrichment cascade with.
 *         """
 *         cdef EnrichmentParameters enr_par = enrich_params             # <<<<<<<<<<<<<<
 *         self.e_pointer.initialize(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0])
 * 
 */
  __Pyx_INCREF(__pyx_v_enrich_params);
  __pyx_v_enr_par = ((struct __pyx_obj_6bright_EnrichmentParameters *)__pyx_v_enrich_params);

  /* "bright.pyx":751
 *         """
 *         cdef EnrichmentParameters enr_par = enrich_params
 *         self.e_pointer.initialize(<cpp_bright.EnrichmentParameters> enr_par.ep_pointer[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->initialize((__pyx_v_enr_par->ep_pointer[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Enrichment.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_enr_par);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":754
 * 
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Here the parameters for Enrichment are set::
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_3setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_10Enrichment_3setParams[] = "Here the parameters for Enrichment are set::\n\n            self.ParamsIn[\"MassFeed\"]  = self.IsosIn.mass\n            self.ParamsOut[\"MassFeed\"] = 0.0\n\n            self.ParamsIn[\"MassProduct\"]  = 0.0\n            self.ParamsOut[\"MassProduct\"] = self.IsosOut.mass\n\n            self.ParamsIn[\"MassTails\"]  = 0.0\n            self.ParamsOut[\"MassTails\"] = self.IsosTail.mass\n\n            self.ParamsIn[\"N\"]  = self.N\n            self.ParamsOut[\"N\"] = self.N\n\n            self.ParamsIn[\"M\"]  = self.M\n            self.ParamsOut[\"M\"] = self.M\n\n            self.ParamsIn[\"Mstar\"]  = self.Mstar\n            self.ParamsOut[\"Mstar\"] = self.Mstar\n\n            self.ParamsIn[\"TotalPerFeed\"]  = self.TotalPerFeed\n            self.ParamsOut[\"TotalPerFeed\"] = self.TotalPerFeed\n\n            self.ParamsIn[\"SWUperFeed\"]  = self.SWUperFeed\n            self.ParamsOut[\"SWUperFeed\"] = 0.0\n\n            self.ParamsIn[\"SWUperProduct\"]  = 0.0\n            self.ParamsOut[\"SWUperProduct\"] = self.SWUperProduct\n\n        ";
static PyObject *__pyx_pf_6bright_10Enrichment_3setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":785
 * 
 *         """
 *         (<cpp_bright.FCComp *> self.e_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":788
 * 
 * 
 *     def doCalc(self, input=None):             # <<<<<<<<<<<<<<
 *         """This method performs an optimization calculation on M* and solves for
 *         appropriate values for all Enrichment attributes.  This includes the
 */

static PyObject *__pyx_pf_6bright_10Enrichment_4doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_10Enrichment_4doCalc[] = "This method performs an optimization calculation on M* and solves for \n        appropriate values for all Enrichment attributes.  This includes the \n        product and waste streams flowing out of the the cascade as well.\n\n        Args:\n            * input (dict or MassStream or None): If input is present, it is set as the component's \n            IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this dictionary \n            is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n\n        ";
static PyObject *__pyx_pf_6bright_10Enrichment_4doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":803
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if input is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":805
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.e_pointer).doCalc()
 *         elif isinstance(input, dict):
 */
  __pyx_t_2 = (__pyx_v_input == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":806
 * 
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.e_pointer).doCalc()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.e_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 */
    (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":807
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.e_pointer).doCalc()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.e_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_2) {

    /* "bright.pyx":808
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.e_pointer).doCalc()
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.e_pointer.doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":809
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.e_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             output.ms_pointer[0] = self.e_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_2) {

    /* "bright.pyx":810
 *             output.ms_pointer[0] = self.e_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.e_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":811
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             output.ms_pointer[0] = self.e_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->doCalc((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":813
 *             output.ms_pointer[0] = self.e_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":816
 * 
 * 
 *     def PoverF(self, double x_F, double x_P, double x_W):             # <<<<<<<<<<<<<<
 *         """Solves for the product over feed enrichment ratio.
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_5PoverF(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_10Enrichment_5PoverF[] = "Solves for the product over feed enrichment ratio.\n\n        .. math::\n\n            \\frac{p}{f} = \\frac{(x_F - x_W)}{(x_P - x_W)}\n\n        Args:\n            * x_F (float): Feed enrichment.\n            * x_P (float): Product enrichment.\n            * x_W (float): Waste enrichment.\n\n        Returns:\n            * pfratio (float): As calculated above.\n        ";
static PyObject *__pyx_pf_6bright_10Enrichment_5PoverF(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x_F;
  double __pyx_v_x_P;
  double __pyx_v_x_W;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x_F,&__pyx_n_s__x_P,&__pyx_n_s__x_W,0};
  __Pyx_RefNannySetupContext("PoverF");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_F);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_P);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("PoverF", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_W);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("PoverF", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "PoverF") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x_F = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x_F == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_P = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x_P == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_W = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_x_W == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x_F = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x_F == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_P = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x_P == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_W = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_x_W == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PoverF", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.PoverF");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":831
 *             * pfratio (float): As calculated above.
 *         """
 *         return self.e_pointer.PoverF(x_F, x_P, x_W)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->PoverF(__pyx_v_x_F, __pyx_v_x_P, __pyx_v_x_W)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.PoverF");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":834
 * 
 * 
 *     def WoverF(self, double x_F, double x_P, double x_W):             # <<<<<<<<<<<<<<
 *         """Solves for the waste over feed enrichment ratio.
 * 
 */

static PyObject *__pyx_pf_6bright_10Enrichment_6WoverF(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_10Enrichment_6WoverF[] = "Solves for the waste over feed enrichment ratio.\n\n        .. math::\n\n            \\frac{p}{f} = \\frac{(x_F - x_P)}{(x_W - x_P)}\n\n        Args:\n            * x_F (float): Feed enrichment.\n            * x_P (float): Product enrichment.\n            * x_W (float): Waste enrichment.\n\n        Returns:\n            * wfratio (float): As calculated above.\n        ";
static PyObject *__pyx_pf_6bright_10Enrichment_6WoverF(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x_F;
  double __pyx_v_x_P;
  double __pyx_v_x_W;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x_F,&__pyx_n_s__x_P,&__pyx_n_s__x_W,0};
  __Pyx_RefNannySetupContext("WoverF");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_F);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_P);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("WoverF", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x_W);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("WoverF", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "WoverF") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x_F = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x_F == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_P = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x_P == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_W = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_x_W == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x_F = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x_F == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_P = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x_P == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_W = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_x_W == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("WoverF", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Enrichment.WoverF");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":849
 *             * wfratio (float): As calculated above.
 *         """
 *         return self.e_pointer.WoverF(x_F, x_P, x_W)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Enrichment *)__pyx_v_self)->e_pointer->WoverF(__pyx_v_x_F, __pyx_v_x_P, __pyx_v_x_W)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Enrichment.WoverF");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":892
 *     #cdef cpp_bright.Reprocess * r_pointer
 * 
 *     def _cpp_sepeff(self, dict d):             # <<<<<<<<<<<<<<
 *         sepeff = {}
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess__cpp_sepeff(PyObject *__pyx_v_self, PyObject *__pyx_v_d); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess__cpp_sepeff(PyObject *__pyx_v_self, PyObject *__pyx_v_d) {
  PyObject *__pyx_v_sepeff;
  PyObject *__pyx_v_key;
  PyObject *__pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("_cpp_sepeff");
  __pyx_v_sepeff = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_key = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_value = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_d), (&PyDict_Type), 1, "d", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":893
 * 
 *     def _cpp_sepeff(self, dict d):
 *         sepeff = {}             # <<<<<<<<<<<<<<
 * 
 *         for key, value in d.items():
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_sepeff));
  __pyx_v_sepeff = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "bright.pyx":895
 *         sepeff = {}
 * 
 *         for key, value in d.items():             # <<<<<<<<<<<<<<
 *             value = float(value)
 * 
 */
  if (unlikely(__pyx_v_d == Py_None)) {
    PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'items'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyDict_Items(__pyx_v_d); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if (PyTuple_CheckExact(__pyx_t_1) && likely(PyTuple_GET_SIZE(__pyx_t_1) == 2)) {
      PyObject* tuple = __pyx_t_1;
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_key);
      __pyx_v_key = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_v_value);
      __pyx_v_value = __pyx_t_5;
      __pyx_t_5 = 0;
    } else {
      __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_UnpackItem(__pyx_t_6, 0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_UnpackItem(__pyx_t_6, 1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      if (__Pyx_EndUnpack(__pyx_t_6, 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_v_key);
      __pyx_v_key = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_v_value);
      __pyx_v_value = __pyx_t_5;
      __pyx_t_5 = 0;
    }

    /* "bright.pyx":896
 * 
 *         for key, value in d.items():
 *             value = float(value)             # <<<<<<<<<<<<<<
 * 
 *             if isinstance(key, int):
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_v_value);
    __pyx_v_value = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "bright.pyx":898
 *             value = float(value)
 * 
 *             if isinstance(key, int):             # <<<<<<<<<<<<<<
 *                 sepeff[key] = value
 *             elif isinstance(key, basestring):
 */
    __pyx_t_8 = PyInt_Check(__pyx_v_key); 
    if (__pyx_t_8) {

      /* "bright.pyx":899
 * 
 *             if isinstance(key, int):
 *                 sepeff[key] = value             # <<<<<<<<<<<<<<
 *             elif isinstance(key, basestring):
 *                 if key in isoname.LLzz:
 */
      if (PyDict_SetItem(((PyObject *)__pyx_v_sepeff), __pyx_v_key, __pyx_v_value) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 899; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }

    /* "bright.pyx":900
 *             if isinstance(key, int):
 *                 sepeff[key] = value
 *             elif isinstance(key, basestring):             # <<<<<<<<<<<<<<
 *                 if key in isoname.LLzz:
 *                     sepeff[isoname.LLzz[key]] = value
 */
    __pyx_t_8 = PyObject_IsInstance(__pyx_v_key, __pyx_builtin_basestring); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_8) {

      /* "bright.pyx":901
 *                 sepeff[key] = value
 *             elif isinstance(key, basestring):
 *                 if key in isoname.LLzz:             # <<<<<<<<<<<<<<
 *                     sepeff[isoname.LLzz[key]] = value
 *                 else:
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__isoname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__LLzz); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = ((PySequence_Contains(__pyx_t_5, __pyx_v_key))); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_8) {

        /* "bright.pyx":902
 *             elif isinstance(key, basestring):
 *                 if key in isoname.LLzz:
 *                     sepeff[isoname.LLzz[key]] = value             # <<<<<<<<<<<<<<
 *                 else:
 *                     sepeff[isoname.mixed_2_zzaaam(key)] = value
 */
        __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__isoname); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyObject_GetAttr(__pyx_t_5, __pyx_n_s__LLzz); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_GetItem(__pyx_t_1, __pyx_v_key); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (PyDict_SetItem(((PyObject *)__pyx_v_sepeff), __pyx_t_5, __pyx_v_value) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "bright.pyx":904
 *                     sepeff[isoname.LLzz[key]] = value
 *                 else:
 *                     sepeff[isoname.mixed_2_zzaaam(key)] = value             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("Separation keys must be strings or integers.")
 */
        __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__isoname); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyObject_GetAttr(__pyx_t_5, __pyx_n_s__mixed_2_zzaaam); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        __Pyx_INCREF(__pyx_v_key);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_key);
        __Pyx_GIVEREF(__pyx_v_key);
        __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        if (PyDict_SetItem(((PyObject *)__pyx_v_sepeff), __pyx_t_4, __pyx_v_value) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_L8:;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "bright.pyx":906
 *                     sepeff[isoname.mixed_2_zzaaam(key)] = value
 *             else:
 *                 raise TypeError("Separation keys must be strings or integers.")             # <<<<<<<<<<<<<<
 * 
 *         return sepeff
 */
      __pyx_t_4 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":908
 *                 raise TypeError("Separation keys must be strings or integers.")
 * 
 *         return sepeff             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, dict sepeff={}, char * name=""):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_sepeff));
  __pyx_r = ((PyObject *)__pyx_v_sepeff);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bright.Reprocess._cpp_sepeff");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_sepeff);
  __Pyx_DECREF(__pyx_v_key);
  __Pyx_DECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":910
 *         return sepeff
 * 
 *     def __cinit__(self, dict sepeff={}, char * name=""):             # <<<<<<<<<<<<<<
 *         sepeff = self._cpp_sepeff(sepeff)
 *         self.r_pointer = new cpp_bright.Reprocess(conv.dict_to_map_int_dbl(sepeff), std.string(name))
 */

static int __pyx_pf_6bright_9Reprocess_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_9Reprocess_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sepeff = 0;
  char *__pyx_v_name;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sepeff,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[0] = __pyx_k_4;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sepeff);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sepeff = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_name = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_sepeff = __pyx_k_4;
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_sepeff = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reprocess.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF(__pyx_v_sepeff);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sepeff), (&PyDict_Type), 1, "sepeff", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":911
 * 
 *     def __cinit__(self, dict sepeff={}, char * name=""):
 *         sepeff = self._cpp_sepeff(sepeff)             # <<<<<<<<<<<<<<
 *         self.r_pointer = new cpp_bright.Reprocess(conv.dict_to_map_int_dbl(sepeff), std.string(name))
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___cpp_sepeff); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(((PyObject *)__pyx_v_sepeff));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_sepeff));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sepeff));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_sepeff));
  __pyx_v_sepeff = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "bright.pyx":912
 *     def __cinit__(self, dict sepeff={}, char * name=""):
 *         sepeff = self._cpp_sepeff(sepeff)
 *         self.r_pointer = new cpp_bright.Reprocess(conv.dict_to_map_int_dbl(sepeff), std.string(name))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer = new Reprocess(__pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_sepeff), std::string(__pyx_v_name));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bright.Reprocess.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_sepeff);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":914
 *         self.r_pointer = new cpp_bright.Reprocess(conv.dict_to_map_int_dbl(sepeff), std.string(name))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.r_pointer
 * 
 */

static void __pyx_pf_6bright_9Reprocess_2__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_9Reprocess_2__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":915
 * 
 *     def __dealloc__(self):
 *         del self.r_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":925
 * 
 *     property sepeff:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r_pointer.sepeff)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess_6sepeff___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_6sepeff___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":926
 *     property sepeff:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r_pointer.sepeff)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->sepeff)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.sepeff.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":928
 *             return conv.map_to_dict_int_dbl(self.r_pointer.sepeff)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             value = self._cpp_sepeff(value)
 *             self.r_pointer.sepeff = conv.dict_to_map_int_dbl(value)
 */

static int __pyx_pf_6bright_9Reprocess_6sepeff_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reprocess_6sepeff_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":929
 * 
 *         def __set__(self, dict value):
 *             value = self._cpp_sepeff(value)             # <<<<<<<<<<<<<<
 *             self.r_pointer.sepeff = conv.dict_to_map_int_dbl(value)
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___cpp_sepeff); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(((PyObject *)__pyx_v_value));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_value));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_value));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_value));
  __pyx_v_value = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "bright.pyx":930
 *         def __set__(self, dict value):
 *             value = self._cpp_sepeff(value)
 *             self.r_pointer.sepeff = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->sepeff = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bright.Reprocess.sepeff.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":936
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.r_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reprocess_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":937
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.r_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->name;

  /* "bright.pyx":938
 *         def __get__(self):
 *             cdef std.string n = self.r_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":940
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.r_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_9Reprocess_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_9Reprocess_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reprocess.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":941
 * 
 *         def __set__(self, char * n):
 *             self.r_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":945
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.r_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reprocess_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":946
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.r_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->natural_name;

  /* "bright.pyx":947
 *         def __get__(self):
 *             cdef std.string n = self.r_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":949
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.r_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_9Reprocess_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_9Reprocess_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reprocess.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":950
 * 
 *         def __set__(self, char * n):
 *             self.r_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":954
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_9Reprocess_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":955
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":956
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->IsosIn;

  /* "bright.pyx":957
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":959
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reprocess_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reprocess_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":960
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reprocess.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":964
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_9Reprocess_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":965
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":966
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->IsosOut;

  /* "bright.pyx":967
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":969
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reprocess_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reprocess_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":970
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reprocess.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":974
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":975
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":977
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.r_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_9Reprocess_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_9Reprocess_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":978
 * 
 *         def __set__(self, dict pi):
 *             self.r_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reprocess.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":982
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":983
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":985
 *             return conv.map_to_dict_str_dbl(self.r_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.r_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_9Reprocess_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_9Reprocess_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":986
 * 
 *         def __set__(self, dict po):
 *             self.r_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reprocess.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":990
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":991
 *     property PassNum:
 *         def __get__(self):
 *             return self.r_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":993
 *             return self.r_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.r_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_9Reprocess_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_9Reprocess_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reprocess.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":994
 * 
 *         def __set__(self, int pn):
 *             self.r_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":998
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.r_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reprocess_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reprocess_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":999
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.r_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1001
 *             return conv.cpp_to_py_set_str(self.r_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.r_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_9Reprocess_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_9Reprocess_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1002
 * 
 *         def __set__(self, set p2t):
 *             self.r_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reprocess.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1010
 *     #
 * 
 *     def initialize(self, dict sepdict):             # <<<<<<<<<<<<<<
 *         """The initialize() function calculates the sepeff from an integer-keyed dictionary
 *         of separation efficiencies.  The difference is that sepdict may contain either elemental or
 */

static PyObject *__pyx_pf_6bright_9Reprocess_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_sepdict); /*proto*/
static char __pyx_doc_6bright_9Reprocess_3initialize[] = "The initialize() function calculates the sepeff from an integer-keyed dictionary\n        of separation efficiencies.  The difference is that sepdict may contain either elemental or\n        isotopic keys and need not contain every isotope tracked.  On the other hand, sepeff\n        must have only zzaaam keys that match exactly the isotopes in BriPy.isos2track.\n\n        Args:\n            * sepdict (dict): Integer valued dictionary of SE to be converted to sepeff.\n        ";
static PyObject *__pyx_pf_6bright_9Reprocess_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_sepdict) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("initialize");
  __Pyx_INCREF(__pyx_v_sepdict);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sepdict), (&PyDict_Type), 1, "sepdict", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1019
 *             * sepdict (dict): Integer valued dictionary of SE to be converted to sepeff.
 *         """
 *         sepdict = self._cpp_sepeff(sepdict)             # <<<<<<<<<<<<<<
 *         self.r_pointer.initialize(conv.dict_to_map_int_dbl(sepdict))
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___cpp_sepeff); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(((PyObject *)__pyx_v_sepdict));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_sepdict));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sepdict));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_sepdict));
  __pyx_v_sepdict = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "bright.pyx":1020
 *         """
 *         sepdict = self._cpp_sepeff(sepdict)
 *         self.r_pointer.initialize(conv.dict_to_map_int_dbl(sepdict))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->initialize(__pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_sepdict));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bright.Reprocess.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_sepdict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1023
 * 
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Here the parameters for Reprocess are set.  For reprocessing, this amounts to just
 *         a "Mass" parameter::
 */

static PyObject *__pyx_pf_6bright_9Reprocess_4setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reprocess_4setParams[] = "Here the parameters for Reprocess are set.  For reprocessing, this amounts to just\n        a \"Mass\" parameter::\n\n            self.ParamsIn[\"Mass\"]  = self.IsosIn.mass\n            self.ParamsOut[\"Mass\"] = self.IsosOut.mass\n\n        ";
static PyObject *__pyx_pf_6bright_9Reprocess_4setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":1031
 * 
 *         """
 *         (<cpp_bright.FCComp *> self.r_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1034
 * 
 * 
 *     def doCalc(self, input=None):             # <<<<<<<<<<<<<<
 *         """This method performs the relatively simply task of multiplying the current input stream by
 *         the SE to form a new output stream::
 */

static PyObject *__pyx_pf_6bright_9Reprocess_5doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reprocess_5doCalc[] = "This method performs the relatively simply task of multiplying the current input stream by \n        the SE to form a new output stream::\n\n            incomp  = self.IsosIn.multByMass()\n            outcomp = {}\n            for iso in incomp.keys():\n                outcomp[iso] = incomp[iso] * sepeff[iso]\n            self.IsosOut = MassStream(outcomp)\n            return self.IsosOut\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_9Reprocess_5doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reprocess.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":1054
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if input is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1056
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r_pointer).doCalc()
 *         elif isinstance(input, dict):
 */
  __pyx_t_2 = (__pyx_v_input == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":1057
 * 
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r_pointer).doCalc()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 */
    (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":1058
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r_pointer).doCalc()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.r_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_2) {

    /* "bright.pyx":1059
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r_pointer).doCalc()
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r_pointer.doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":1060
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             output.ms_pointer[0] = self.r_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_2) {

    /* "bright.pyx":1061
 *             output.ms_pointer[0] = self.r_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.r_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":1062
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             output.ms_pointer[0] = self.r_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reprocess *)__pyx_v_self)->r_pointer->doCalc((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":1064
 *             output.ms_pointer[0] = self.r_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reprocess.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1082
 *     #cdef cpp_bright.Storage * s_pointer
 * 
 *     def __cinit__(self, char * name=""):             # <<<<<<<<<<<<<<
 *         self.s_pointer = new cpp_bright.Storage(std.string(name))
 * 
 */

static int __pyx_pf_6bright_7Storage___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_7Storage___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_name;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_name = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Storage.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1083
 * 
 *     def __cinit__(self, char * name=""):
 *         self.s_pointer = new cpp_bright.Storage(std.string(name))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer = new Storage(std::string(__pyx_v_name));

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1085
 *         self.s_pointer = new cpp_bright.Storage(std.string(name))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.s_pointer
 * 
 */

static void __pyx_pf_6bright_7Storage_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_7Storage_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":1086
 * 
 *     def __dealloc__(self):
 *         del self.s_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":1096
 * 
 *     property decay_time:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.s_pointer.decay_time
 * 
 */

static PyObject *__pyx_pf_6bright_7Storage_10decay_time___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_10decay_time___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1097
 *     property decay_time:
 *         def __get__(self):
 *             return self.s_pointer.decay_time             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->decay_time); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.decay_time.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1099
 *             return self.s_pointer.decay_time
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.s_pointer.decay_time = <double> value
 * 
 */

static int __pyx_pf_6bright_7Storage_10decay_time_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_7Storage_10decay_time_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "bright.pyx":1100
 * 
 *         def __set__(self, value):
 *             self.s_pointer.decay_time = <double> value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->decay_time = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.decay_time.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1106
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.s_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_7Storage_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1107
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.s_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->name;

  /* "bright.pyx":1108
 *         def __get__(self):
 *             cdef std.string n = self.s_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1110
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.s_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_7Storage_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_7Storage_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1110; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Storage.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1111
 * 
 *         def __set__(self, char * n):
 *             self.s_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1115
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.s_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_7Storage_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1116
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.s_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->natural_name;

  /* "bright.pyx":1117
 *         def __get__(self):
 *             cdef std.string n = self.s_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1119
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.s_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_7Storage_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_7Storage_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Storage.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1120
 * 
 *         def __set__(self, char * n):
 *             self.s_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1124
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_7Storage_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1125
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1126
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->IsosIn;

  /* "bright.pyx":1127
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1129
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.s_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_7Storage_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_7Storage_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1130
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.s_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1134
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_7Storage_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1135
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1136
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->IsosOut;

  /* "bright.pyx":1137
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.s_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1139
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.s_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_7Storage_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_7Storage_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1140
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.s_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1144
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_7Storage_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1145
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1147
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.s_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_7Storage_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_7Storage_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1148
 * 
 *         def __set__(self, dict pi):
 *             self.s_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1152
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_7Storage_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1153
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1155
 *             return conv.map_to_dict_str_dbl(self.s_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.s_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_7Storage_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_7Storage_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1156
 * 
 *         def __set__(self, dict po):
 *             self.s_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1160
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.s_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_7Storage_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1161
 *     property PassNum:
 *         def __get__(self):
 *             return self.s_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1163
 *             return self.s_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.s_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_7Storage_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_7Storage_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Storage.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1164
 * 
 *         def __set__(self, int pn):
 *             self.s_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1168
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.s_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_7Storage_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_7Storage_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1169
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.s_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1171
 *             return conv.cpp_to_py_set_str(self.s_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.s_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_7Storage_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_7Storage_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1172
 * 
 *         def __set__(self, set p2t):
 *             self.s_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Storage.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1179
 *     #
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Here the parameters for Storage are set.  For storage, this amounts to just
 *         a "Mass" parameter::
 */

static PyObject *__pyx_pf_6bright_7Storage_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_7Storage_2setParams[] = "Here the parameters for Storage are set.  For storage, this amounts to just\n        a \"Mass\" parameter::\n\n            self.ParamsIn[\"Mass\"]  = self.IsosIn.mass\n            self.ParamsOut[\"Mass\"] = self.IsosOut.mass\n        ";
static PyObject *__pyx_pf_6bright_7Storage_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":1186
 *             self.ParamsOut["Mass"] = self.IsosOut.mass
 *         """
 *         (<cpp_bright.FCComp *> self.s_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1189
 * 
 * 
 *     def doCalc(self, input=None, decay_time=None):             # <<<<<<<<<<<<<<
 *         """As usual, doCalc sets up the Storage component's input stream and calculates the corresponding
 *         output MassStream.  Here, this amounts to calling bateman() for every nuclide in
 */

static PyObject *__pyx_pf_6bright_7Storage_3doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_7Storage_3doCalc[] = "As usual, doCalc sets up the Storage component's input stream and calculates the corresponding \n        output MassStream.  Here, this amounts to calling bateman() for every nuclide in \n        IsosIn, for each chain that ends with a nuclide in isos2track.\n\n        This method is public and accessible from Python.\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n            * decay_time (float): decay_time is set to the time value here prior to any other calculations.  This\n              time has units of seconds.\n\n        Returns:\n            * output (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_7Storage_3doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  PyObject *__pyx_v_decay_time = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  double __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,&__pyx_n_s__decay_time,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__decay_time);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1189; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
    __pyx_v_decay_time = values[1];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    __pyx_v_decay_time = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_decay_time = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1189; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Storage.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":1207
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if decay_time is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1209
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if decay_time is None:             # <<<<<<<<<<<<<<
 *             if input is None:
 *                 output.ms_pointer[0] = (<cpp_bright.FCComp *> self.s_pointer).doCalc()
 */
  __pyx_t_2 = (__pyx_v_decay_time == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":1210
 * 
 *         if decay_time is None:
 *             if input is None:             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = (<cpp_bright.FCComp *> self.s_pointer).doCalc()
 *             elif isinstance(input, dict):
 */
    __pyx_t_2 = (__pyx_v_input == Py_None);
    if (__pyx_t_2) {

      /* "bright.pyx":1211
 *         if decay_time is None:
 *             if input is None:
 *                 output.ms_pointer[0] = (<cpp_bright.FCComp *> self.s_pointer).doCalc()             # <<<<<<<<<<<<<<
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 */
      (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer)->doCalc();
      goto __pyx_L7;
    }

    /* "bright.pyx":1212
 *             if input is None:
 *                 output.ms_pointer[0] = (<cpp_bright.FCComp *> self.s_pointer).doCalc()
 *             elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *             elif isinstance(input, mass_stream.MassStream):
 */
    __pyx_t_2 = PyDict_Check(__pyx_v_input); 
    if (__pyx_t_2) {

      /* "bright.pyx":1213
 *                 output.ms_pointer[0] = (<cpp_bright.FCComp *> self.s_pointer).doCalc()
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input
 */
      if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
      goto __pyx_L7;
    }

    /* "bright.pyx":1214
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *             elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *                 in_ms = input
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
    if (__pyx_t_2) {

      /* "bright.pyx":1215
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 *             else:
 */
      if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_INCREF(__pyx_v_input);
      __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
      __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

      /* "bright.pyx":1216
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")
 */
      (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->doCalc((__pyx_v_in_ms->ms_pointer[0]));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "bright.pyx":1218
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")             # <<<<<<<<<<<<<<
 *         else:
 *             if input is None:
 */
      __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L7:;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":1220
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")
 *         else:
 *             if input is None:             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<double> decay_time)
 *             elif isinstance(input, dict):
 */
    __pyx_t_2 = (__pyx_v_input == Py_None);
    if (__pyx_t_2) {

      /* "bright.pyx":1221
 *         else:
 *             if input is None:
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<double> decay_time)             # <<<<<<<<<<<<<<
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input), <double> decay_time)
 */
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_decay_time); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->doCalc(__pyx_t_3);
      goto __pyx_L8;
    }

    /* "bright.pyx":1222
 *             if input is None:
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<double> decay_time)
 *             elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input), <double> decay_time)
 *             elif isinstance(input, mass_stream.MassStream):
 */
    __pyx_t_2 = PyDict_Check(__pyx_v_input); 
    if (__pyx_t_2) {

      /* "bright.pyx":1223
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<double> decay_time)
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input), <double> decay_time)             # <<<<<<<<<<<<<<
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input
 */
      if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_decay_time); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)), __pyx_t_3);
      goto __pyx_L8;
    }

    /* "bright.pyx":1224
 *             elif isinstance(input, dict):
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input), <double> decay_time)
 *             elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *                 in_ms = input
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0], <double> decay_time)
 */
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
    if (__pyx_t_2) {

      /* "bright.pyx":1225
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(conv.dict_to_map_int_dbl(input), <double> decay_time)
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input             # <<<<<<<<<<<<<<
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0], <double> decay_time)
 *             else:
 */
      if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_INCREF(__pyx_v_input);
      __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
      __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

      /* "bright.pyx":1226
 *             elif isinstance(input, mass_stream.MassStream):
 *                 in_ms = input
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0], <double> decay_time)             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")
 */
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_decay_time); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Storage *)__pyx_v_self)->s_pointer->doCalc((__pyx_v_in_ms->ms_pointer[0]), __pyx_t_3);
      goto __pyx_L8;
    }
    /*else*/ {

      /* "bright.pyx":1228
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0], <double> decay_time)
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
      __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L8:;
  }
  __pyx_L6:;

  /* "bright.pyx":1230
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Storage.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1251
 *     #cdef cpp_bright.FluencePoint * fp_pointer
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.fp_pointer = new cpp_bright.FluencePoint()
 * 
 */

static int __pyx_pf_6bright_12FluencePoint___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_12FluencePoint___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "bright.pyx":1252
 * 
 *     def __cinit__(self):
 *         self.fp_pointer = new cpp_bright.FluencePoint()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer = new FluencePoint();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1254
 *         self.fp_pointer = new cpp_bright.FluencePoint()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.fp_pointer
 * 
 */

static void __pyx_pf_6bright_12FluencePoint_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_12FluencePoint_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":1255
 * 
 *     def __dealloc__(self):
 *         del self.fp_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":1263
 * 
 *     property f:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fp_pointer.f
 * 
 */

static PyObject *__pyx_pf_6bright_12FluencePoint_1f___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12FluencePoint_1f___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1264
 *     property f:
 *         def __get__(self):
 *             return self.fp_pointer.f             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->f); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FluencePoint.f.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1266
 *             return self.fp_pointer.f
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.fp_pointer.f = value
 * 
 */

static int __pyx_pf_6bright_12FluencePoint_1f_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12FluencePoint_1f_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1266; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FluencePoint.f.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1267
 * 
 *         def __set__(self, int value):
 *             self.fp_pointer.f = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->f = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1271
 * 
 *     property F:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fp_pointer.F
 * 
 */

static PyObject *__pyx_pf_6bright_12FluencePoint_1F___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12FluencePoint_1F___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1272
 *     property F:
 *         def __get__(self):
 *             return self.fp_pointer.F             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->F); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FluencePoint.F.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1274
 *             return self.fp_pointer.F
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fp_pointer.F = value
 * 
 */

static int __pyx_pf_6bright_12FluencePoint_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12FluencePoint_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FluencePoint.F.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1275
 * 
 *         def __set__(self, double value):
 *             self.fp_pointer.F = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->F = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1279
 * 
 *     property m:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fp_pointer.m
 * 
 */

static PyObject *__pyx_pf_6bright_12FluencePoint_1m___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_12FluencePoint_1m___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1280
 *     property m:
 *         def __get__(self):
 *             return self.fp_pointer.m             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->m); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FluencePoint.m.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1282
 *             return self.fp_pointer.m
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fp_pointer.m = value
 * 
 */

static int __pyx_pf_6bright_12FluencePoint_1m_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_12FluencePoint_1m_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FluencePoint.m.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1283
 * 
 *         def __set__(self, double value):
 *             self.fp_pointer.m = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FluencePoint *)__pyx_v_self)->fp_pointer->m = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1353
 *     #cdef cpp_bright.ReactorParameters * rp_pointer
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.rp_pointer = new cpp_bright.ReactorParameters()
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "bright.pyx":1354
 * 
 *     def __cinit__(self):
 *         self.rp_pointer = new cpp_bright.ReactorParameters()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer = new ReactorParameters();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1356
 *         self.rp_pointer = new cpp_bright.ReactorParameters()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.rp_pointer
 * 
 */

static void __pyx_pf_6bright_17ReactorParameters_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_17ReactorParameters_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":1357
 * 
 *     def __dealloc__(self):
 *         del self.rp_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":1365
 * 
 *     property batches:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.batches
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_7batches___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_7batches___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1366
 *     property batches:
 *         def __get__(self):
 *             return self.rp_pointer.batches             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->batches); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.batches.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1368
 *             return self.rp_pointer.batches
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.batches = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_7batches_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_7batches_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.batches.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1369
 * 
 *         def __set__(self, int value):
 *             self.rp_pointer.batches = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->batches = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1373
 * 
 *     property flux:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.flux
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_4flux___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_4flux___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1374
 *     property flux:
 *         def __get__(self):
 *             return self.rp_pointer.flux             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->flux); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.flux.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1376
 *             return self.rp_pointer.flux
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.flux = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_4flux_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_4flux_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1376; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.flux.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1377
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.flux = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->flux = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1381
 * 
 *     property FuelForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.FuelForm)
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_8FuelForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_8FuelForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1382
 *     property FuelForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.FuelForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->FuelForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1382; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.FuelForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1384
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.FuelForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.FuelForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_8FuelForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_8FuelForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1385
 * 
 *         def __set__(self, dict value):
 *             self.rp_pointer.FuelForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->FuelForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.FuelForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1389
 * 
 *     property CoolantForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.CoolantForm)
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_11CoolantForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_11CoolantForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1390
 *     property CoolantForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.CoolantForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->CoolantForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.CoolantForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1392
 *             return conv.map_to_dict_str_dbl(self.rp_pointer.CoolantForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.CoolantForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_11CoolantForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_11CoolantForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1393
 * 
 *         def __set__(self, dict value):
 *             self.rp_pointer.CoolantForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->CoolantForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.CoolantForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1397
 * 
 *     property FuelDensity:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.FuelDensity
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_11FuelDensity___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_11FuelDensity___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1398
 *     property FuelDensity:
 *         def __get__(self):
 *             return self.rp_pointer.FuelDensity             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->FuelDensity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.FuelDensity.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1400
 *             return self.rp_pointer.FuelDensity
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.FuelDensity = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_11FuelDensity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_11FuelDensity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1400; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.FuelDensity.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1401
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.FuelDensity = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->FuelDensity = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1405
 * 
 *     property CoolantDensity:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.CoolantDensity
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_14CoolantDensity___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_14CoolantDensity___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1406
 *     property CoolantDensity:
 *         def __get__(self):
 *             return self.rp_pointer.CoolantDensity             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->CoolantDensity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.CoolantDensity.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1408
 *             return self.rp_pointer.CoolantDensity
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.CoolantDensity = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_14CoolantDensity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_14CoolantDensity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.CoolantDensity.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1409
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.CoolantDensity = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->CoolantDensity = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1413
 * 
 *     property pnl:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.pnl
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_3pnl___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_3pnl___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1414
 *     property pnl:
 *         def __get__(self):
 *             return self.rp_pointer.pnl             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->pnl); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.pnl.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1416
 *             return self.rp_pointer.pnl
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.pnl = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_3pnl_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_3pnl_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1416; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.pnl.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1417
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.pnl = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->pnl = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1421
 * 
 *     property BUt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.BUt
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_3BUt___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_3BUt___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1422
 *     property BUt:
 *         def __get__(self):
 *             return self.rp_pointer.BUt             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->BUt); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.BUt.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1424
 *             return self.rp_pointer.BUt
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.BUt = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_3BUt_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_3BUt_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.BUt.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1425
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.BUt = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->BUt = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1429
 * 
 *     property useDisadvantage:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.useDisadvantage
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_15useDisadvantage___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_15useDisadvantage___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1430
 *     property useDisadvantage:
 *         def __get__(self):
 *             return self.rp_pointer.useDisadvantage             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->useDisadvantage); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.useDisadvantage.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1432
 *             return self.rp_pointer.useDisadvantage
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.useDisadvantage = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_15useDisadvantage_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_15useDisadvantage_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.useDisadvantage.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1433
 * 
 *         def __set__(self, bint value):
 *             self.rp_pointer.useDisadvantage = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->useDisadvantage = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1437
 * 
 *     property LatticeType:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.rp_pointer.LatticeType
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_11LatticeType___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_11LatticeType___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1438
 *     property LatticeType:
 *         def __get__(self):
 *             cdef std.string value = self.rp_pointer.LatticeType             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->LatticeType;

  /* "bright.pyx":1439
 *         def __get__(self):
 *             cdef std.string value = self.rp_pointer.LatticeType
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.LatticeType.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1441
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.LatticeType = std.string(value)
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_11LatticeType_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_11LatticeType_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.LatticeType.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1442
 * 
 *         def __set__(self, char * value):
 *             self.rp_pointer.LatticeType = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->LatticeType = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1446
 * 
 *     property HydrogenRescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.HydrogenRescale
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_15HydrogenRescale___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_15HydrogenRescale___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1447
 *     property HydrogenRescale:
 *         def __get__(self):
 *             return self.rp_pointer.HydrogenRescale             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->HydrogenRescale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.HydrogenRescale.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1449
 *             return self.rp_pointer.HydrogenRescale
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.HydrogenRescale = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_15HydrogenRescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_15HydrogenRescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1449; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.HydrogenRescale.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1450
 * 
 *         def __set__(self, bint value):
 *             self.rp_pointer.HydrogenRescale = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->HydrogenRescale = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1454
 * 
 *     property Radius:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.Radius
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_6Radius___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_6Radius___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1455
 *     property Radius:
 *         def __get__(self):
 *             return self.rp_pointer.Radius             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->Radius); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.Radius.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1457
 *             return self.rp_pointer.Radius
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.Radius = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_6Radius_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_6Radius_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.Radius.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1458
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.Radius = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->Radius = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1462
 * 
 *     property Length:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.Length
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_6Length___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_6Length___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1463
 *     property Length:
 *         def __get__(self):
 *             return self.rp_pointer.Length             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->Length); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.Length.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1465
 *             return self.rp_pointer.Length
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.Length = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_6Length_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_6Length_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1465; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.Length.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1466
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.Length = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->Length = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1470
 * 
 *     property open_slots:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.open_slots
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_10open_slots___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_10open_slots___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1471
 *     property open_slots:
 *         def __get__(self):
 *             return self.rp_pointer.open_slots             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->open_slots); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.open_slots.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1473
 *             return self.rp_pointer.open_slots
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.open_slots = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_10open_slots_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_10open_slots_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.open_slots.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1474
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.open_slots = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->open_slots = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1478
 * 
 *     property total_slots:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.rp_pointer.total_slots
 * 
 */

static PyObject *__pyx_pf_6bright_17ReactorParameters_11total_slots___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_17ReactorParameters_11total_slots___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1479
 *     property total_slots:
 *         def __get__(self):
 *             return self.rp_pointer.total_slots             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->total_slots); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.ReactorParameters.total_slots.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1481
 *             return self.rp_pointer.total_slots
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.rp_pointer.total_slots = value
 * 
 */

static int __pyx_pf_6bright_17ReactorParameters_11total_slots_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_17ReactorParameters_11total_slots_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1481; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.ReactorParameters.total_slots.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1482
 * 
 *         def __set__(self, double value):
 *             self.rp_pointer.total_slots = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_self)->rp_pointer->total_slots = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1508
 *     #cdef cpp_bright.Reactor1G * r1g_pointer
 * 
 *     def __cinit__(self, reactor_parameters=None, params2track=None, char * name="", *args, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)
 */

static int __pyx_pf_6bright_9Reactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_9Reactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reactor_parameters = 0;
  PyObject *__pyx_v_params2track = 0;
  char *__pyx_v_name;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp;
  std::string __pyx_v_cpp_name;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__reactor_parameters,&__pyx_n_s__params2track,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  if (PyTuple_GET_SIZE(__pyx_args) > 3) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 3, PyTuple_GET_SIZE(__pyx_args)); __Pyx_GOTREF(__pyx_v_args);

    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwargs);
      return -1;
    }
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor_parameters);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__params2track);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      const Py_ssize_t used_pos_args = (PyTuple_GET_SIZE(__pyx_args) < 3) ? PyTuple_GET_SIZE(__pyx_args) : 3;
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, used_pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_reactor_parameters = values[0];
    __pyx_v_params2track = values[1];
    if (values[2]) {
      __pyx_v_name = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_reactor_parameters = ((PyObject *)Py_None);
    __pyx_v_params2track = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  3: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_params2track = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_reactor_parameters = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_AddTraceback("bright.Reactor1G.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":1510
 *     def __cinit__(self, reactor_parameters=None, params2track=None, char * name="", *args, **kwargs):
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)             # <<<<<<<<<<<<<<
 * 
 *         if (reactor_parameters is None) and (params2track is None):
 */
  __pyx_v_cpp_name = std::string(__pyx_v_name);

  /* "bright.pyx":1512
 *         cdef std.string cpp_name = std.string(name)
 * 
 *         if (reactor_parameters is None) and (params2track is None):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer = new cpp_bright.Reactor1G(cpp_name)
 * 
 */
  __pyx_t_1 = (__pyx_v_reactor_parameters == Py_None);
  if (__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_params2track == Py_None);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":1513
 * 
 *         if (reactor_parameters is None) and (params2track is None):
 *             self.r1g_pointer = new cpp_bright.Reactor1G(cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif (reactor_parameters is None) and isinstance(params2track, set):
 */
    ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer = new Reactor1G(__pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":1515
 *             self.r1g_pointer = new cpp_bright.Reactor1G(cpp_name)
 * 
 *         elif (reactor_parameters is None) and isinstance(params2track, set):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer = new cpp_bright.Reactor1G(conv.py_to_cpp_set_str(params2track), cpp_name)
 * 
 */
  __pyx_t_3 = (__pyx_v_reactor_parameters == Py_None);
  if (__pyx_t_3) {
    __pyx_t_1 = PySet_Check(__pyx_v_params2track); 
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":1516
 * 
 *         elif (reactor_parameters is None) and isinstance(params2track, set):
 *             self.r1g_pointer = new cpp_bright.Reactor1G(conv.py_to_cpp_set_str(params2track), cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and (params2track is None):
 */
    if (!(likely(PySet_CheckExact(__pyx_v_params2track))||((__pyx_v_params2track) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_params2track)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer = new Reactor1G(__pyx_f_13stlconverters_py_to_cpp_set_str(((PyObject*)__pyx_v_params2track)), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":1518
 *             self.r1g_pointer = new cpp_bright.Reactor1G(conv.py_to_cpp_set_str(params2track), cpp_name)
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and (params2track is None):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
  if (__pyx_t_2) {
    __pyx_t_3 = (__pyx_v_params2track == Py_None);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "bright.pyx":1519
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and (params2track is None):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":1520
 *         elif isinstance(reactor_parameters, ReactorParameters) and (params2track is None):
 *             rp = reactor_parameters
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and isinstance(params2track, set):
 */
    ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer = new Reactor1G((__pyx_v_rp->rp_pointer[0]), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":1522
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and isinstance(params2track, set):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], conv.py_to_cpp_set_str(params2track), cpp_name)
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
  if (__pyx_t_1) {
    __pyx_t_2 = PySet_Check(__pyx_v_params2track); 
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":1523
 * 
 *         elif isinstance(reactor_parameters, ReactorParameters) and isinstance(params2track, set):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], conv.py_to_cpp_set_str(params2track), cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":1524
 *         elif isinstance(reactor_parameters, ReactorParameters) and isinstance(params2track, set):
 *             rp = reactor_parameters
 *             self.r1g_pointer = new cpp_bright.Reactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], conv.py_to_cpp_set_str(params2track), cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    if (!(likely(PySet_CheckExact(__pyx_v_params2track))||((__pyx_v_params2track) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_params2track)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer = new Reactor1G((__pyx_v_rp->rp_pointer[0]), __pyx_f_13stlconverters_py_to_cpp_set_str(((PyObject*)__pyx_v_params2track)), __pyx_v_cpp_name);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":1527
 * 
 *         else:
 *             if reactor_parameters is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 */
    __pyx_t_3 = (__pyx_v_reactor_parameters != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":1528
 *         else:
 *             if reactor_parameters is not None:
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))             # <<<<<<<<<<<<<<
 * 
 *             if params2track is not None:
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_8), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "bright.pyx":1530
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 *             if params2track is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The params2track keyword must be a set of strings or None.  Got " + str(type(params2track)))
 * 
 */
    __pyx_t_3 = (__pyx_v_params2track != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":1531
 * 
 *             if params2track is not None:
 *                 raise TypeError("The params2track keyword must be a set of strings or None.  Got " + str(type(params2track)))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_params2track)));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(__pyx_v_params2track)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_params2track)));
      __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bright.Reactor1G.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_DECREF((PyObject *)__pyx_v_rp);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1533
 *                 raise TypeError("The params2track keyword must be a set of strings or None.  Got " + str(type(params2track)))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.r1g_pointer
 * 
 */

static void __pyx_pf_6bright_9Reactor1G_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_9Reactor1G_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":1534
 * 
 *     def __dealloc__(self):
 *         del self.r1g_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":1544
 * 
 *     property B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.B
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_1B___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_1B___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1545
 *     property B:
 *         def __get__(self):
 *             return self.r1g_pointer.B             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->B); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.B.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1547
 *             return self.r1g_pointer.B
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.B = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.B.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1548
 * 
 *         def __set__(self, int value):
 *             self.r1g_pointer.B = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->B = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1552
 * 
 *     property phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.phi
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3phi___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3phi___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1553
 *     property phi:
 *         def __get__(self):
 *             return self.r1g_pointer.phi             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->phi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.phi.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1555
 *             return self.r1g_pointer.phi
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.phi = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1555; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.phi.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1556
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.phi = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->phi = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1560
 * 
 *     property FuelChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.FuelChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1561
 *     property FuelChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.FuelChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->FuelChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.FuelChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1563
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.FuelChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1564
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->FuelChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.FuelChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1568
 * 
 *     property CoolantChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.CoolantChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1569
 *     property CoolantChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.CoolantChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->CoolantChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.CoolantChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1571
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.CoolantChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1572
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->CoolantChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.CoolantChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1576
 * 
 *     property rhoF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.rhoF
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4rhoF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4rhoF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1577
 *     property rhoF:
 *         def __get__(self):
 *             return self.r1g_pointer.rhoF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->rhoF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.rhoF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1579
 *             return self.r1g_pointer.rhoF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.rhoF = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.rhoF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1580
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.rhoF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->rhoF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1584
 * 
 *     property rhoC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.rhoC
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4rhoC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4rhoC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1585
 *     property rhoC:
 *         def __get__(self):
 *             return self.r1g_pointer.rhoC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->rhoC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.rhoC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1587
 *             return self.r1g_pointer.rhoC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.rhoC = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1587; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.rhoC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1588
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.rhoC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->rhoC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1592
 * 
 *     property P_NL:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.P_NL
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4P_NL___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4P_NL___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1593
 *     property P_NL:
 *         def __get__(self):
 *             return self.r1g_pointer.P_NL             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->P_NL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.P_NL.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1595
 *             return self.r1g_pointer.P_NL
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.P_NL = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.P_NL.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1596
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.P_NL = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->P_NL = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1600
 * 
 *     property TargetBU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.TargetBU
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_8TargetBU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_8TargetBU___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1601
 *     property TargetBU:
 *         def __get__(self):
 *             return self.r1g_pointer.TargetBU             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->TargetBU); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.TargetBU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1603
 *             return self.r1g_pointer.TargetBU
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.TargetBU = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.TargetBU.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1604
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.TargetBU = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->TargetBU = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1608
 * 
 *     property useZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.useZeta
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7useZeta___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7useZeta___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1609
 *     property useZeta:
 *         def __get__(self):
 *             return self.r1g_pointer.useZeta             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->useZeta); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.useZeta.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1611
 *             return self.r1g_pointer.useZeta
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.useZeta = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.useZeta.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1612
 * 
 *         def __set__(self, bint value):
 *             self.r1g_pointer.useZeta = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->useZeta = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1616
 * 
 *     property Lattice:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.r1g_pointer.Lattice
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7Lattice___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7Lattice___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1617
 *     property Lattice:
 *         def __get__(self):
 *             cdef std.string value = self.r1g_pointer.Lattice             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Lattice;

  /* "bright.pyx":1618
 *         def __get__(self):
 *             cdef std.string value = self.r1g_pointer.Lattice
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.Lattice.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1620
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.Lattice = std.string(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1620; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.Lattice.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1621
 * 
 *         def __set__(self, char * value):
 *             self.r1g_pointer.Lattice = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Lattice = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1625
 * 
 *     property H_XS_Rescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.H_XS_Rescale
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1626
 *     property H_XS_Rescale:
 *         def __get__(self):
 *             return self.r1g_pointer.H_XS_Rescale             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->H_XS_Rescale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.H_XS_Rescale.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1628
 *             return self.r1g_pointer.H_XS_Rescale
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.H_XS_Rescale = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.H_XS_Rescale.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1629
 * 
 *         def __set__(self, bint value):
 *             self.r1g_pointer.H_XS_Rescale = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->H_XS_Rescale = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1636
 * 
 *     property r:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.r
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_1r___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_1r___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1637
 *     property r:
 *         def __get__(self):
 *             return self.r1g_pointer.r             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.r.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1639
 *             return self.r1g_pointer.r
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.r = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1639; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.r.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1640
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.r = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->r = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1644
 * 
 *     property l:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.l
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_1l___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_1l___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1645
 *     property l:
 *         def __get__(self):
 *             return self.r1g_pointer.l             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->l); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.l.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1647
 *             return self.r1g_pointer.l
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.l = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1647; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.l.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1648
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.l = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->l = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1652
 * 
 *     property S_O:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.S_O
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3S_O___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3S_O___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1653
 *     property S_O:
 *         def __get__(self):
 *             return self.r1g_pointer.S_O             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->S_O); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.S_O.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1655
 *             return self.r1g_pointer.S_O
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.S_O = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.S_O.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1656
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.S_O = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->S_O = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1660
 * 
 *     property S_T:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.S_T
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3S_T___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3S_T___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1661
 *     property S_T:
 *         def __get__(self):
 *             return self.r1g_pointer.S_T             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->S_T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.S_T.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1663
 *             return self.r1g_pointer.S_T
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.S_T = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1663; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.S_T.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1664
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.S_T = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->S_T = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1668
 * 
 *     property VF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.VF
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_2VF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_2VF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1669
 *     property VF:
 *         def __get__(self):
 *             return self.r1g_pointer.VF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->VF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.VF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1671
 *             return self.r1g_pointer.VF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.VF = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.VF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1672
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.VF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->VF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1676
 * 
 *     property VC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.VC
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_2VC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_2VC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1677
 *     property VC:
 *         def __get__(self):
 *             return self.r1g_pointer.VC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->VC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.VC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1679
 *             return self.r1g_pointer.VC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.VC = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1679; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.VC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1680
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.VC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->VC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1687
 * 
 *     property libfile:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.r1g_pointer.libfile
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7libfile___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7libfile___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1688
 *     property libfile:
 *         def __get__(self):
 *             cdef std.string value = self.r1g_pointer.libfile             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->libfile;

  /* "bright.pyx":1689
 *         def __get__(self):
 *             cdef std.string value = self.r1g_pointer.libfile
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.libfile.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1691
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.libfile = std.string(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.libfile.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1692
 * 
 *         def __set__(self, char * value):
 *             self.r1g_pointer.libfile = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->libfile = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1696
 * 
 *     property F:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.F)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_1F___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_1F___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1697
 *     property F:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.F)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->F)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.F.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1699
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.F)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.F = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1700
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.F = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->F = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.F.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1704
 * 
 *     property BUi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.BUi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6BUi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6BUi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1705
 *     property BUi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.BUi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BUi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.BUi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1707
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.BUi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1708
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BUi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.BUi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1712
 * 
 *     property pi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.pi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5pi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5pi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1713
 *     property pi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.pi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->pi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.pi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1715
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.pi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1716
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->pi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.pi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1720
 * 
 *     property di_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.di_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5di_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5di_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1721
 *     property di_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.di_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->di_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.di_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1723
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.di_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1724
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->di_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.di_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1728
 * 
 *     property Tij_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.r1g_pointer.Tij_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6Tij_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6Tij_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1729
 *     property Tij_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.r1g_pointer.Tij_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Tij_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.Tij_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1731
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.r1g_pointer.Tij_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1732
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Tij_F_ = __pyx_f_13stlconverters_dict_to_map_int_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.Tij_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1739
 * 
 *     property A_IHM:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.A_IHM
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5A_IHM___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5A_IHM___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1740
 *     property A_IHM:
 *         def __get__(self):
 *             return self.r1g_pointer.A_IHM             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->A_IHM); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.A_IHM.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1742
 *             return self.r1g_pointer.A_IHM
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.A_IHM = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1742; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.A_IHM.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1743
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.A_IHM = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->A_IHM = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1747
 * 
 *     property MWF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.MWF
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3MWF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3MWF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1748
 *     property MWF:
 *         def __get__(self):
 *             return self.r1g_pointer.MWF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->MWF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.MWF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1750
 *             return self.r1g_pointer.MWF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.MWF = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1750; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.MWF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1751
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.MWF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->MWF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1755
 * 
 *     property MWC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.MWC
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3MWC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3MWC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1756
 *     property MWC:
 *         def __get__(self):
 *             return self.r1g_pointer.MWC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->MWC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.MWC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1758
 *             return self.r1g_pointer.MWC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.MWC = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.MWC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1759
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.MWC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->MWC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1763
 * 
 *     property niF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niF)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3niF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3niF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1764
 *     property niF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->niF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.niF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1766
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.niF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1767
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.niF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->niF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.niF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1771
 * 
 *     property niC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niC)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3niC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3niC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1772
 *     property niC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->niC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.niC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1774
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.niC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.niC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1775
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.niC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->niC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.niC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1779
 * 
 *     property miF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miF)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3miF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3miF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1780
 *     property miF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->miF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.miF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1782
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.miF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1783
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.miF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->miF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.miF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1787
 * 
 *     property miC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miC)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3miC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3miC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1788
 *     property miC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->miC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.miC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1790
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.miC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.miC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1791
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.miC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->miC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.miC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1795
 * 
 *     property NiF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiF)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3NiF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3NiF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1796
 *     property NiF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->NiF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.NiF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1798
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.NiF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1799
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.NiF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->NiF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.NiF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1803
 * 
 *     property NiC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiC)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3NiC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3NiC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1804
 *     property NiC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->NiC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.NiC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1806
 *             return conv.map_to_dict_int_dbl(self.r1g_pointer.NiC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.NiC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1807
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.NiC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->NiC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.NiC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1814
 * 
 *     property dF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5dF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5dF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1815
 *     property dF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->dF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.dF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1817
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1818
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->dF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.dF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1822
 * 
 *     property dC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5dC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5dC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1823
 *     property dC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->dC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.dC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1825
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.dC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1826
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->dC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.dC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1830
 * 
 *     property BU_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.BU_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5BU_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5BU_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1831
 *     property BU_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.BU_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BU_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.BU_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1833
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.BU_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1834
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BU_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.BU_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1838
 * 
 *     property P_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.P_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4P_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4P_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1839
 *     property P_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.P_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->P_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.P_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1841
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.P_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1842
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->P_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.P_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1846
 * 
 *     property D_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.D_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4D_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4D_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1847
 *     property D_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.D_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->D_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.D_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1849
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.D_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1850
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->D_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.D_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1854
 * 
 *     property k_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.k_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4k_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4k_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1855
 *     property k_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.k_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->k_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.k_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1857
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.k_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1858
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->k_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.k_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1862
 * 
 *     property Mj_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.Mj_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5Mj_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5Mj_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1863
 *     property Mj_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.Mj_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Mj_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.Mj_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1865
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.r1g_pointer.Mj_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1866
 * 
 *         def __set__(self, dict value):
 *             self.r1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Mj_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.Mj_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1870
 * 
 *     property zeta_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.zeta_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7zeta_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7zeta_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1871
 *     property zeta_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.zeta_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->zeta_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.zeta_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1873
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.zeta_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":1874
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->zeta_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.zeta_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1881
 * 
 *     property fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.fd
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_2fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_2fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1882
 *     property fd:
 *         def __get__(self):
 *             return self.r1g_pointer.fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1884
 *             return self.r1g_pointer.fd
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.fd = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1884; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1885
 * 
 *         def __set__(self, int value):
 *             self.r1g_pointer.fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1889
 * 
 *     property Fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.Fd
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_2Fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_2Fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1890
 *     property Fd:
 *         def __get__(self):
 *             return self.r1g_pointer.Fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1890; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.Fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1892
 *             return self.r1g_pointer.Fd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.Fd = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1892; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.Fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1893
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.Fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1897
 * 
 *     property BUd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.BUd
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3BUd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3BUd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1898
 *     property BUd:
 *         def __get__(self):
 *             return self.r1g_pointer.BUd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BUd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.BUd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1900
 *             return self.r1g_pointer.BUd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.BUd = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1900; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.BUd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1901
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.BUd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BUd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1905
 * 
 *     property k:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.k
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_1k___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_1k___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1906
 *     property k:
 *         def __get__(self):
 *             return self.r1g_pointer.k             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.k.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1908
 *             return self.r1g_pointer.k
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.k = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1908; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.k.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":1909
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.k = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->k = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1916
 * 
 *     property InU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InU
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3InU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_3InU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1917
 *     property InU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1918
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InU;

  /* "bright.pyx":1919
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.InU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1921
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1922
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.InU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1926
 * 
 *     property InTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InTRU
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5InTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5InTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1927
 *     property InTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1928
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InTRU;

  /* "bright.pyx":1929
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.InTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1931
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1932
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.InTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1936
 * 
 *     property InLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InLAN
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5InLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5InLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1937
 *     property InLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1938
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InLAN;

  /* "bright.pyx":1939
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.InLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1941
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1942
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.InLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1946
 * 
 *     property InACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InACT
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5InACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5InACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1947
 *     property InACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1948
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InACT;

  /* "bright.pyx":1949
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.InACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.InACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1951
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1952
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->InACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.InACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1956
 * 
 *     property OutU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutU
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4OutU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4OutU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1957
 *     property OutU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1958
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutU;

  /* "bright.pyx":1959
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.OutU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1961
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1962
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.OutU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1966
 * 
 *     property OutTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutTRU
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6OutTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6OutTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1967
 *     property OutTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1968
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutTRU;

  /* "bright.pyx":1969
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.OutTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1971
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1972
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.OutTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1976
 * 
 *     property OutLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutLAN
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6OutLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6OutLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1977
 *     property OutLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1978
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutLAN;

  /* "bright.pyx":1979
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.OutLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1981
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1982
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.OutLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1986
 * 
 *     property OutACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutACT
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6OutACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6OutACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1987
 *     property OutACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":1988
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutACT;

  /* "bright.pyx":1989
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.OutACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.OutACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1991
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":1992
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->OutACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.OutACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":1998
 * 
 *     property deltaR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.deltaR
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6deltaR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6deltaR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":1999
 *     property deltaR:
 *         def __get__(self):
 *             return self.r1g_pointer.deltaR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->deltaR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.deltaR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2001
 *             return self.r1g_pointer.deltaR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.deltaR = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.deltaR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2002
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.deltaR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->deltaR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2006
 * 
 *     property TruCR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.TruCR
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5TruCR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_5TruCR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2007
 *     property TruCR:
 *         def __get__(self):
 *             return self.r1g_pointer.TruCR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->TruCR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.TruCR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2009
 *             return self.r1g_pointer.TruCR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.TruCR = value
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2009; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.TruCR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2010
 * 
 *         def __set__(self, double value):
 *             self.r1g_pointer.TruCR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->TruCR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2017
 * 
 *     property SigmaFa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2018
 *     property SigmaFa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaFa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.SigmaFa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2020
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2021
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaFa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.SigmaFa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2025
 * 
 *     property SigmaFtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2026
 *     property SigmaFtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaFtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.SigmaFtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2028
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaFtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2029
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaFtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.SigmaFtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2033
 * 
 *     property kappaF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_9kappaF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_9kappaF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2034
 *     property kappaF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->kappaF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.kappaF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2036
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2037
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->kappaF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.kappaF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2044
 * 
 *     property SigmaCa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2045
 *     property SigmaCa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaCa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.SigmaCa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2047
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2048
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaCa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.SigmaCa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2052
 * 
 *     property SigmaCtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2053
 *     property SigmaCtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaCtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.SigmaCtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2055
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.SigmaCtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2056
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->SigmaCtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.SigmaCtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2060
 * 
 *     property kappaC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_9kappaC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_9kappaC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2061
 *     property kappaC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->kappaC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.kappaC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2063
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.kappaC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2064
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->kappaC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.kappaC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2071
 * 
 *     property LatticeE_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeE_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2072
 *     property LatticeE_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeE_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeE_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.LatticeE_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2074
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeE_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2075
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeE_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.LatticeE_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2079
 * 
 *     property LatticeF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2080
 *     property LatticeF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.LatticeF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2082
 *             return conv.vector_to_array_1d_dbl(self.r1g_pointer.LatticeF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2083
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.r1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.Reactor1G.LatticeF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2090
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.r1g_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2091
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.r1g_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->name;

  /* "bright.pyx":2092
 *         def __get__(self):
 *             cdef std.string n = self.r1g_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2094
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2095
 * 
 *         def __set__(self, char * n):
 *             self.r1g_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2099
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.r1g_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2100
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.r1g_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->natural_name;

  /* "bright.pyx":2101
 *         def __get__(self):
 *             cdef std.string n = self.r1g_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2103
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2104
 * 
 *         def __set__(self, char * n):
 *             self.r1g_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2108
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2109
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2110
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->IsosIn;

  /* "bright.pyx":2111
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2113
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2114
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2118
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2119
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2120
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->IsosOut;

  /* "bright.pyx":2121
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.r1g_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2123
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2124
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.r1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2128
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2129
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2131
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2132
 * 
 *         def __set__(self, dict pi):
 *             self.r1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2136
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2137
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2139
 *             return conv.map_to_dict_str_dbl(self.r1g_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2140
 * 
 *         def __set__(self, dict po):
 *             self.r1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2144
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.r1g_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2145
 *     property PassNum:
 *         def __get__(self):
 *             return self.r1g_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2147
 *             return self.r1g_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2147; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2148
 * 
 *         def __set__(self, int pn):
 *             self.r1g_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2152
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.r1g_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_9Reactor1G_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2153
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.r1g_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2155
 *             return conv.cpp_to_py_set_str(self.r1g_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.r1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_9Reactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_9Reactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2156
 * 
 *         def __set__(self, set p2t):
 *             self.r1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2163
 *     #
 * 
 *     def initialize(self, ReactorParameters reactor_parameters):             # <<<<<<<<<<<<<<
 *         """The initialize() method for reactors copies all of the reactor specific parameters to this instance.
 *         Additionally, it calculates and sets the volumes VF and VC.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_2initialize[] = "The initialize() method for reactors copies all of the reactor specific parameters to this instance.\n        Additionally, it calculates and sets the volumes VF and VC.\n\n        Args:\n            * reactor_parameters (ReactorParameters): A special data structure that contains information\n              on how to setup and run the reactor.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters) {
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reactor_parameters), __pyx_ptype_6bright_ReactorParameters, 1, "reactor_parameters", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2171
 *               on how to setup and run the reactor.
 *         """
 *         cdef ReactorParameters rp = reactor_parameters             # <<<<<<<<<<<<<<
 *         self.r1g_pointer.initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])
 * 
 */
  __Pyx_INCREF(__pyx_v_reactor_parameters);
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

  /* "bright.pyx":2172
 *         """
 *         cdef ReactorParameters rp = reactor_parameters
 *         self.r1g_pointer.initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->initialize((__pyx_v_rp->rp_pointer[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.Reactor1G.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2175
 * 
 * 
 *     def loadLib(self, char * libfile="reactor.h5"):             # <<<<<<<<<<<<<<
 *         """This method finds the HDF5 library for this reactor and extracts the necessary information from it.
 *         This method is typically called by the constructor of the child reactor type object.  It must be
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_3loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_3loadLib[] = "This method finds the HDF5 library for this reactor and extracts the necessary information from it.\n        This method is typically called by the constructor of the child reactor type object.  It must be \n        called before attempting to do any real computation.\n\n        Args: \n            * libfile (str): Path to the reactor library.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_3loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_libfile;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__libfile,0};
  __Pyx_RefNannySetupContext("loadLib");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__libfile);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "loadLib") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_libfile = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_libfile = ((char *)__pyx_k_10);
    }
  } else {
    __pyx_v_libfile = ((char *)__pyx_k_10);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_libfile = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("loadLib", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.loadLib");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2183
 *             * libfile (str): Path to the reactor library.
 *         """
 *         self.r1g_pointer.loadLib(std.string(libfile))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->loadLib(std::string(__pyx_v_libfile));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2186
 * 
 * 
 *     def foldMassWeights(self):             # <<<<<<<<<<<<<<
 *         """This method performs the all-important task of doing the isotopically-weighted linear combination of raw data.
 *         In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_4foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_4foldMassWeights[] = "This method performs the all-important task of doing the isotopically-weighted linear combination of raw data. \n        In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken \n        as the values of IsosIn.  The raw data must have previously been read in from loadLib().  \n\n        .. warning::\n\n            Anytime any reactor parameter whatsoever (IsosIn, P_NL, *etc*) is altered in any way, \n            the foldMassWeights() function must be called to reset all of the resultant data.\n            If you are unsure, please call this function anyway to be safe.  There is little \n            harm in calling it twice by accident.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_4foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("foldMassWeights");

  /* "bright.pyx":2198
 *             harm in calling it twice by accident.
 *         """
 *         self.r1g_pointer.foldMassWeights()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->foldMassWeights();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2204
 * 
 * 
 *     def mkMj_F_(self):             # <<<<<<<<<<<<<<
 *         """This function calculates and sets the Mj_F_ attribute from IsosIn and the
 *         raw reactor data Tij_F_.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_5mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_5mkMj_F_[] = "This function calculates and sets the Mj_F_ attribute from IsosIn and the \n        raw reactor data Tij_F_.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_5mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_F_");

  /* "bright.pyx":2208
 *         raw reactor data Tij_F_.
 *         """
 *         self.r1g_pointer.mkMj_F_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->mkMj_F_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2211
 * 
 * 
 *     def mkMj_Fd_(self):             # <<<<<<<<<<<<<<
 *         """This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.
 *         The resultant isotopic dictionary is then converted into the IsosOut mass stream
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_6mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_6mkMj_Fd_[] = "This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.\n        The resultant isotopic dictionary is then converted into the IsosOut mass stream\n        for this pass through the reactor.  Thus if ever you need to calculate IsosOut\n        without going through doCalc(), use this function.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_6mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_Fd_");

  /* "bright.pyx":2217
 *         without going through doCalc(), use this function.
 *         """
 *         self.r1g_pointer.mkMj_Fd_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->mkMj_Fd_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2223
 * 
 * 
 *     def calcOutIso(self):             # <<<<<<<<<<<<<<
 *         """This is a convenience function that wraps the transmutation matrix methods.
 *         It is equivalent to::
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_7calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_7calcOutIso[] = "This is a convenience function that wraps the transmutation matrix methods.  \n        It is equivalent to::\n\n            #Wrapper to calculate discharge isotopics.\n            mkMj_F_()\n            mkMj_Fd_()\n\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_7calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcOutIso");

  /* "bright.pyx":2232
 * 
 *         """
 *         self.r1g_pointer.calcOutIso()             # <<<<<<<<<<<<<<
 * 
 *     def calcSubStreams(self):
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcOutIso();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2234
 *         self.r1g_pointer.calcOutIso()
 * 
 *     def calcSubStreams(self):             # <<<<<<<<<<<<<<
 *         """This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the
 *         attributes:
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_8calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_8calcSubStreams[] = "This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the \n        attributes:\n\n            * InU\n            * InTRU\n            * InLAN\n            * InACT\n            * OutU\n            * OutTRU\n            * OutLAN\n            * OutACT\n\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_8calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcSubStreams");

  /* "bright.pyx":2248
 * 
 *         """
 *         self.r1g_pointer.calcSubStreams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcSubStreams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2251
 * 
 * 
 *     def calcTruCR(self):             # <<<<<<<<<<<<<<
 *         """This calculates and sets the transuranic conversion ratio TruCR through the equation:
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_9calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_9calcTruCR[] = "This calculates and sets the transuranic conversion ratio TruCR through the equation:\n\n        .. math:: \\mbox{TruCR} = \014rac{\\mbox{InTRU.mass} - \\mbox{OutTRU.mass}}{\014rac{\\mbox{BUd}}{935.0}}\n\n        Returns:\n            * TruCR (float): The value of the transuranic conversion ratio just calculated.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_9calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("calcTruCR");

  /* "bright.pyx":2259
 *             * TruCR (float): The value of the transuranic conversion ratio just calculated.
 *         """
 *         return self.r1g_pointer.calcTruCR()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcTruCR()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.calcTruCR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2265
 * 
 * 
 *     def calc_deltaR(self, input=None):             # <<<<<<<<<<<<<<
 *         """Calculates and sets the deltaR value of the reactor.
 *         This is equal to the production rate minus the destruction rate at the target burnup::
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_10calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_10calc_deltaR[] = "Calculates and sets the deltaR value of the reactor.  \n        This is equal to the production rate minus the destruction rate at the target burnup::\n\n            deltaR = batchAve(TargetBU, \"P\") - batchAve(TargetBU, \"D\")\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * deltaR (float): deltaR.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_10calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  double __pyx_v_deltaR;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("calc_deltaR");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_deltaR") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2265; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_deltaR", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2265; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.calc_deltaR");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":2282
 *         cdef double deltaR
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             deltaR = self.r1g_pointer.calc_deltaR()
 *         elif isinstance(input, dict):
 */
  __pyx_t_1 = (__pyx_v_input == Py_None);
  if (__pyx_t_1) {

    /* "bright.pyx":2283
 * 
 *         if input is None:
 *             deltaR = self.r1g_pointer.calc_deltaR()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             deltaR = self.r1g_pointer.calc_deltaR(conv.dict_to_map_int_dbl(input))
 */
    __pyx_v_deltaR = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calc_deltaR();
    goto __pyx_L6;
  }

  /* "bright.pyx":2284
 *         if input is None:
 *             deltaR = self.r1g_pointer.calc_deltaR()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             deltaR = self.r1g_pointer.calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_1 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_1) {

    /* "bright.pyx":2285
 *             deltaR = self.r1g_pointer.calc_deltaR()
 *         elif isinstance(input, dict):
 *             deltaR = self.r1g_pointer.calc_deltaR(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_deltaR = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calc_deltaR(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":2286
 *         elif isinstance(input, dict):
 *             deltaR = self.r1g_pointer.calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             deltaR = self.r1g_pointer.calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_1) {

    /* "bright.pyx":2287
 *             deltaR = self.r1g_pointer.calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             deltaR = self.r1g_pointer.calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":2288
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             deltaR = self.r1g_pointer.calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return deltaR
 */
    __pyx_v_deltaR = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calc_deltaR((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":2290
 *             deltaR = self.r1g_pointer.calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return deltaR             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_deltaR); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bright.Reactor1G.calc_deltaR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2296
 * 
 * 
 *     def FluenceAtBU(self, double burnup):             # <<<<<<<<<<<<<<
 *         """This function takes a burnup value  and returns a special fluence point object.
 *         The fluence point is an amalgamation of data where the at which the burnup occurs.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_11FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_11FluenceAtBU[] = "This function takes a burnup value  and returns a special fluence point object.  \n        The fluence point is an amalgamation of data where the at which the burnup occurs.\n        This object instance FP contains three pieces of information::\n    \n            FP.f    #Index immediately lower than where BU achieved (int)\n            FP.F    #Fluence value itself (float)\n            FP.m    #Slope dBU/dF between points f and f+1 (double)\n\n        Args:\n            * burnup (float): Burnup [MWd/kgIHM] at which to calculate the corresponding fluence.\n\n        Returns:\n            * fp (FluencePoint): A class containing fluence information.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_11FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup) {
  double __pyx_v_burnup;
  struct __pyx_obj_6bright_FluencePoint *__pyx_v_fp = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("FluenceAtBU");
  assert(__pyx_arg_burnup); {
    __pyx_v_burnup = __pyx_PyFloat_AsDouble(__pyx_arg_burnup); if (unlikely((__pyx_v_burnup == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2296; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.FluenceAtBU");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2311
 *             * fp (FluencePoint): A class containing fluence information.
 *         """
 *         cdef FluencePoint fp = FluencePoint()             # <<<<<<<<<<<<<<
 *         fp.fp_pointer[0] = self.r1g_pointer.FluenceAtBU(burnup)
 *         return fp
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_FluencePoint)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_fp = ((struct __pyx_obj_6bright_FluencePoint *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2312
 *         """
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = self.r1g_pointer.FluenceAtBU(burnup)             # <<<<<<<<<<<<<<
 *         return fp
 * 
 */
  (__pyx_v_fp->fp_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->FluenceAtBU(__pyx_v_burnup);

  /* "bright.pyx":2313
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = self.r1g_pointer.FluenceAtBU(burnup)
 *         return fp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_fp));
  __pyx_r = ((PyObject *)__pyx_v_fp);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.FluenceAtBU");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_fp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2316
 * 
 * 
 *     def batchAve(self, double BUd, char * PDk_flag="K"):             # <<<<<<<<<<<<<<
 *         """Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.
 *         This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_12batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_12batchAve[] = "Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.\n        This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Keyword Args:\n            * PDk_flag (string): Flag that determines whether the neutron production rate \"P\" [n/s], \n              the neutron destruction rate \"D\" [n/s], or the multiplication factor \"K\" is reported in the output.\n\n        Returns:\n            * PDk (float): the batch averaged neutron production rate,\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_12batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_BUd;
  char *__pyx_v_PDk_flag;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__BUd,&__pyx_n_s__PDk_flag,0};
  __Pyx_RefNannySetupContext("batchAve");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__BUd);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__PDk_flag);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "batchAve") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_PDk_flag = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    }
  } else {
    __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_PDk_flag = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_BUd = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("batchAve", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2316; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.batchAve");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2330
 *             * PDk (float): the batch averaged neutron production rate,
 *         """
 *         cdef double PDk = self.r1g_pointer.batchAve(BUd, std.string(PDk_flag))             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->batchAve(__pyx_v_BUd, std::string(__pyx_v_PDk_flag));

  /* "bright.pyx":2331
 *         """
 *         cdef double PDk = self.r1g_pointer.batchAve(BUd, std.string(PDk_flag))
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.batchAve");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2334
 * 
 * 
 *     def batchAveK(self, double BUd):             # <<<<<<<<<<<<<<
 *         """Convenience function that calls batchAve(BUd, "K").
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_13batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_13batchAveK[] = "Convenience function that calls batchAve(BUd, \"K\").\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Returns:\n            * k (float): the batch averaged multiplication factor.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_13batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd) {
  double __pyx_v_BUd;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("batchAveK");
  assert(__pyx_arg_BUd); {
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(__pyx_arg_BUd); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2334; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.batchAveK");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2343
 *             * k (float): the batch averaged multiplication factor.
 *         """
 *         cdef double PDk = self.r1g_pointer.batchAveK(BUd)             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->batchAveK(__pyx_v_BUd);

  /* "bright.pyx":2344
 *         """
 *         cdef double PDk = self.r1g_pointer.batchAveK(BUd)
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.batchAveK");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2347
 * 
 * 
 *     def BUd_BisectionMethod(self):             # <<<<<<<<<<<<<<
 *         """Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn
 *         in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_14BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_14BUd_BisectionMethod[] = "Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn\n        in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor \n        that is closest to 1.0.\n\n        Other root finding methods for determining maximum discharge burnup are certainly possible.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_14BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("BUd_BisectionMethod");

  /* "bright.pyx":2354
 *         Other root finding methods for determining maximum discharge burnup are certainly possible.
 *         """
 *         self.r1g_pointer.BUd_BisectionMethod()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->BUd_BisectionMethod();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2357
 * 
 * 
 *     def Run_PNL(self, double pnl):             # <<<<<<<<<<<<<<
 *         """Performs a reactor run for a specific non-leakage probability value.
 *         This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_15Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_15Run_PNL[] = "Performs a reactor run for a specific non-leakage probability value.\n        This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().\n\n        This function amounts to the following code::\n\n            self.P_NL = pnl\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n\n        Args:\n            * pnl (float): The new non-leakage probability for the reactor.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_15Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl) {
  double __pyx_v_pnl;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Run_PNL");
  assert(__pyx_arg_pnl); {
    __pyx_v_pnl = __pyx_PyFloat_AsDouble(__pyx_arg_pnl); if (unlikely((__pyx_v_pnl == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2357; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.Run_PNL");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2370
 *             * pnl (float): The new non-leakage probability for the reactor.
 *         """
 *         self.r1g_pointer.Run_PNL(pnl)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Run_PNL(__pyx_v_pnl);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2373
 * 
 * 
 *     def Calibrate_PNL_2_BUd(self):             # <<<<<<<<<<<<<<
 *         """Often times the non-leakage probability of a reactor is not known, though the input isotopics
 *         and the target discharge burnup are.  This function handles that situation by
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_16Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_16Calibrate_PNL_2_BUd[] = "Often times the non-leakage probability of a reactor is not known, though the input isotopics \n        and the target discharge burnup are.  This function handles that situation by\n        calibrating the non-leakage probability of this reactor P_NL to hit its target burnup TargetBU.\n        Such a calibration proceeds by bisection method as well.  This function is extremely useful for \n        benchmarking calculations.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_16Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Calibrate_PNL_2_BUd");

  /* "bright.pyx":2380
 *         benchmarking calculations.
 *         """
 *         self.r1g_pointer.Calibrate_PNL_2_BUd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->Calibrate_PNL_2_BUd();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2385
 * 
 * 
 *     def doCalc(self, input=None):             # <<<<<<<<<<<<<<
 *         """Since many other methods provide the computational heavy-lifting of reactor calculations,
 *         the doCalc() method is relatively simple::
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_17doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_17doCalc[] = "Since many other methods provide the computational heavy-lifting of reactor calculations, \n        the doCalc() method is relatively simple::\n\n            self.IsosIn = input\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n            self.calcOutIso()\n            return self.IsosOut\n\n        As you can see, all this function does is set burn an input stream to its maximum \n        discharge burnup and then reports on the output isotopics.\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_17doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":2407
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if input is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2409
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 */
  __pyx_t_2 = (__pyx_v_input == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":2410
 * 
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r1g_pointer).doCalc()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 */
    (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":2411
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r1g_pointer).doCalc()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_2) {

    /* "bright.pyx":2412
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.r1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":2413
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_2) {

    /* "bright.pyx":2414
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":2415
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
    (__pyx_v_output->ms_pointer[0]) = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->doCalc((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":2417
 *             output.ms_pointer[0] = self.r1g_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.Reactor1G.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2424
 * 
 * 
 *     def LatticeEPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_18LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_18LatticeEPlanar[] = "Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_18LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeEPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeEPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2424; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeEPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2431
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeEPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeEPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2434
 * 
 * 
 *     def LatticeFPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_19LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_19LatticeFPlanar[] = "Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_19LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeFPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2441
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeFPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeFPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2444
 * 
 * 
 *     def LatticeESpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_20LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_20LatticeESpherical[] = "Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_20LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeESpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeESpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeESpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2451
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeESpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeESpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2454
 * 
 * 
 *     def LatticeFSpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_21LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_21LatticeFSpherical[] = "Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_21LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFSpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFSpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeFSpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2461
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeFSpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeFSpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2464
 * 
 * 
 *     def LatticeECylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_22LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_22LatticeECylindrical[] = "Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_22LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeECylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeECylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2464; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeECylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2471
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeECylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeECylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2474
 * 
 * 
 *     def LatticeFCylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_23LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_23LatticeFCylindrical[] = "Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_23LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFCylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFCylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.Reactor1G.LatticeFCylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2481
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         self.r1g_pointer.LatticeFCylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->LatticeFCylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2487
 * 
 * 
 *     def calcZeta(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_24calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_24calcZeta[] = "This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_24calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZeta");

  /* "bright.pyx":2491
 *         are set to zeta_F_.
 *         """
 *         self.r1g_pointer.calcZeta()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcZeta();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2494
 * 
 * 
 *     def calcZetaPlanar(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a planar geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_25calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_25calcZetaPlanar[] = "This calculates the thermal disadvantage factor for a planar geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_25calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaPlanar");

  /* "bright.pyx":2498
 *         are set to zeta_F_.
 *         """
 *         self.r1g_pointer.calcZetaPlanar()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcZetaPlanar();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2501
 * 
 * 
 *     def calcZetaSpherical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a spherical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_26calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_26calcZetaSpherical[] = "This calculates the thermal disadvantage factor for a spherical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_26calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaSpherical");

  /* "bright.pyx":2505
 *         are set to zeta_F_.
 *         """
 *         self.r1g_pointer.calcZetaSpherical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcZetaSpherical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2508
 * 
 * 
 *     def calcZetaCylindrical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a clyindrical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_9Reactor1G_27calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_9Reactor1G_27calcZetaCylindrical[] = "This calculates the thermal disadvantage factor for a clyindrical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_9Reactor1G_27calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaCylindrical");

  /* "bright.pyx":2512
 *         are set to zeta_F_.
 *         """
 *         self.r1g_pointer.calcZetaCylindrical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_self)->r1g_pointer->calcZetaCylindrical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2523
 * 
 * 
 * def LWRDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.ReactorParameters cpp_lwrd = cpp_bright.fillLWRDefaults()
 *     cdef ReactorParameters lwrd = ReactorParameters()
 */

static PyObject *__pyx_pf_6bright_5LWRDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6bright_5LWRDefaults = {__Pyx_NAMESTR("LWRDefaults"), (PyCFunction)__pyx_pf_6bright_5LWRDefaults, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pf_6bright_5LWRDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  ReactorParameters __pyx_v_cpp_lwrd;
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_lwrd = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("LWRDefaults");
  __pyx_self = __pyx_self;

  /* "bright.pyx":2524
 * 
 * def LWRDefaults():
 *     cdef cpp_bright.ReactorParameters cpp_lwrd = cpp_bright.fillLWRDefaults()             # <<<<<<<<<<<<<<
 *     cdef ReactorParameters lwrd = ReactorParameters()
 *     lwrd.rp_pointer[0] = cpp_lwrd
 */
  __pyx_v_cpp_lwrd = fillLWRDefaults();

  /* "bright.pyx":2525
 * def LWRDefaults():
 *     cdef cpp_bright.ReactorParameters cpp_lwrd = cpp_bright.fillLWRDefaults()
 *     cdef ReactorParameters lwrd = ReactorParameters()             # <<<<<<<<<<<<<<
 *     lwrd.rp_pointer[0] = cpp_lwrd
 *     return lwrd
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_ReactorParameters)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_lwrd = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2526
 *     cdef cpp_bright.ReactorParameters cpp_lwrd = cpp_bright.fillLWRDefaults()
 *     cdef ReactorParameters lwrd = ReactorParameters()
 *     lwrd.rp_pointer[0] = cpp_lwrd             # <<<<<<<<<<<<<<
 *     return lwrd
 * 
 */
  (__pyx_v_lwrd->rp_pointer[0]) = __pyx_v_cpp_lwrd;

  /* "bright.pyx":2527
 *     cdef ReactorParameters lwrd = ReactorParameters()
 *     lwrd.rp_pointer[0] = cpp_lwrd
 *     return lwrd             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_lwrd));
  __pyx_r = ((PyObject *)__pyx_v_lwrd);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LWRDefaults");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_lwrd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2544
 *     #cdef cpp_bright.LightWaterReactor1G * lwr1g_pointer
 * 
 *     def __cinit__(self, libfile=None, reactor_parameters=None, char * name=""):             # <<<<<<<<<<<<<<
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)
 */

static int __pyx_pf_6bright_19LightWaterReactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_libfile = 0;
  PyObject *__pyx_v_reactor_parameters = 0;
  char *__pyx_v_name;
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp;
  std::string __pyx_v_cpp_name;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  char *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__libfile,&__pyx_n_s__reactor_parameters,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__libfile);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor_parameters);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_libfile = values[0];
    __pyx_v_reactor_parameters = values[1];
    if (values[2]) {
      __pyx_v_name = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_libfile = ((PyObject *)Py_None);
    __pyx_v_reactor_parameters = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_reactor_parameters = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_libfile = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":2546
 *     def __cinit__(self, libfile=None, reactor_parameters=None, char * name=""):
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)             # <<<<<<<<<<<<<<
 * 
 *         if (libfile is None) and (reactor_parameters is None):
 */
  __pyx_v_cpp_name = std::string(__pyx_v_name);

  /* "bright.pyx":2548
 *         cdef std.string cpp_name = std.string(name)
 * 
 *         if (libfile is None) and (reactor_parameters is None):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G()
 *             self.lwr1g_pointer.name = cpp_name
 */
  __pyx_t_1 = (__pyx_v_libfile == Py_None);
  if (__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_reactor_parameters == Py_None);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":2549
 * 
 *         if (libfile is None) and (reactor_parameters is None):
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G()             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.name = cpp_name
 * 
 */
    ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer = new LightWaterReactor1G();

    /* "bright.pyx":2550
 *         if (libfile is None) and (reactor_parameters is None):
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G()
 *             self.lwr1g_pointer.name = cpp_name             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):
 */
    ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->name = __pyx_v_cpp_name;
    goto __pyx_L6;
  }

  /* "bright.pyx":2552
 *             self.lwr1g_pointer.name = cpp_name
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), cpp_name)
 * 
 */
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_libfile, __pyx_builtin_basestring); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __pyx_t_1 = (__pyx_v_reactor_parameters == Py_None);
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":2553
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 */
    __pyx_t_4 = PyBytes_AsString(__pyx_v_libfile); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer = new LightWaterReactor1G(std::string(__pyx_t_4), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":2555
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), cpp_name)
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 */
  __pyx_t_2 = (__pyx_v_libfile == Py_None);
  if (__pyx_t_2) {
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "bright.pyx":2556
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":2557
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 */
    ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer = new LightWaterReactor1G((__pyx_v_rp->rp_pointer[0]), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":2559
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 */
  __pyx_t_1 = PyObject_IsInstance(__pyx_v_libfile, __pyx_builtin_basestring); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":2560
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":2561
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters
 *             self.lwr1g_pointer = new cpp_bright.LightWaterReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    __pyx_t_4 = PyBytes_AsString(__pyx_v_libfile); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer = new LightWaterReactor1G(std::string(__pyx_t_4), (__pyx_v_rp->rp_pointer[0]), __pyx_v_cpp_name);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":2564
 * 
 *         else:
 *             if libfile is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))
 * 
 */
    __pyx_t_3 = (__pyx_v_libfile != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":2565
 *         else:
 *             if libfile is not None:
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))             # <<<<<<<<<<<<<<
 * 
 *             if reactor_parameters is not None:
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_libfile)));
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(__pyx_v_libfile)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_libfile)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_11), __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "bright.pyx":2567
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))
 * 
 *             if reactor_parameters is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 */
    __pyx_t_3 = (__pyx_v_reactor_parameters != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":2568
 * 
 *             if reactor_parameters is not None:
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_8), __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_rp);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2570
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.lwr1g_pointer
 * 
 */

static void __pyx_pf_6bright_19LightWaterReactor1G_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_19LightWaterReactor1G_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":2571
 * 
 *     def __dealloc__(self):
 *         del self.lwr1g_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":2583
 * 
 *     property B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.B
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1B___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1B___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2584
 *     property B:
 *         def __get__(self):
 *             return self.lwr1g_pointer.B             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->B); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.B.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2586
 *             return self.lwr1g_pointer.B
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.B = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2586; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.B.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2587
 * 
 *         def __set__(self, int value):
 *             self.lwr1g_pointer.B = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->B = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2591
 * 
 *     property phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.phi
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3phi___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3phi___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2592
 *     property phi:
 *         def __get__(self):
 *             return self.lwr1g_pointer.phi             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->phi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.phi.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2594
 *             return self.lwr1g_pointer.phi
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.phi = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.phi.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2595
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.phi = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->phi = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2599
 * 
 *     property FuelChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.FuelChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2600
 *     property FuelChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.FuelChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->FuelChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.FuelChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2602
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.FuelChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2603
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->FuelChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.FuelChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2607
 * 
 *     property CoolantChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.CoolantChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2608
 *     property CoolantChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.CoolantChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->CoolantChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.CoolantChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2610
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.CoolantChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2611
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->CoolantChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.CoolantChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2615
 * 
 *     property rhoF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.rhoF
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4rhoF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4rhoF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2616
 *     property rhoF:
 *         def __get__(self):
 *             return self.lwr1g_pointer.rhoF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->rhoF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.rhoF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2618
 *             return self.lwr1g_pointer.rhoF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.rhoF = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.rhoF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2619
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.rhoF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->rhoF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2623
 * 
 *     property rhoC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.rhoC
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4rhoC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4rhoC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2624
 *     property rhoC:
 *         def __get__(self):
 *             return self.lwr1g_pointer.rhoC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->rhoC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.rhoC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2626
 *             return self.lwr1g_pointer.rhoC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.rhoC = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2626; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.rhoC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2627
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.rhoC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->rhoC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2631
 * 
 *     property P_NL:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.P_NL
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4P_NL___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4P_NL___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2632
 *     property P_NL:
 *         def __get__(self):
 *             return self.lwr1g_pointer.P_NL             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->P_NL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.P_NL.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2634
 *             return self.lwr1g_pointer.P_NL
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.P_NL = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2634; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.P_NL.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2635
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.P_NL = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->P_NL = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2639
 * 
 *     property TargetBU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.TargetBU
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8TargetBU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8TargetBU___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2640
 *     property TargetBU:
 *         def __get__(self):
 *             return self.lwr1g_pointer.TargetBU             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->TargetBU); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.TargetBU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2642
 *             return self.lwr1g_pointer.TargetBU
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.TargetBU = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2642; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.TargetBU.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2643
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.TargetBU = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->TargetBU = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2647
 * 
 *     property useZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.useZeta
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7useZeta___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7useZeta___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2648
 *     property useZeta:
 *         def __get__(self):
 *             return self.lwr1g_pointer.useZeta             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->useZeta); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.useZeta.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2650
 *             return self.lwr1g_pointer.useZeta
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.useZeta = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2650; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.useZeta.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2651
 * 
 *         def __set__(self, bint value):
 *             self.lwr1g_pointer.useZeta = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->useZeta = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2655
 * 
 *     property Lattice:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.lwr1g_pointer.Lattice
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7Lattice___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7Lattice___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2656
 *     property Lattice:
 *         def __get__(self):
 *             cdef std.string value = self.lwr1g_pointer.Lattice             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Lattice;

  /* "bright.pyx":2657
 *         def __get__(self):
 *             cdef std.string value = self.lwr1g_pointer.Lattice
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Lattice.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2659
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.Lattice = std.string(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2659; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Lattice.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2660
 * 
 *         def __set__(self, char * value):
 *             self.lwr1g_pointer.Lattice = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Lattice = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2664
 * 
 *     property H_XS_Rescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.H_XS_Rescale
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2665
 *     property H_XS_Rescale:
 *         def __get__(self):
 *             return self.lwr1g_pointer.H_XS_Rescale             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->H_XS_Rescale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.H_XS_Rescale.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2667
 *             return self.lwr1g_pointer.H_XS_Rescale
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.H_XS_Rescale = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2667; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.H_XS_Rescale.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2668
 * 
 *         def __set__(self, bint value):
 *             self.lwr1g_pointer.H_XS_Rescale = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->H_XS_Rescale = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2675
 * 
 *     property r:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.r
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1r___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1r___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2676
 *     property r:
 *         def __get__(self):
 *             return self.lwr1g_pointer.r             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.r.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2678
 *             return self.lwr1g_pointer.r
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.r = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2678; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.r.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2679
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.r = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->r = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2683
 * 
 *     property l:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.l
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1l___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1l___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2684
 *     property l:
 *         def __get__(self):
 *             return self.lwr1g_pointer.l             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->l); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.l.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2686
 *             return self.lwr1g_pointer.l
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.l = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2686; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.l.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2687
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.l = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->l = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2691
 * 
 *     property S_O:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.S_O
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3S_O___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3S_O___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2692
 *     property S_O:
 *         def __get__(self):
 *             return self.lwr1g_pointer.S_O             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->S_O); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.S_O.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2694
 *             return self.lwr1g_pointer.S_O
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.S_O = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2694; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.S_O.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2695
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.S_O = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->S_O = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2699
 * 
 *     property S_T:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.S_T
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3S_T___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3S_T___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2700
 *     property S_T:
 *         def __get__(self):
 *             return self.lwr1g_pointer.S_T             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->S_T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.S_T.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2702
 *             return self.lwr1g_pointer.S_T
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.S_T = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.S_T.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2703
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.S_T = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->S_T = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2707
 * 
 *     property VF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.VF
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2VF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2VF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2708
 *     property VF:
 *         def __get__(self):
 *             return self.lwr1g_pointer.VF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->VF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.VF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2710
 *             return self.lwr1g_pointer.VF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.VF = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2710; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.VF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2711
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.VF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->VF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2715
 * 
 *     property VC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.VC
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2VC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2VC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2716
 *     property VC:
 *         def __get__(self):
 *             return self.lwr1g_pointer.VC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->VC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.VC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2718
 *             return self.lwr1g_pointer.VC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.VC = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2718; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.VC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2719
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.VC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->VC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2726
 * 
 *     property libfile:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.lwr1g_pointer.libfile
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7libfile___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7libfile___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2727
 *     property libfile:
 *         def __get__(self):
 *             cdef std.string value = self.lwr1g_pointer.libfile             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->libfile;

  /* "bright.pyx":2728
 *         def __get__(self):
 *             cdef std.string value = self.lwr1g_pointer.libfile
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.libfile.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2730
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.libfile = std.string(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2730; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.libfile.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2731
 * 
 *         def __set__(self, char * value):
 *             self.lwr1g_pointer.libfile = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->libfile = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2735
 * 
 *     property F:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.F)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1F___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1F___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2736
 *     property F:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.F)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->F)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.F.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2738
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.F)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.F = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2739
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.F = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->F = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.F.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2743
 * 
 *     property BUi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.BUi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6BUi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6BUi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2744
 *     property BUi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.BUi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BUi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BUi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2746
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.BUi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2747
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BUi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BUi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2751
 * 
 *     property pi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.pi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5pi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5pi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2752
 *     property pi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.pi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->pi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.pi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2754
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.pi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2755
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->pi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.pi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2759
 * 
 *     property di_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.di_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5di_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5di_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2760
 *     property di_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.di_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->di_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.di_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2762
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.di_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2763
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->di_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.di_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2767
 * 
 *     property Tij_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Tij_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6Tij_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6Tij_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2768
 *     property Tij_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Tij_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Tij_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2768; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Tij_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2770
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Tij_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2771
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Tij_F_ = __pyx_f_13stlconverters_dict_to_map_int_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Tij_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2778
 * 
 *     property A_IHM:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.A_IHM
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5A_IHM___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5A_IHM___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2779
 *     property A_IHM:
 *         def __get__(self):
 *             return self.lwr1g_pointer.A_IHM             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->A_IHM); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.A_IHM.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2781
 *             return self.lwr1g_pointer.A_IHM
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.A_IHM = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2781; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.A_IHM.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2782
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.A_IHM = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->A_IHM = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2786
 * 
 *     property MWF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.MWF
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3MWF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3MWF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2787
 *     property MWF:
 *         def __get__(self):
 *             return self.lwr1g_pointer.MWF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->MWF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.MWF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2789
 *             return self.lwr1g_pointer.MWF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.MWF = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.MWF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2790
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.MWF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->MWF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2794
 * 
 *     property MWC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.MWC
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3MWC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3MWC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2795
 *     property MWC:
 *         def __get__(self):
 *             return self.lwr1g_pointer.MWC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->MWC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.MWC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2797
 *             return self.lwr1g_pointer.MWC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.MWC = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2797; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.MWC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2798
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.MWC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->MWC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2802
 * 
 *     property niF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niF)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3niF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3niF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2803
 *     property niF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->niF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.niF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2805
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.niF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2806
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.niF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->niF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.niF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2810
 * 
 *     property niC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niC)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3niC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3niC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2811
 *     property niC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->niC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.niC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2813
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.niC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.niC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2814
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.niC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->niC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.niC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2818
 * 
 *     property miF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miF)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3miF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3miF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2819
 *     property miF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->miF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.miF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2821
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.miF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2822
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.miF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->miF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.miF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2826
 * 
 *     property miC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miC)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3miC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3miC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2827
 *     property miC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->miC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.miC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2829
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.miC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.miC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2830
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.miC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->miC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.miC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2834
 * 
 *     property NiF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiF)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3NiF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3NiF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2835
 *     property NiF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->NiF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.NiF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2837
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.NiF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2838
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.NiF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->NiF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.NiF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2842
 * 
 *     property NiC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiC)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3NiC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3NiC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2843
 *     property NiC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->NiC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.NiC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2845
 *             return conv.map_to_dict_int_dbl(self.lwr1g_pointer.NiC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.NiC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2846
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.NiC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->NiC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.NiC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2853
 * 
 *     property dF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5dF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5dF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2854
 *     property dF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->dF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.dF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2856
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2857
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->dF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.dF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2861
 * 
 *     property dC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5dC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5dC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2862
 *     property dC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->dC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.dC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2864
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.dC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2865
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->dC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.dC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2869
 * 
 *     property BU_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.BU_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5BU_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5BU_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2870
 *     property BU_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.BU_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BU_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BU_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2872
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.BU_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2873
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BU_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BU_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2877
 * 
 *     property P_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.P_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4P_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4P_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2878
 *     property P_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.P_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->P_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.P_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2880
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.P_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2881
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->P_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.P_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2885
 * 
 *     property D_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.D_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4D_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4D_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2886
 *     property D_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.D_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->D_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.D_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2888
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.D_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2889
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->D_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.D_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2893
 * 
 *     property k_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.k_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4k_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4k_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2894
 *     property k_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.k_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->k_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.k_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2896
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.k_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2897
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->k_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.k_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2901
 * 
 *     property Mj_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Mj_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5Mj_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5Mj_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2902
 *     property Mj_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Mj_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Mj_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Mj_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2904
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.lwr1g_pointer.Mj_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2905
 * 
 *         def __set__(self, dict value):
 *             self.lwr1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Mj_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Mj_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2909
 * 
 *     property zeta_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.zeta_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7zeta_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7zeta_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2910
 *     property zeta_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.zeta_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->zeta_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.zeta_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2912
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.zeta_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":2913
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->zeta_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.zeta_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2920
 * 
 *     property fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.fd
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2921
 *     property fd:
 *         def __get__(self):
 *             return self.lwr1g_pointer.fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2923
 *             return self.lwr1g_pointer.fd
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.fd = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2923; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2924
 * 
 *         def __set__(self, int value):
 *             self.lwr1g_pointer.fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2928
 * 
 *     property Fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.Fd
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2Fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2Fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2929
 *     property Fd:
 *         def __get__(self):
 *             return self.lwr1g_pointer.Fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2931
 *             return self.lwr1g_pointer.Fd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.Fd = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2931; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2932
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.Fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->Fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2936
 * 
 *     property BUd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.BUd
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3BUd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3BUd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2937
 *     property BUd:
 *         def __get__(self):
 *             return self.lwr1g_pointer.BUd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BUd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BUd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2939
 *             return self.lwr1g_pointer.BUd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.BUd = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2939; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.BUd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2940
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.BUd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->BUd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2944
 * 
 *     property k:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.k
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1k___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_1k___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2945
 *     property k:
 *         def __get__(self):
 *             return self.lwr1g_pointer.k             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.k.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2947
 *             return self.lwr1g_pointer.k
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.k = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2947; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.k.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":2948
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.k = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->k = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2955
 * 
 *     property InU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InU
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3InU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3InU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2956
 *     property InU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2957
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InU;

  /* "bright.pyx":2958
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2960
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2961
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2965
 * 
 *     property InTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InTRU
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2966
 *     property InTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2967
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InTRU;

  /* "bright.pyx":2968
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2970
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2971
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2975
 * 
 *     property InLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InLAN
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2976
 *     property InLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2977
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InLAN;

  /* "bright.pyx":2978
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2980
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2980; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2981
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2985
 * 
 *     property InACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InACT
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5InACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2986
 *     property InACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2987
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InACT;

  /* "bright.pyx":2988
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.InACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2990
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":2991
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->InACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.InACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":2995
 * 
 *     property OutU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutU
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4OutU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4OutU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":2996
 *     property OutU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":2997
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutU;

  /* "bright.pyx":2998
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3000
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3001
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3005
 * 
 *     property OutTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutTRU
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3006
 *     property OutTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3007
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutTRU;

  /* "bright.pyx":3008
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3010
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3011
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3015
 * 
 *     property OutLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutLAN
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3016
 *     property OutLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3017
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutLAN;

  /* "bright.pyx":3018
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3020
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3021
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3025
 * 
 *     property OutACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutACT
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6OutACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3026
 *     property OutACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3027
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutACT;

  /* "bright.pyx":3028
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.OutACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3030
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3030; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3031
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->OutACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.OutACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3037
 * 
 *     property deltaR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.deltaR
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6deltaR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6deltaR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3038
 *     property deltaR:
 *         def __get__(self):
 *             return self.lwr1g_pointer.deltaR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->deltaR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.deltaR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3040
 *             return self.lwr1g_pointer.deltaR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.deltaR = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3040; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.deltaR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3041
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.deltaR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->deltaR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3045
 * 
 *     property TruCR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.TruCR
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5TruCR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5TruCR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3046
 *     property TruCR:
 *         def __get__(self):
 *             return self.lwr1g_pointer.TruCR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->TruCR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.TruCR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3048
 *             return self.lwr1g_pointer.TruCR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.TruCR = value
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3048; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.TruCR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3049
 * 
 *         def __set__(self, double value):
 *             self.lwr1g_pointer.TruCR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->TruCR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3056
 * 
 *     property SigmaFa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3057
 *     property SigmaFa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaFa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaFa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3059
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3060
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaFa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaFa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3064
 * 
 *     property SigmaFtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3065
 *     property SigmaFtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaFtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaFtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3067
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaFtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3068
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaFtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaFtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3072
 * 
 *     property kappaF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3073
 *     property kappaF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->kappaF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.kappaF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3075
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3076
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->kappaF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.kappaF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3083
 * 
 *     property SigmaCa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3084
 *     property SigmaCa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaCa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaCa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3086
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3087
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaCa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaCa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3091
 * 
 *     property SigmaCtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3092
 *     property SigmaCtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaCtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaCtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3094
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.SigmaCtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3095
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->SigmaCtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.SigmaCtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3099
 * 
 *     property kappaC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3100
 *     property kappaC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->kappaC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.kappaC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3102
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.kappaC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3103
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->kappaC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.kappaC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3110
 * 
 *     property LatticeE_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeE_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3111
 *     property LatticeE_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeE_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->LatticeE_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeE_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3113
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeE_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3114
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->LatticeE_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeE_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3118
 * 
 *     property LatticeF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3119
 *     property LatticeF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->LatticeF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3121
 *             return conv.vector_to_array_1d_dbl(self.lwr1g_pointer.LatticeF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3122
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.lwr1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->LatticeF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3129
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.lwr1g_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3130
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.lwr1g_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->name;

  /* "bright.pyx":3131
 *         def __get__(self):
 *             cdef std.string n = self.lwr1g_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3133
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3133; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3134
 * 
 *         def __set__(self, char * n):
 *             self.lwr1g_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3138
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.lwr1g_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3139
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.lwr1g_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->natural_name;

  /* "bright.pyx":3140
 *         def __get__(self):
 *             cdef std.string n = self.lwr1g_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3142
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3142; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3143
 * 
 *         def __set__(self, char * n):
 *             self.lwr1g_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3147
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3148
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3149
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->IsosIn;

  /* "bright.pyx":3150
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3152
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3153
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3157
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3158
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3159
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->IsosOut;

  /* "bright.pyx":3160
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.lwr1g_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3162
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3163
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.lwr1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3167
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3168
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3170
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3171
 * 
 *         def __set__(self, dict pi):
 *             self.lwr1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3175
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3176
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3178
 *             return conv.map_to_dict_str_dbl(self.lwr1g_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3179
 * 
 *         def __set__(self, dict po):
 *             self.lwr1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3183
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.lwr1g_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3184
 *     property PassNum:
 *         def __get__(self):
 *             return self.lwr1g_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3186
 *             return self.lwr1g_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3186; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3187
 * 
 *         def __set__(self, int pn):
 *             self.lwr1g_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3191
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.lwr1g_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3192
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.lwr1g_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3194
 *             return conv.cpp_to_py_set_str(self.lwr1g_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.lwr1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_19LightWaterReactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_19LightWaterReactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3195
 * 
 *         def __set__(self, set p2t):
 *             self.lwr1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3205
 *     # LWR1G Methods
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Along with its own parameter set to track, the LWR model implements its own function to set these
 *         parameters.  This function is equivalent to the following::
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_2setParams[] = "Along with its own parameter set to track, the LWR model implements its own function to set these\n        parameters.  This function is equivalent to the following::\n\n            self.ParamsIn[\"BUd\"]  = 0.0\n            self.ParamsOut[\"BUd\"] = self.BUd\n\n            self.ParamsIn[\"U\"]  = self.InU.mass\n            self.ParamsOut[\"U\"] = self.OutU.mass\n\n            self.ParamsIn[\"TRU\"]  = self.InTRU.mass\n            self.ParamsOut[\"TRU\"] = self.OutTRU.mass\n\n            self.ParamsIn[\"ACT\"]  = self.InACT.mass\n            self.ParamsOut[\"ACT\"] = self.OutACT.mass\n\n            self.ParamsIn[\"LAN\"]  = self.InLAN.mass\n            self.ParamsOut[\"LAN\"] = self.OutLAN.mass\n\n            self.ParamsIn[\"FP\"]  = 1.0 - self.InACT.mass  - self.InLAN.mass\n\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":3227
 * 
 *         """
 *         (<cpp_bright.FCComp *> self.lwr1g_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3232
 *     # Reactor1G Methods
 * 
 *     def initialize(self, ReactorParameters reactor_parameters):             # <<<<<<<<<<<<<<
 *         """The initialize() method for reactors copies all of the reactor specific parameters to this instance.
 *         Additionally, it calculates and sets the volumes VF and VC.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_3initialize[] = "The initialize() method for reactors copies all of the reactor specific parameters to this instance.\n        Additionally, it calculates and sets the volumes VF and VC.\n\n        Args:\n            * reactor_parameters (ReactorParameters): A special data structure that contains information\n              on how to setup and run the reactor.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters) {
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reactor_parameters), __pyx_ptype_6bright_ReactorParameters, 1, "reactor_parameters", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3240
 *               on how to setup and run the reactor.
 *         """
 *         cdef ReactorParameters rp = reactor_parameters             # <<<<<<<<<<<<<<
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])
 * 
 */
  __Pyx_INCREF(__pyx_v_reactor_parameters);
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

  /* "bright.pyx":3241
 *         """
 *         cdef ReactorParameters rp = reactor_parameters
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->initialize((__pyx_v_rp->rp_pointer[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3244
 * 
 * 
 *     def loadLib(self, char * libfile="reactor.h5"):             # <<<<<<<<<<<<<<
 *         """This method finds the HDF5 library for this reactor and extracts the necessary information from it.
 *         This method is typically called by the constructor of the child reactor type object.  It must be
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_4loadLib[] = "This method finds the HDF5 library for this reactor and extracts the necessary information from it.\n        This method is typically called by the constructor of the child reactor type object.  It must be \n        called before attempting to do any real computation.\n\n        Args: \n            * libfile (str): Path to the reactor library.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_4loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_libfile;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__libfile,0};
  __Pyx_RefNannySetupContext("loadLib");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__libfile);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "loadLib") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3244; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_libfile = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3244; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_libfile = ((char *)__pyx_k_10);
    }
  } else {
    __pyx_v_libfile = ((char *)__pyx_k_10);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_libfile = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3244; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("loadLib", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3244; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.loadLib");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3252
 *             * libfile (str): Path to the reactor library.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).loadLib(std.string(libfile))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->loadLib(std::string(__pyx_v_libfile));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3255
 * 
 * 
 *     def foldMassWeights(self):             # <<<<<<<<<<<<<<
 *         """This method performs the all-important task of doing the isotopically-weighted linear combination of raw data.
 *         In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_5foldMassWeights[] = "This method performs the all-important task of doing the isotopically-weighted linear combination of raw data. \n        In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken \n        as the values of IsosIn.  The raw data must have previously been read in from loadLib().  \n\n        .. warning::\n\n            Anytime any reactor parameter whatsoever (IsosIn, P_NL, *etc*) is altered in any way, \n            the foldMassWeights() function must be called to reset all of the resultant data.\n            If you are unsure, please call this function anyway to be safe.  There is little \n            harm in calling it twice by accident.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_5foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("foldMassWeights");

  /* "bright.pyx":3267
 *             harm in calling it twice by accident.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).foldMassWeights()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->foldMassWeights();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3273
 * 
 * 
 *     def mkMj_F_(self):             # <<<<<<<<<<<<<<
 *         """This function calculates and sets the Mj_F_ attribute from IsosIn and the
 *         raw reactor data Tij_F_.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_6mkMj_F_[] = "This function calculates and sets the Mj_F_ attribute from IsosIn and the \n        raw reactor data Tij_F_.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_6mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_F_");

  /* "bright.pyx":3277
 *         raw reactor data Tij_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).mkMj_F_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->mkMj_F_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3280
 * 
 * 
 *     def mkMj_Fd_(self):             # <<<<<<<<<<<<<<
 *         """This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.
 *         The resultant isotopic dictionary is then converted into the IsosOut mass stream
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_7mkMj_Fd_[] = "This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.\n        The resultant isotopic dictionary is then converted into the IsosOut mass stream\n        for this pass through the reactor.  Thus if ever you need to calculate IsosOut\n        without going through doCalc(), use this function.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_7mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_Fd_");

  /* "bright.pyx":3286
 *         without going through doCalc(), use this function.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).mkMj_Fd_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->mkMj_Fd_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3292
 * 
 * 
 *     def calcOutIso(self):             # <<<<<<<<<<<<<<
 *         """This is a convenience function that wraps the transmutation matrix methods.
 *         It is equivalent to::
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_8calcOutIso[] = "This is a convenience function that wraps the transmutation matrix methods.  \n        It is equivalent to::\n\n            #Wrapper to calculate discharge isotopics.\n            mkMj_F_()\n            mkMj_Fd_()\n\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_8calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcOutIso");

  /* "bright.pyx":3301
 * 
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcOutIso()             # <<<<<<<<<<<<<<
 * 
 *     def calcSubStreams(self):
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcOutIso();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3303
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcOutIso()
 * 
 *     def calcSubStreams(self):             # <<<<<<<<<<<<<<
 *         """This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the
 *         attributes:
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_9calcSubStreams[] = "This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the \n        attributes:\n\n            * InU\n            * InTRU\n            * InLAN\n            * InACT\n            * OutU\n            * OutTRU\n            * OutLAN\n            * OutACT\n\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_9calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcSubStreams");

  /* "bright.pyx":3317
 * 
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcSubStreams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcSubStreams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3320
 * 
 * 
 *     def calcTruCR(self):             # <<<<<<<<<<<<<<
 *         """This calculates and sets the transuranic conversion ratio TruCR through the equation:
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_10calcTruCR[] = "This calculates and sets the transuranic conversion ratio TruCR through the equation:\n\n        .. math:: \\mbox{TruCR} = \014rac{\\mbox{InTRU.mass} - \\mbox{OutTRU.mass}}{\014rac{\\mbox{BUd}}{935.0}}\n\n        Returns:\n            * TruCR (float): The value of the transuranic conversion ratio just calculated.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_10calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("calcTruCR");

  /* "bright.pyx":3328
 *             * TruCR (float): The value of the transuranic conversion ratio just calculated.
 *         """
 *         return (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcTruCR()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcTruCR()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.calcTruCR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3334
 * 
 * 
 *     def calc_deltaR(self, input=None):             # <<<<<<<<<<<<<<
 *         """Calculates and sets the deltaR value of the reactor.
 *         This is equal to the production rate minus the destruction rate at the target burnup::
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_11calc_deltaR[] = "Calculates and sets the deltaR value of the reactor.  \n        This is equal to the production rate minus the destruction rate at the target burnup::\n\n            deltaR = batchAve(TargetBU, \"P\") - batchAve(TargetBU, \"D\")\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * deltaR (float): deltaR.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_11calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  double __pyx_v_deltaR;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("calc_deltaR");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_deltaR") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3334; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_deltaR", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3334; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.calc_deltaR");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":3351
 *         cdef double deltaR
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):
 */
  __pyx_t_1 = (__pyx_v_input == Py_None);
  if (__pyx_t_1) {

    /* "bright.pyx":3352
 * 
 *         if input is None:
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 */
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calc_deltaR();
    goto __pyx_L6;
  }

  /* "bright.pyx":3353
 *         if input is None:
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_1 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_1) {

    /* "bright.pyx":3354
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calc_deltaR(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":3355
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_1) {

    /* "bright.pyx":3356
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":3357
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return deltaR
 */
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calc_deltaR((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":3359
 *             deltaR = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return deltaR             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_deltaR); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.calc_deltaR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3365
 * 
 * 
 *     def FluenceAtBU(self, double burnup):             # <<<<<<<<<<<<<<
 *         """This function takes a burnup value  and returns a special fluence point object.
 *         The fluence point is an amalgamation of data where the at which the burnup occurs.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_12FluenceAtBU[] = "This function takes a burnup value  and returns a special fluence point object.  \n        The fluence point is an amalgamation of data where the at which the burnup occurs.\n        This object instance FP contains three pieces of information::\n    \n            FP.f    #Index immediately lower than where BU achieved (int)\n            FP.F    #Fluence value itself (float)\n            FP.m    #Slope dBU/dF between points f and f+1 (double)\n\n        Args:\n            * burnup (float): Burnup [MWd/kgIHM] at which to calculate the corresponding fluence.\n\n        Returns:\n            * fp (FluencePoint): A class containing fluence information.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_12FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup) {
  double __pyx_v_burnup;
  struct __pyx_obj_6bright_FluencePoint *__pyx_v_fp = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("FluenceAtBU");
  assert(__pyx_arg_burnup); {
    __pyx_v_burnup = __pyx_PyFloat_AsDouble(__pyx_arg_burnup); if (unlikely((__pyx_v_burnup == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3365; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.FluenceAtBU");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3380
 *             * fp (FluencePoint): A class containing fluence information.
 *         """
 *         cdef FluencePoint fp = FluencePoint()             # <<<<<<<<<<<<<<
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).FluenceAtBU(burnup)
 *         return fp
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_FluencePoint)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_fp = ((struct __pyx_obj_6bright_FluencePoint *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3381
 *         """
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).FluenceAtBU(burnup)             # <<<<<<<<<<<<<<
 *         return fp
 * 
 */
  (__pyx_v_fp->fp_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->FluenceAtBU(__pyx_v_burnup);

  /* "bright.pyx":3382
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).FluenceAtBU(burnup)
 *         return fp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_fp));
  __pyx_r = ((PyObject *)__pyx_v_fp);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.FluenceAtBU");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_fp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3385
 * 
 * 
 *     def batchAve(self, double BUd, char * PDk_flag="K"):             # <<<<<<<<<<<<<<
 *         """Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.
 *         This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_13batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_13batchAve[] = "Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.\n        This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Keyword Args:\n            * PDk_flag (string): Flag that determines whether the neutron production rate \"P\" [n/s], \n              the neutron destruction rate \"D\" [n/s], or the multiplication factor \"K\" is reported in the output.\n\n        Returns:\n            * PDk (float): the batch averaged neutron production rate,\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_13batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_BUd;
  char *__pyx_v_PDk_flag;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__BUd,&__pyx_n_s__PDk_flag,0};
  __Pyx_RefNannySetupContext("batchAve");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__BUd);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__PDk_flag);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "batchAve") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_PDk_flag = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    }
  } else {
    __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_PDk_flag = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_BUd = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("batchAve", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3385; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.batchAve");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3399
 *             * PDk (float): the batch averaged neutron production rate,
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).batchAve(BUd, std.string(PDk_flag))             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->batchAve(__pyx_v_BUd, std::string(__pyx_v_PDk_flag));

  /* "bright.pyx":3400
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).batchAve(BUd, std.string(PDk_flag))
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.batchAve");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3403
 * 
 * 
 *     def batchAveK(self, double BUd):             # <<<<<<<<<<<<<<
 *         """Convenience function that calls batchAve(BUd, "K").
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_14batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_14batchAveK[] = "Convenience function that calls batchAve(BUd, \"K\").\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Returns:\n            * k (float): the batch averaged multiplication factor.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_14batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd) {
  double __pyx_v_BUd;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("batchAveK");
  assert(__pyx_arg_BUd); {
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(__pyx_arg_BUd); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3403; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.batchAveK");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3412
 *             * k (float): the batch averaged multiplication factor.
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).batchAveK(BUd)             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->batchAveK(__pyx_v_BUd);

  /* "bright.pyx":3413
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).batchAveK(BUd)
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.batchAveK");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3416
 * 
 * 
 *     def BUd_BisectionMethod(self):             # <<<<<<<<<<<<<<
 *         """Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn
 *         in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_15BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_15BUd_BisectionMethod[] = "Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn\n        in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor \n        that is closest to 1.0.\n\n        Other root finding methods for determining maximum discharge burnup are certainly possible.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_15BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("BUd_BisectionMethod");

  /* "bright.pyx":3423
 *         Other root finding methods for determining maximum discharge burnup are certainly possible.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).BUd_BisectionMethod()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->BUd_BisectionMethod();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3426
 * 
 * 
 *     def Run_PNL(self, double pnl):             # <<<<<<<<<<<<<<
 *         """Performs a reactor run for a specific non-leakage probability value.
 *         This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_16Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_16Run_PNL[] = "Performs a reactor run for a specific non-leakage probability value.\n        This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().\n\n        This function amounts to the following code::\n\n            self.P_NL = pnl\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n\n        Args:\n            * pnl (float): The new non-leakage probability for the reactor.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_16Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl) {
  double __pyx_v_pnl;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Run_PNL");
  assert(__pyx_arg_pnl); {
    __pyx_v_pnl = __pyx_PyFloat_AsDouble(__pyx_arg_pnl); if (unlikely((__pyx_v_pnl == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3426; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.Run_PNL");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3439
 *             * pnl (float): The new non-leakage probability for the reactor.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).Run_PNL(pnl)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->Run_PNL(__pyx_v_pnl);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3442
 * 
 * 
 *     def Calibrate_PNL_2_BUd(self):             # <<<<<<<<<<<<<<
 *         """Often times the non-leakage probability of a reactor is not known, though the input isotopics
 *         and the target discharge burnup are.  This function handles that situation by
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_17Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_17Calibrate_PNL_2_BUd[] = "Often times the non-leakage probability of a reactor is not known, though the input isotopics \n        and the target discharge burnup are.  This function handles that situation by\n        calibrating the non-leakage probability of this reactor P_NL to hit its target burnup TargetBU.\n        Such a calibration proceeds by bisection method as well.  This function is extremely useful for \n        benchmarking calculations.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_17Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Calibrate_PNL_2_BUd");

  /* "bright.pyx":3449
 *         benchmarking calculations.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).Calibrate_PNL_2_BUd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->Calibrate_PNL_2_BUd();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3454
 * 
 * 
 *     def doCalc(self, input=None):             # <<<<<<<<<<<<<<
 *         """Since many other methods provide the computational heavy-lifting of reactor calculations,
 *         the doCalc() method is relatively simple::
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_18doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_18doCalc[] = "Since many other methods provide the computational heavy-lifting of reactor calculations, \n        the doCalc() method is relatively simple::\n\n            self.IsosIn = input\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n            self.calcOutIso()\n            return self.IsosOut\n\n        As you can see, all this function does is set burn an input stream to its maximum \n        discharge burnup and then reports on the output isotopics.\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_18doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3454; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":3476
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if input is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3478
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.lwr1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 */
  __pyx_t_2 = (__pyx_v_input == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":3479
 * 
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.lwr1g_pointer).doCalc()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 */
    (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":3480
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.lwr1g_pointer).doCalc()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_2) {

    /* "bright.pyx":3481
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.lwr1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_output->ms_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":3482
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_2) {

    /* "bright.pyx":3483
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":3484
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
    (__pyx_v_output->ms_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->doCalc((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":3486
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.lwr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.LightWaterReactor1G.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3493
 * 
 * 
 *     def LatticeEPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_19LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_19LatticeEPlanar[] = "Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_19LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeEPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeEPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeEPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3500
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeEPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeEPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3503
 * 
 * 
 *     def LatticeFPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_20LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_20LatticeFPlanar[] = "Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_20LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeFPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3510
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeFPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeFPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3513
 * 
 * 
 *     def LatticeESpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_21LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_21LatticeESpherical[] = "Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_21LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeESpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeESpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3513; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeESpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3520
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeESpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeESpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3523
 * 
 * 
 *     def LatticeFSpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_22LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_22LatticeFSpherical[] = "Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_22LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFSpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFSpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeFSpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3530
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeFSpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeFSpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3533
 * 
 * 
 *     def LatticeECylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_23LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_23LatticeECylindrical[] = "Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_23LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeECylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeECylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3533; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeECylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3540
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeECylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeECylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3543
 * 
 * 
 *     def LatticeFCylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_24LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_24LatticeFCylindrical[] = "Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_24LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFCylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFCylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.LightWaterReactor1G.LatticeFCylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3550
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).LatticeFCylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->LatticeFCylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3556
 * 
 * 
 *     def calcZeta(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_25calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_25calcZeta[] = "This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_25calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZeta");

  /* "bright.pyx":3560
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcZeta()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcZeta();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3563
 * 
 * 
 *     def calcZetaPlanar(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a planar geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_26calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_26calcZetaPlanar[] = "This calculates the thermal disadvantage factor for a planar geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_26calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaPlanar");

  /* "bright.pyx":3567
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcZetaPlanar()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcZetaPlanar();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3570
 * 
 * 
 *     def calcZetaSpherical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a spherical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_27calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_27calcZetaSpherical[] = "This calculates the thermal disadvantage factor for a spherical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_27calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaSpherical");

  /* "bright.pyx":3574
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcZetaSpherical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcZetaSpherical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3577
 * 
 * 
 *     def calcZetaCylindrical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a clyindrical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_28calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_19LightWaterReactor1G_28calcZetaCylindrical[] = "This calculates the thermal disadvantage factor for a clyindrical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_19LightWaterReactor1G_28calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaCylindrical");

  /* "bright.pyx":3581
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.lwr1g_pointer).calcZetaCylindrical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_LightWaterReactor1G *)__pyx_v_self)->lwr1g_pointer)->calcZetaCylindrical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3592
 * 
 * 
 * def FRDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.ReactorParameters cpp_frd = cpp_bright.fillFRDefaults()
 *     cdef ReactorParameters frd = ReactorParameters()
 */

static PyObject *__pyx_pf_6bright_6FRDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_6bright_6FRDefaults = {__Pyx_NAMESTR("FRDefaults"), (PyCFunction)__pyx_pf_6bright_6FRDefaults, METH_NOARGS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pf_6bright_6FRDefaults(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  ReactorParameters __pyx_v_cpp_frd;
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_frd = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("FRDefaults");
  __pyx_self = __pyx_self;

  /* "bright.pyx":3593
 * 
 * def FRDefaults():
 *     cdef cpp_bright.ReactorParameters cpp_frd = cpp_bright.fillFRDefaults()             # <<<<<<<<<<<<<<
 *     cdef ReactorParameters frd = ReactorParameters()
 *     frd.rp_pointer[0] = cpp_frd
 */
  __pyx_v_cpp_frd = fillFRDefaults();

  /* "bright.pyx":3594
 * def FRDefaults():
 *     cdef cpp_bright.ReactorParameters cpp_frd = cpp_bright.fillFRDefaults()
 *     cdef ReactorParameters frd = ReactorParameters()             # <<<<<<<<<<<<<<
 *     frd.rp_pointer[0] = cpp_frd
 *     return frd
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_ReactorParameters)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_frd = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":3595
 *     cdef cpp_bright.ReactorParameters cpp_frd = cpp_bright.fillFRDefaults()
 *     cdef ReactorParameters frd = ReactorParameters()
 *     frd.rp_pointer[0] = cpp_frd             # <<<<<<<<<<<<<<
 *     return frd
 * 
 */
  (__pyx_v_frd->rp_pointer[0]) = __pyx_v_cpp_frd;

  /* "bright.pyx":3596
 *     cdef ReactorParameters frd = ReactorParameters()
 *     frd.rp_pointer[0] = cpp_frd
 *     return frd             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_frd));
  __pyx_r = ((PyObject *)__pyx_v_frd);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FRDefaults");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_frd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3613
 *     #cdef cpp_bright.FastReactor1G * fr1g_pointer
 * 
 *     def __cinit__(self, libfile=None, reactor_parameters=None, char * name=""):             # <<<<<<<<<<<<<<
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)
 */

static int __pyx_pf_6bright_13FastReactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_libfile = 0;
  PyObject *__pyx_v_reactor_parameters = 0;
  char *__pyx_v_name;
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp;
  std::string __pyx_v_cpp_name;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  char *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__libfile,&__pyx_n_s__reactor_parameters,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__libfile);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor_parameters);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3613; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_libfile = values[0];
    __pyx_v_reactor_parameters = values[1];
    if (values[2]) {
      __pyx_v_name = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3613; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_libfile = ((PyObject *)Py_None);
    __pyx_v_reactor_parameters = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3613; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_reactor_parameters = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_libfile = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3613; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":3615
 *     def __cinit__(self, libfile=None, reactor_parameters=None, char * name=""):
 *         cdef ReactorParameters rp
 *         cdef std.string cpp_name = std.string(name)             # <<<<<<<<<<<<<<
 * 
 *         if (libfile is None) and (reactor_parameters is None):
 */
  __pyx_v_cpp_name = std::string(__pyx_v_name);

  /* "bright.pyx":3617
 *         cdef std.string cpp_name = std.string(name)
 * 
 *         if (libfile is None) and (reactor_parameters is None):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G()
 *             self.fr1g_pointer.name = cpp_name
 */
  __pyx_t_1 = (__pyx_v_libfile == Py_None);
  if (__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_reactor_parameters == Py_None);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":3618
 * 
 *         if (libfile is None) and (reactor_parameters is None):
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G()             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.name = cpp_name
 * 
 */
    ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer = new FastReactor1G();

    /* "bright.pyx":3619
 *         if (libfile is None) and (reactor_parameters is None):
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G()
 *             self.fr1g_pointer.name = cpp_name             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):
 */
    ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->name = __pyx_v_cpp_name;
    goto __pyx_L6;
  }

  /* "bright.pyx":3621
 *             self.fr1g_pointer.name = cpp_name
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), cpp_name)
 * 
 */
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_libfile, __pyx_builtin_basestring); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_3) {
    __pyx_t_1 = (__pyx_v_reactor_parameters == Py_None);
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":3622
 * 
 *         elif isinstance(libfile, basestring) and (reactor_parameters is None):
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 */
    __pyx_t_4 = PyBytes_AsString(__pyx_v_libfile); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer = new FastReactor1G(std::string(__pyx_t_4), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":3624
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), cpp_name)
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 */
  __pyx_t_2 = (__pyx_v_libfile == Py_None);
  if (__pyx_t_2) {
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "bright.pyx":3625
 * 
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":3626
 *         elif (libfile is None) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 */
    ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer = new FastReactor1G((__pyx_v_rp->rp_pointer[0]), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":3628
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(<cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):             # <<<<<<<<<<<<<<
 *             rp = reactor_parameters
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 */
  __pyx_t_1 = PyObject_IsInstance(__pyx_v_libfile, __pyx_builtin_basestring); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_reactor_parameters, ((PyObject*)__pyx_ptype_6bright_ReactorParameters)); 
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":3629
 * 
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)
 * 
 */
    if (!(likely(((__pyx_v_reactor_parameters) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor_parameters, __pyx_ptype_6bright_ReactorParameters))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor_parameters);
    __Pyx_DECREF(((PyObject *)__pyx_v_rp));
    __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

    /* "bright.pyx":3630
 *         elif isinstance(libfile, basestring) and isinstance(reactor_parameters, ReactorParameters):
 *             rp = reactor_parameters
 *             self.fr1g_pointer = new cpp_bright.FastReactor1G(std.string(libfile), <cpp_bright.ReactorParameters> rp.rp_pointer[0], cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    __pyx_t_4 = PyBytes_AsString(__pyx_v_libfile); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer = new FastReactor1G(std::string(__pyx_t_4), (__pyx_v_rp->rp_pointer[0]), __pyx_v_cpp_name);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":3633
 * 
 *         else:
 *             if libfile is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))
 * 
 */
    __pyx_t_3 = (__pyx_v_libfile != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":3634
 *         else:
 *             if libfile is not None:
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))             # <<<<<<<<<<<<<<
 * 
 *             if reactor_parameters is not None:
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_libfile)));
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(__pyx_v_libfile)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_libfile)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_11), __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "bright.pyx":3636
 *                 raise TypeError("The libfile keyword must be a string or None.  Got " + str(type(libfile)))
 * 
 *             if reactor_parameters is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 */
    __pyx_t_3 = (__pyx_v_reactor_parameters != Py_None);
    if (__pyx_t_3) {

      /* "bright.pyx":3637
 * 
 *             if reactor_parameters is not None:
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_reactor_parameters)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_8), __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bright.FastReactor1G.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_rp);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3639
 *                 raise TypeError("The reactor_parameters keyword must be an instance of the ReactorParameters class or None.  Got " + str(type(reactor_parameters)))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.fr1g_pointer
 * 
 */

static void __pyx_pf_6bright_13FastReactor1G_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_13FastReactor1G_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":3640
 * 
 *     def __dealloc__(self):
 *         del self.fr1g_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":3652
 * 
 *     property B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.B
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_1B___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_1B___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3653
 *     property B:
 *         def __get__(self):
 *             return self.fr1g_pointer.B             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->B); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.B.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3655
 *             return self.fr1g_pointer.B
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.B = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_1B_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3655; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.B.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3656
 * 
 *         def __set__(self, int value):
 *             self.fr1g_pointer.B = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->B = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3660
 * 
 *     property phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.phi
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3phi___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3phi___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3661
 *     property phi:
 *         def __get__(self):
 *             return self.fr1g_pointer.phi             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->phi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.phi.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3663
 *             return self.fr1g_pointer.phi
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.phi = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3phi_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3663; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.phi.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3664
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.phi = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->phi = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3668
 * 
 *     property FuelChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.FuelChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3669
 *     property FuelChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.FuelChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->FuelChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.FuelChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3671
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.FuelChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3672
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.FuelChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->FuelChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.FuelChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3676
 * 
 *     property CoolantChemicalForm:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.CoolantChemicalForm)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3677
 *     property CoolantChemicalForm:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.CoolantChemicalForm)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->CoolantChemicalForm)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.CoolantChemicalForm.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3679
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.CoolantChemicalForm)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3680
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.CoolantChemicalForm = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->CoolantChemicalForm = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.CoolantChemicalForm.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3684
 * 
 *     property rhoF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.rhoF
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4rhoF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4rhoF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3685
 *     property rhoF:
 *         def __get__(self):
 *             return self.fr1g_pointer.rhoF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->rhoF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.rhoF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3687
 *             return self.fr1g_pointer.rhoF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.rhoF = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4rhoF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3687; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.rhoF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3688
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.rhoF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->rhoF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3692
 * 
 *     property rhoC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.rhoC
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4rhoC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4rhoC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3693
 *     property rhoC:
 *         def __get__(self):
 *             return self.fr1g_pointer.rhoC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->rhoC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.rhoC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3695
 *             return self.fr1g_pointer.rhoC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.rhoC = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4rhoC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3695; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.rhoC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3696
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.rhoC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->rhoC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3700
 * 
 *     property P_NL:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.P_NL
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4P_NL___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4P_NL___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3701
 *     property P_NL:
 *         def __get__(self):
 *             return self.fr1g_pointer.P_NL             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->P_NL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.P_NL.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3703
 *             return self.fr1g_pointer.P_NL
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.P_NL = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4P_NL_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.P_NL.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3704
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.P_NL = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->P_NL = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3708
 * 
 *     property TargetBU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.TargetBU
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_8TargetBU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_8TargetBU___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3709
 *     property TargetBU:
 *         def __get__(self):
 *             return self.fr1g_pointer.TargetBU             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->TargetBU); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.TargetBU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3711
 *             return self.fr1g_pointer.TargetBU
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.TargetBU = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_8TargetBU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3711; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.TargetBU.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3712
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.TargetBU = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->TargetBU = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3716
 * 
 *     property useZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.useZeta
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7useZeta___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7useZeta___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3717
 *     property useZeta:
 *         def __get__(self):
 *             return self.fr1g_pointer.useZeta             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->useZeta); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.useZeta.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3719
 *             return self.fr1g_pointer.useZeta
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.useZeta = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7useZeta_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3719; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.useZeta.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3720
 * 
 *         def __set__(self, bint value):
 *             self.fr1g_pointer.useZeta = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->useZeta = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3724
 * 
 *     property Lattice:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.fr1g_pointer.Lattice
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7Lattice___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7Lattice___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3725
 *     property Lattice:
 *         def __get__(self):
 *             cdef std.string value = self.fr1g_pointer.Lattice             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Lattice;

  /* "bright.pyx":3726
 *         def __get__(self):
 *             cdef std.string value = self.fr1g_pointer.Lattice
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.Lattice.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3728
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.Lattice = std.string(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7Lattice_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3728; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.Lattice.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3729
 * 
 *         def __set__(self, char * value):
 *             self.fr1g_pointer.Lattice = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Lattice = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3733
 * 
 *     property H_XS_Rescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.H_XS_Rescale
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3734
 *     property H_XS_Rescale:
 *         def __get__(self):
 *             return self.fr1g_pointer.H_XS_Rescale             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->H_XS_Rescale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.H_XS_Rescale.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3736
 *             return self.fr1g_pointer.H_XS_Rescale
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.H_XS_Rescale = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3736; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.H_XS_Rescale.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3737
 * 
 *         def __set__(self, bint value):
 *             self.fr1g_pointer.H_XS_Rescale = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->H_XS_Rescale = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3744
 * 
 *     property r:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.r
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_1r___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_1r___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3745
 *     property r:
 *         def __get__(self):
 *             return self.fr1g_pointer.r             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.r.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3747
 *             return self.fr1g_pointer.r
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.r = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3747; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.r.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3748
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.r = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->r = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3752
 * 
 *     property l:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.l
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_1l___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_1l___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3753
 *     property l:
 *         def __get__(self):
 *             return self.fr1g_pointer.l             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->l); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.l.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3755
 *             return self.fr1g_pointer.l
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.l = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_1l_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.l.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3756
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.l = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->l = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3760
 * 
 *     property S_O:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.S_O
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3S_O___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3S_O___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3761
 *     property S_O:
 *         def __get__(self):
 *             return self.fr1g_pointer.S_O             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->S_O); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.S_O.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3763
 *             return self.fr1g_pointer.S_O
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.S_O = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3S_O_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3763; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.S_O.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3764
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.S_O = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->S_O = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3768
 * 
 *     property S_T:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.S_T
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3S_T___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3S_T___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3769
 *     property S_T:
 *         def __get__(self):
 *             return self.fr1g_pointer.S_T             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->S_T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.S_T.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3771
 *             return self.fr1g_pointer.S_T
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.S_T = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3S_T_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3771; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.S_T.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3772
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.S_T = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->S_T = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3776
 * 
 *     property VF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.VF
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_2VF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_2VF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3777
 *     property VF:
 *         def __get__(self):
 *             return self.fr1g_pointer.VF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->VF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.VF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3779
 *             return self.fr1g_pointer.VF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.VF = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_2VF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3779; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.VF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3780
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.VF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->VF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3784
 * 
 *     property VC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.VC
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_2VC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_2VC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3785
 *     property VC:
 *         def __get__(self):
 *             return self.fr1g_pointer.VC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->VC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3785; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.VC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3787
 *             return self.fr1g_pointer.VC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.VC = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_2VC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3787; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.VC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3788
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.VC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->VC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3795
 * 
 *     property libfile:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string value = self.fr1g_pointer.libfile
 *             return value.c_str()
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7libfile___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7libfile___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_value;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3796
 *     property libfile:
 *         def __get__(self):
 *             cdef std.string value = self.fr1g_pointer.libfile             # <<<<<<<<<<<<<<
 *             return value.c_str()
 * 
 */
  __pyx_v_value = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->libfile;

  /* "bright.pyx":3797
 *         def __get__(self):
 *             cdef std.string value = self.fr1g_pointer.libfile
 *             return value.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_value.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.libfile.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3799
 *             return value.c_str()
 * 
 *         def __set__(self, char * value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.libfile = std.string(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7libfile_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3799; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.libfile.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3800
 * 
 *         def __set__(self, char * value):
 *             self.fr1g_pointer.libfile = std.string(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->libfile = std::string(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3804
 * 
 *     property F:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.F)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_1F___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_1F___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3805
 *     property F:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.F)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->F)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.F.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3807
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.F)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.F = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_1F_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3808
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.F = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->F = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.F.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3812
 * 
 *     property BUi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.BUi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6BUi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6BUi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3813
 *     property BUi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.BUi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BUi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.BUi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3815
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.BUi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6BUi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3816
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.BUi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BUi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.BUi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3820
 * 
 *     property pi_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.pi_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5pi_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5pi_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3821
 *     property pi_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.pi_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->pi_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.pi_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3823
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.pi_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5pi_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3824
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.pi_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->pi_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.pi_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3828
 * 
 *     property di_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.di_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5di_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5di_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3829
 *     property di_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.di_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->di_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.di_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3831
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.di_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5di_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3832
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.di_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->di_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.di_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3836
 * 
 *     property Tij_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.fr1g_pointer.Tij_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6Tij_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6Tij_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3837
 *     property Tij_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.fr1g_pointer.Tij_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Tij_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.Tij_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3839
 *             return conv.map_to_dict_int_int_array_to_vector_1d_dbl(self.fr1g_pointer.Tij_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6Tij_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3840
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.Tij_F_ = conv.dict_to_map_int_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Tij_F_ = __pyx_f_13stlconverters_dict_to_map_int_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.Tij_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3847
 * 
 *     property A_IHM:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.A_IHM
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5A_IHM___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5A_IHM___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3848
 *     property A_IHM:
 *         def __get__(self):
 *             return self.fr1g_pointer.A_IHM             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->A_IHM); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.A_IHM.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3850
 *             return self.fr1g_pointer.A_IHM
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.A_IHM = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5A_IHM_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.A_IHM.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3851
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.A_IHM = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->A_IHM = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3855
 * 
 *     property MWF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.MWF
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3MWF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3MWF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3856
 *     property MWF:
 *         def __get__(self):
 *             return self.fr1g_pointer.MWF             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->MWF); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.MWF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3858
 *             return self.fr1g_pointer.MWF
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.MWF = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3MWF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3858; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.MWF.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3859
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.MWF = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->MWF = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3863
 * 
 *     property MWC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.MWC
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3MWC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3MWC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3864
 *     property MWC:
 *         def __get__(self):
 *             return self.fr1g_pointer.MWC             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->MWC); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.MWC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3866
 *             return self.fr1g_pointer.MWC
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.MWC = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3MWC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3866; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.MWC.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3867
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.MWC = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->MWC = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3871
 * 
 *     property niF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niF)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3niF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3niF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3872
 *     property niF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->niF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.niF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3874
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.niF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3niF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3875
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.niF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->niF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.niF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3879
 * 
 *     property niC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niC)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3niC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3niC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3880
 *     property niC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->niC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.niC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3882
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.niC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.niC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3niC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3883
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.niC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->niC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.niC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3887
 * 
 *     property miF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miF)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3miF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3miF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3888
 *     property miF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->miF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.miF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3890
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.miF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3miF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3890; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3891
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.miF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->miF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.miF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3895
 * 
 *     property miC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miC)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3miC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3miC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3896
 *     property miC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->miC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.miC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3898
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.miC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.miC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3miC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3899
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.miC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->miC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.miC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3903
 * 
 *     property NiF:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiF)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3NiF___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3NiF___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3904
 *     property NiF:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiF)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->NiF)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.NiF.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3906
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiF)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.NiF = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3NiF_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3907
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.NiF = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->NiF = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.NiF.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3911
 * 
 *     property NiC:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiC)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3NiC___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3NiC___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3912
 *     property NiC:
 *         def __get__(self):
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiC)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->NiC)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.NiC.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3914
 *             return conv.map_to_dict_int_dbl(self.fr1g_pointer.NiC)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.NiC = conv.dict_to_map_int_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3NiC_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3915
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.NiC = conv.dict_to_map_int_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->NiC = __pyx_f_13stlconverters_dict_to_map_int_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.NiC.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3922
 * 
 *     property dF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5dF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5dF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3923
 *     property dF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->dF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.dF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3925
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5dF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3926
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.dF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->dF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.dF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3930
 * 
 *     property dC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5dC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5dC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3931
 *     property dC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->dC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.dC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3933
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.dC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5dC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3934
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.dC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->dC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.dC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3938
 * 
 *     property BU_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.BU_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5BU_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5BU_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3939
 *     property BU_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.BU_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BU_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.BU_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3941
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.BU_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5BU_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3942
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.BU_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BU_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.BU_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3946
 * 
 *     property P_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.P_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4P_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4P_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3947
 *     property P_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.P_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->P_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.P_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3949
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.P_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4P_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3950
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.P_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->P_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.P_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3954
 * 
 *     property D_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.D_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4D_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4D_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3955
 *     property D_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.D_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->D_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.D_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3957
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.D_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4D_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3958
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.D_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->D_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.D_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3962
 * 
 *     property k_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.k_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4k_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4k_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3963
 *     property k_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.k_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->k_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.k_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3965
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.k_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4k_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3966
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.k_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->k_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.k_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3970
 * 
 *     property Mj_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.Mj_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5Mj_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5Mj_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3971
 *     property Mj_F_:
 *         def __get__(self):
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.Mj_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Mj_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.Mj_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3973
 *             return conv.map_to_dict_int_array_to_vector_1d_dbl(self.fr1g_pointer.Mj_F_)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5Mj_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":3974
 * 
 *         def __set__(self, dict value):
 *             self.fr1g_pointer.Mj_F_ = conv.dict_to_map_int_vector_to_array_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Mj_F_ = __pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.Mj_F_.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3978
 * 
 *     property zeta_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.zeta_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7zeta_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7zeta_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3979
 *     property zeta_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.zeta_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->zeta_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.zeta_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3981
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.zeta_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7zeta_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":3982
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.zeta_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->zeta_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.zeta_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3989
 * 
 *     property fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.fd
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_2fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_2fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3990
 *     property fd:
 *         def __get__(self):
 *             return self.fr1g_pointer.fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3992
 *             return self.fr1g_pointer.fd
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.fd = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_2fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3992; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":3993
 * 
 *         def __set__(self, int value):
 *             self.fr1g_pointer.fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":3997
 * 
 *     property Fd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.Fd
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_2Fd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_2Fd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":3998
 *     property Fd:
 *         def __get__(self):
 *             return self.fr1g_pointer.Fd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Fd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.Fd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4000
 *             return self.fr1g_pointer.Fd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.Fd = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_2Fd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.Fd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4001
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.Fd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->Fd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4005
 * 
 *     property BUd:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.BUd
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3BUd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3BUd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4006
 *     property BUd:
 *         def __get__(self):
 *             return self.fr1g_pointer.BUd             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BUd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.BUd.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4008
 *             return self.fr1g_pointer.BUd
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.BUd = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3BUd_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4008; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.BUd.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4009
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.BUd = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->BUd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4013
 * 
 *     property k:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.k
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_1k___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_1k___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4014
 *     property k:
 *         def __get__(self):
 *             return self.fr1g_pointer.k             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.k.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4016
 *             return self.fr1g_pointer.k
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.k = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_1k_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4016; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.k.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4017
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.k = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->k = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4024
 * 
 *     property InU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InU
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3InU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_3InU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4025
 *     property InU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4026
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InU;

  /* "bright.pyx":4027
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.InU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4029
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_3InU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4030
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.InU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.InU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4034
 * 
 *     property InTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InTRU
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5InTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5InTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4035
 *     property InTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4036
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InTRU;

  /* "bright.pyx":4037
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.InTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4039
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5InTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4039; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4040
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.InTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.InTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4044
 * 
 *     property InLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InLAN
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5InLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5InLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4045
 *     property InLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4046
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InLAN;

  /* "bright.pyx":4047
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.InLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4049
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5InLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4050
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.InLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.InLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4054
 * 
 *     property InACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InACT
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5InACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5InACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4055
 *     property InACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4056
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InACT;

  /* "bright.pyx":4057
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.InACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.InACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4059
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5InACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4060
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.InACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->InACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.InACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4064
 * 
 *     property OutU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutU
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4OutU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4OutU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4065
 *     property OutU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4065; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4066
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutU;

  /* "bright.pyx":4067
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.OutU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4069
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4OutU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4070
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.OutU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.OutU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4074
 * 
 *     property OutTRU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutTRU
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutTRU___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutTRU___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4075
 *     property OutTRU:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutTRU
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4076
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutTRU             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutTRU;

  /* "bright.pyx":4077
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutTRU
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.OutTRU.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4079
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6OutTRU_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4080
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.OutTRU = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutTRU = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.OutTRU.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4084
 * 
 *     property OutLAN:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutLAN
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutLAN___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutLAN___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4085
 *     property OutLAN:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutLAN
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4086
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutLAN             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutLAN;

  /* "bright.pyx":4087
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutLAN
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.OutLAN.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4089
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6OutLAN_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4090
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.OutLAN = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutLAN = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.OutLAN.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4094
 * 
 *     property OutACT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutACT
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutACT___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6OutACT___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4095
 *     property OutACT:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutACT
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4096
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutACT             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutACT;

  /* "bright.pyx":4097
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.OutACT
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.OutACT.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4099
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6OutACT_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4100
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.OutACT = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->OutACT = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.OutACT.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4106
 * 
 *     property deltaR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.deltaR
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6deltaR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6deltaR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4107
 *     property deltaR:
 *         def __get__(self):
 *             return self.fr1g_pointer.deltaR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->deltaR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.deltaR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4109
 *             return self.fr1g_pointer.deltaR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.deltaR = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6deltaR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4109; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.deltaR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4110
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.deltaR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->deltaR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4114
 * 
 *     property TruCR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.TruCR
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5TruCR___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_5TruCR___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4115
 *     property TruCR:
 *         def __get__(self):
 *             return self.fr1g_pointer.TruCR             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, double value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->TruCR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.TruCR.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4117
 *             return self.fr1g_pointer.TruCR
 * 
 *         def __set__(self, double value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.TruCR = value
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_5TruCR_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  double __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4117; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.TruCR.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4118
 * 
 *         def __set__(self, double value):
 *             self.fr1g_pointer.TruCR = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->TruCR = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4125
 * 
 *     property SigmaFa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_10SigmaFa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4126
 *     property SigmaFa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaFa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaFa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4128
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_10SigmaFa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4129
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.SigmaFa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaFa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaFa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4133
 * 
 *     property SigmaFtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4134
 *     property SigmaFtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaFtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaFtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4136
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaFtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4137
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.SigmaFtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaFtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaFtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4141
 * 
 *     property kappaF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_9kappaF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_9kappaF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4142
 *     property kappaF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->kappaF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.kappaF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4144
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_9kappaF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4145
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.kappaF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->kappaF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.kappaF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4152
 * 
 *     property SigmaCa_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCa_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_10SigmaCa_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4153
 *     property SigmaCa_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCa_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaCa_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaCa_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4155
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCa_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_10SigmaCa_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4156
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.SigmaCa_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaCa_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaCa_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4160
 * 
 *     property SigmaCtr_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCtr_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4161
 *     property SigmaCtr_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCtr_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaCtr_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaCtr_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4163
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.SigmaCtr_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4164
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.SigmaCtr_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->SigmaCtr_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.SigmaCtr_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4168
 * 
 *     property kappaC_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaC_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_9kappaC_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_9kappaC_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4169
 *     property kappaC_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaC_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->kappaC_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.kappaC_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4171
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.kappaC_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_9kappaC_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4172
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.kappaC_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->kappaC_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.kappaC_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4179
 * 
 *     property LatticeE_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeE_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_11LatticeE_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4180
 *     property LatticeE_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeE_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->LatticeE_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeE_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4182
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeE_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_11LatticeE_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4183
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.LatticeE_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->LatticeE_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeE_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4187
 * 
 *     property LatticeF_F_:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeF_F_)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_11LatticeF_F____get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4188
 *     property LatticeF_F_:
 *         def __get__(self):
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeF_F_)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_vector_to_array_1d_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->LatticeF_F_)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeF_F_.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4190
 *             return conv.vector_to_array_1d_dbl(self.fr1g_pointer.LatticeF_F_)
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_11LatticeF_F__1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  Py_buffer __pyx_bstruct_value;
  Py_ssize_t __pyx_bstride_0_value = 0;
  Py_ssize_t __pyx_bshape_0_value = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_bstruct_value.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_value, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_value = __pyx_bstruct_value.strides[0];
  __pyx_bshape_0_value = __pyx_bstruct_value.shape[0];

  /* "bright.pyx":4191
 * 
 *         def __set__(self, np.ndarray[np.float64_t, ndim=1] value):
 *             self.fr1g_pointer.LatticeF_F_ = conv.array_to_vector_1d_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->LatticeF_F_ = __pyx_f_13stlconverters_array_to_vector_1d_dbl(((PyArrayObject *)__pyx_v_value));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeF_F_.__set__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_value);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4198
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.fr1g_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4199
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.fr1g_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->name;

  /* "bright.pyx":4200
 *         def __get__(self):
 *             cdef std.string n = self.fr1g_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4202
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4203
 * 
 *         def __set__(self, char * n):
 *             self.fr1g_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4207
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.fr1g_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4208
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.fr1g_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->natural_name;

  /* "bright.pyx":4209
 *         def __get__(self):
 *             cdef std.string n = self.fr1g_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4211
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4211; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4212
 * 
 *         def __set__(self, char * n):
 *             self.fr1g_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4216
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4217
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4218
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->IsosIn;

  /* "bright.pyx":4219
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4221
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4222
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4226
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4227
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4228
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->IsosOut;

  /* "bright.pyx":4229
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.fr1g_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4231
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4232
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.fr1g_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4236
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4237
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4239
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4240
 * 
 *         def __set__(self, dict pi):
 *             self.fr1g_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4244
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4245
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4247
 *             return conv.map_to_dict_str_dbl(self.fr1g_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4248
 * 
 *         def __set__(self, dict po):
 *             self.fr1g_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4252
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.fr1g_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4253
 *     property PassNum:
 *         def __get__(self):
 *             return self.fr1g_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4255
 *             return self.fr1g_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4255; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4256
 * 
 *         def __set__(self, int pn):
 *             self.fr1g_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4260
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.fr1g_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_13FastReactor1G_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4261
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.fr1g_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4263
 *             return conv.cpp_to_py_set_str(self.fr1g_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.fr1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_13FastReactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_13FastReactor1G_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4264
 * 
 *         def __set__(self, set p2t):
 *             self.fr1g_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4274
 *     # FastReactor1G Methods
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Along with its own parameter set to track, the FR model implements its own function to set these
 *         parameters.  This function is equivalent to the following::
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_2setParams[] = "Along with its own parameter set to track, the FR model implements its own function to set these\n        parameters.  This function is equivalent to the following::\n\n            self.ParamsIn[\"BUd\"]  = 0.0\n            self.ParamsOut[\"BUd\"] = self.BUd\n\n            self.ParamsIn[\"TRUCR\"]  = 0.0\n            self.ParamsOut[\"TRUCR\"] = self.calcTruCR()\n\n            self.ParamsIn[\"P_NL\"]  = 0.0\n            self.ParamsOut[\"P_NL\"] = self.P_NL\n\n            self.ParamsIn[\"U\"]  = self.InU.mass\n            self.ParamsOut[\"U\"] = self.OutU.mass\n\n            self.ParamsIn[\"TRU\"]  = self.InTRU.mass\n            self.ParamsOut[\"TRU\"] = self.OutTRU.mass\n\n            self.ParamsIn[\"ACT\"]  = self.InACT.mass\n            self.ParamsOut[\"ACT\"] = self.OutACT.mass\n\n            self.ParamsIn[\"LAN\"]  = self.InLAN.mass\n            self.ParamsOut[\"LAN\"] = self.OutLAN.mass\n\n            self.ParamsIn[\"FP\"]  = 1.0 - self.InACT.mass  - self.InLAN.mass\n            self.ParamsOut[\"FP\"] = 1.0 - self.OutACT.mass - self.OutLAN.mass\n\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_2setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":4303
 * 
 *         """
 *         (<cpp_bright.FCComp *> self.fr1g_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4308
 *     # Reactor1G Methods
 * 
 *     def initialize(self, ReactorParameters reactor_parameters):             # <<<<<<<<<<<<<<
 *         """The initialize() method for reactors copies all of the reactor specific parameters to this instance.
 *         Additionally, it calculates and sets the volumes VF and VC.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_3initialize[] = "The initialize() method for reactors copies all of the reactor specific parameters to this instance.\n        Additionally, it calculates and sets the volumes VF and VC.\n\n        Args:\n            * reactor_parameters (ReactorParameters): A special data structure that contains information\n              on how to setup and run the reactor.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_reactor_parameters) {
  struct __pyx_obj_6bright_ReactorParameters *__pyx_v_rp = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reactor_parameters), __pyx_ptype_6bright_ReactorParameters, 1, "reactor_parameters", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4316
 *               on how to setup and run the reactor.
 *         """
 *         cdef ReactorParameters rp = reactor_parameters             # <<<<<<<<<<<<<<
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])
 * 
 */
  __Pyx_INCREF(__pyx_v_reactor_parameters);
  __pyx_v_rp = ((struct __pyx_obj_6bright_ReactorParameters *)__pyx_v_reactor_parameters);

  /* "bright.pyx":4317
 *         """
 *         cdef ReactorParameters rp = reactor_parameters
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).initialize(<cpp_bright.ReactorParameters> rp.rp_pointer[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->initialize((__pyx_v_rp->rp_pointer[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4320
 * 
 * 
 *     def loadLib(self, char * libfile="reactor.h5"):             # <<<<<<<<<<<<<<
 *         """This method finds the HDF5 library for this reactor and extracts the necessary information from it.
 *         This method is typically called by the constructor of the child reactor type object.  It must be
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_4loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_4loadLib[] = "This method finds the HDF5 library for this reactor and extracts the necessary information from it.\n        This method is typically called by the constructor of the child reactor type object.  It must be \n        called before attempting to do any real computation.\n\n        Args: \n            * libfile (str): Path to the reactor library.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_4loadLib(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_libfile;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__libfile,0};
  __Pyx_RefNannySetupContext("loadLib");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__libfile);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "loadLib") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4320; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_libfile = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4320; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_libfile = ((char *)__pyx_k_10);
    }
  } else {
    __pyx_v_libfile = ((char *)__pyx_k_10);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_libfile = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_libfile) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4320; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("loadLib", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4320; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.loadLib");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4328
 *             * libfile (str): Path to the reactor library.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).loadLib(std.string(libfile))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->loadLib(std::string(__pyx_v_libfile));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4331
 * 
 * 
 *     def foldMassWeights(self):             # <<<<<<<<<<<<<<
 *         """This method performs the all-important task of doing the isotopically-weighted linear combination of raw data.
 *         In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_5foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_5foldMassWeights[] = "This method performs the all-important task of doing the isotopically-weighted linear combination of raw data. \n        In a very real sense this is what makes this reactor *this specific reactor*.  The weights are taken \n        as the values of IsosIn.  The raw data must have previously been read in from loadLib().  \n\n        .. warning::\n\n            Anytime any reactor parameter whatsoever (IsosIn, P_NL, *etc*) is altered in any way, \n            the foldMassWeights() function must be called to reset all of the resultant data.\n            If you are unsure, please call this function anyway to be safe.  There is little \n            harm in calling it twice by accident.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_5foldMassWeights(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("foldMassWeights");

  /* "bright.pyx":4343
 *             harm in calling it twice by accident.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).foldMassWeights()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->foldMassWeights();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4349
 * 
 * 
 *     def mkMj_F_(self):             # <<<<<<<<<<<<<<
 *         """This function calculates and sets the Mj_F_ attribute from IsosIn and the
 *         raw reactor data Tij_F_.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_6mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_6mkMj_F_[] = "This function calculates and sets the Mj_F_ attribute from IsosIn and the \n        raw reactor data Tij_F_.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_6mkMj_F_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_F_");

  /* "bright.pyx":4353
 *         raw reactor data Tij_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).mkMj_F_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->mkMj_F_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4356
 * 
 * 
 *     def mkMj_Fd_(self):             # <<<<<<<<<<<<<<
 *         """This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.
 *         The resultant isotopic dictionary is then converted into the IsosOut mass stream
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_7mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_7mkMj_Fd_[] = "This function evaluates Mj_F_ calculated from mkMj_F_() at the discharge fluence Fd.\n        The resultant isotopic dictionary is then converted into the IsosOut mass stream\n        for this pass through the reactor.  Thus if ever you need to calculate IsosOut\n        without going through doCalc(), use this function.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_7mkMj_Fd_(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("mkMj_Fd_");

  /* "bright.pyx":4362
 *         without going through doCalc(), use this function.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).mkMj_Fd_()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->mkMj_Fd_();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4368
 * 
 * 
 *     def calcOutIso(self):             # <<<<<<<<<<<<<<
 *         """This is a convenience function that wraps the transmutation matrix methods.
 *         It is equivalent to::
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_8calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_8calcOutIso[] = "This is a convenience function that wraps the transmutation matrix methods.  \n        It is equivalent to::\n\n            #Wrapper to calculate discharge isotopics.\n            mkMj_F_()\n            mkMj_Fd_()\n\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_8calcOutIso(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcOutIso");

  /* "bright.pyx":4377
 * 
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcOutIso()             # <<<<<<<<<<<<<<
 * 
 *     def calcSubStreams(self):
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcOutIso();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4379
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcOutIso()
 * 
 *     def calcSubStreams(self):             # <<<<<<<<<<<<<<
 *         """This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the
 *         attributes:
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_9calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_9calcSubStreams[] = "This sets possibly relevant reactor input and output substreams.  Specifically, it calculates the \n        attributes:\n\n            * InU\n            * InTRU\n            * InLAN\n            * InACT\n            * OutU\n            * OutTRU\n            * OutLAN\n            * OutACT\n\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_9calcSubStreams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcSubStreams");

  /* "bright.pyx":4393
 * 
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcSubStreams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcSubStreams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4396
 * 
 * 
 *     def calcTruCR(self):             # <<<<<<<<<<<<<<
 *         """This calculates and sets the transuranic conversion ratio TruCR through the equation:
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_10calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_10calcTruCR[] = "This calculates and sets the transuranic conversion ratio TruCR through the equation:\n\n        .. math:: \\mbox{TruCR} = \014rac{\\mbox{InTRU.mass} - \\mbox{OutTRU.mass}}{\014rac{\\mbox{BUd}}{935.0}}\n\n        Returns:\n            * TruCR (float): The value of the transuranic conversion ratio just calculated.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_10calcTruCR(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("calcTruCR");

  /* "bright.pyx":4404
 *             * TruCR (float): The value of the transuranic conversion ratio just calculated.
 *         """
 *         return (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcTruCR()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcTruCR()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.calcTruCR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4410
 * 
 * 
 *     def calc_deltaR(self, input=None):             # <<<<<<<<<<<<<<
 *         """Calculates and sets the deltaR value of the reactor.
 *         This is equal to the production rate minus the destruction rate at the target burnup::
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_11calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_11calc_deltaR[] = "Calculates and sets the deltaR value of the reactor.  \n        This is equal to the production rate minus the destruction rate at the target burnup::\n\n            deltaR = batchAve(TargetBU, \"P\") - batchAve(TargetBU, \"D\")\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * deltaR (float): deltaR.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_11calc_deltaR(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  double __pyx_v_deltaR;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("calc_deltaR");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_deltaR") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_deltaR", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4410; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.calc_deltaR");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":4427
 *         cdef double deltaR
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):
 */
  __pyx_t_1 = (__pyx_v_input == Py_None);
  if (__pyx_t_1) {

    /* "bright.pyx":4428
 * 
 *         if input is None:
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 */
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calc_deltaR();
    goto __pyx_L6;
  }

  /* "bright.pyx":4429
 *         if input is None:
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_1 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_1) {

    /* "bright.pyx":4430
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR()
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calc_deltaR(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":4431
 *         elif isinstance(input, dict):
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_1) {

    /* "bright.pyx":4432
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":4433
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return deltaR
 */
    __pyx_v_deltaR = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calc_deltaR((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":4435
 *             deltaR = (<cpp_bright.Reactor1G *> self.fr1g_pointer).calc_deltaR(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return deltaR             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_deltaR); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bright.FastReactor1G.calc_deltaR");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4441
 * 
 * 
 *     def FluenceAtBU(self, double burnup):             # <<<<<<<<<<<<<<
 *         """This function takes a burnup value  and returns a special fluence point object.
 *         The fluence point is an amalgamation of data where the at which the burnup occurs.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_12FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_12FluenceAtBU[] = "This function takes a burnup value  and returns a special fluence point object.  \n        The fluence point is an amalgamation of data where the at which the burnup occurs.\n        This object instance FP contains three pieces of information::\n    \n            FP.f    #Index immediately lower than where BU achieved (int)\n            FP.F    #Fluence value itself (float)\n            FP.m    #Slope dBU/dF between points f and f+1 (double)\n\n        Args:\n            * burnup (float): Burnup [MWd/kgIHM] at which to calculate the corresponding fluence.\n\n        Returns:\n            * fp (FluencePoint): A class containing fluence information.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_12FluenceAtBU(PyObject *__pyx_v_self, PyObject *__pyx_arg_burnup) {
  double __pyx_v_burnup;
  struct __pyx_obj_6bright_FluencePoint *__pyx_v_fp = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("FluenceAtBU");
  assert(__pyx_arg_burnup); {
    __pyx_v_burnup = __pyx_PyFloat_AsDouble(__pyx_arg_burnup); if (unlikely((__pyx_v_burnup == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.FluenceAtBU");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4456
 *             * fp (FluencePoint): A class containing fluence information.
 *         """
 *         cdef FluencePoint fp = FluencePoint()             # <<<<<<<<<<<<<<
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).FluenceAtBU(burnup)
 *         return fp
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_FluencePoint)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_fp = ((struct __pyx_obj_6bright_FluencePoint *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4457
 *         """
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).FluenceAtBU(burnup)             # <<<<<<<<<<<<<<
 *         return fp
 * 
 */
  (__pyx_v_fp->fp_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->FluenceAtBU(__pyx_v_burnup);

  /* "bright.pyx":4458
 *         cdef FluencePoint fp = FluencePoint()
 *         fp.fp_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).FluenceAtBU(burnup)
 *         return fp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_fp));
  __pyx_r = ((PyObject *)__pyx_v_fp);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.FluenceAtBU");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_fp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4461
 * 
 * 
 *     def batchAve(self, double BUd, char * PDk_flag="K"):             # <<<<<<<<<<<<<<
 *         """Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.
 *         This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_13batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_13batchAve[] = "Finds the batch-averaged P(F), D(F), or k(F) when at discharge burnup BUd.\n        This function is typically iterated over until a BUd is found such that k(F) = 1.0 + err.\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Keyword Args:\n            * PDk_flag (string): Flag that determines whether the neutron production rate \"P\" [n/s], \n              the neutron destruction rate \"D\" [n/s], or the multiplication factor \"K\" is reported in the output.\n\n        Returns:\n            * PDk (float): the batch averaged neutron production rate,\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_13batchAve(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_BUd;
  char *__pyx_v_PDk_flag;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__BUd,&__pyx_n_s__PDk_flag,0};
  __Pyx_RefNannySetupContext("batchAve");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__BUd);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__PDk_flag);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "batchAve") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_PDk_flag = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    }
  } else {
    __pyx_v_PDk_flag = ((char *)__pyx_k__K);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_PDk_flag = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_PDk_flag) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_BUd = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("batchAve", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.batchAve");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4475
 *             * PDk (float): the batch averaged neutron production rate,
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.fr1g_pointer).batchAve(BUd, std.string(PDk_flag))             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->batchAve(__pyx_v_BUd, std::string(__pyx_v_PDk_flag));

  /* "bright.pyx":4476
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.fr1g_pointer).batchAve(BUd, std.string(PDk_flag))
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.batchAve");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4479
 * 
 * 
 *     def batchAveK(self, double BUd):             # <<<<<<<<<<<<<<
 *         """Convenience function that calls batchAve(BUd, "K").
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_14batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_14batchAveK[] = "Convenience function that calls batchAve(BUd, \"K\").\n\n        Args:\n            * BUd (float): The discharge burnup [MWd/kgIHM] to obtain a batch-averaged value for.\n\n        Returns:\n            * k (float): the batch averaged multiplication factor.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_14batchAveK(PyObject *__pyx_v_self, PyObject *__pyx_arg_BUd) {
  double __pyx_v_BUd;
  double __pyx_v_PDk;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("batchAveK");
  assert(__pyx_arg_BUd); {
    __pyx_v_BUd = __pyx_PyFloat_AsDouble(__pyx_arg_BUd); if (unlikely((__pyx_v_BUd == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4479; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.batchAveK");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4488
 *             * k (float): the batch averaged multiplication factor.
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.fr1g_pointer).batchAveK(BUd)             # <<<<<<<<<<<<<<
 *         return PDk
 * 
 */
  __pyx_v_PDk = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->batchAveK(__pyx_v_BUd);

  /* "bright.pyx":4489
 *         """
 *         cdef double PDk = (<cpp_bright.Reactor1G *> self.fr1g_pointer).batchAveK(BUd)
 *         return PDk             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_PDk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.batchAveK");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4492
 * 
 * 
 *     def BUd_BisectionMethod(self):             # <<<<<<<<<<<<<<
 *         """Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn
 *         in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_15BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_15BUd_BisectionMethod[] = "Calculates the maximum discharge burnup via the Bisection Method for a given IsosIn\n        in this reactor.  This iterates over values of BUd to find a batch averaged multiplication factor \n        that is closest to 1.0.\n\n        Other root finding methods for determining maximum discharge burnup are certainly possible.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_15BUd_BisectionMethod(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("BUd_BisectionMethod");

  /* "bright.pyx":4499
 *         Other root finding methods for determining maximum discharge burnup are certainly possible.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).BUd_BisectionMethod()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->BUd_BisectionMethod();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4502
 * 
 * 
 *     def Run_PNL(self, double pnl):             # <<<<<<<<<<<<<<
 *         """Performs a reactor run for a specific non-leakage probability value.
 *         This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_16Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_16Run_PNL[] = "Performs a reactor run for a specific non-leakage probability value.\n        This requires that IsosIn be (meaningfully) set and is for use with Calibrate_PNL_2_BUd().\n\n        This function amounts to the following code::\n\n            self.P_NL = pnl\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n\n        Args:\n            * pnl (float): The new non-leakage probability for the reactor.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_16Run_PNL(PyObject *__pyx_v_self, PyObject *__pyx_arg_pnl) {
  double __pyx_v_pnl;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Run_PNL");
  assert(__pyx_arg_pnl); {
    __pyx_v_pnl = __pyx_PyFloat_AsDouble(__pyx_arg_pnl); if (unlikely((__pyx_v_pnl == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4502; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.Run_PNL");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4515
 *             * pnl (float): The new non-leakage probability for the reactor.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).Run_PNL(pnl)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->Run_PNL(__pyx_v_pnl);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4518
 * 
 * 
 *     def Calibrate_PNL_2_BUd(self):             # <<<<<<<<<<<<<<
 *         """Often times the non-leakage probability of a reactor is not known, though the input isotopics
 *         and the target discharge burnup are.  This function handles that situation by
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_17Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_17Calibrate_PNL_2_BUd[] = "Often times the non-leakage probability of a reactor is not known, though the input isotopics \n        and the target discharge burnup are.  This function handles that situation by\n        calibrating the non-leakage probability of this reactor P_NL to hit its target burnup TargetBU.\n        Such a calibration proceeds by bisection method as well.  This function is extremely useful for \n        benchmarking calculations.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_17Calibrate_PNL_2_BUd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("Calibrate_PNL_2_BUd");

  /* "bright.pyx":4525
 *         benchmarking calculations.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).Calibrate_PNL_2_BUd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->Calibrate_PNL_2_BUd();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4530
 * 
 * 
 *     def doCalc(self, input=None):             # <<<<<<<<<<<<<<
 *         """Since many other methods provide the computational heavy-lifting of reactor calculations,
 *         the doCalc() method is relatively simple::
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_18doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_18doCalc[] = "Since many other methods provide the computational heavy-lifting of reactor calculations, \n        the doCalc() method is relatively simple::\n\n            self.IsosIn = input\n            self.foldMassWeights()\n            self.BUd_BisectionMethod()\n            self.calcOutIso()\n            return self.IsosOut\n\n        As you can see, all this function does is set burn an input stream to its maximum \n        discharge burnup and then reports on the output isotopics.\n\n        Args:\n            * input (dict or MassStream): If input is present, it set as the component's \n              IsosIn.  If input is a isotopic dictionary (zzaaam keys, float values), this\n              dictionary is first converted into a MassStream before being set as IsosIn.\n\n        Returns:\n            * output (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_18doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input = 0;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_in_ms;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_output = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__input,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__input);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4530; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_input = values[0];
  } else {
    __pyx_v_input = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_input = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4530; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":4552
 *         """
 *         cdef mass_stream.MassStream in_ms
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if input is None:
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_output = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4554
 *         cdef mass_stream.MassStream output = mass_stream.MassStream()
 * 
 *         if input is None:             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.fr1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 */
  __pyx_t_2 = (__pyx_v_input == Py_None);
  if (__pyx_t_2) {

    /* "bright.pyx":4555
 * 
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.fr1g_pointer).doCalc()             # <<<<<<<<<<<<<<
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 */
    (__pyx_v_output->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":4556
 *         if input is None:
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.fr1g_pointer).doCalc()
 *         elif isinstance(input, dict):             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input); 
  if (__pyx_t_2) {

    /* "bright.pyx":4557
 *             output.ms_pointer[0] = (<cpp_bright.FCComp *> self.fr1g_pointer).doCalc()
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))             # <<<<<<<<<<<<<<
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_input))||((__pyx_v_input) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_input)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_output->ms_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->doCalc(__pyx_f_13stlconverters_dict_to_map_int_dbl(((PyObject*)__pyx_v_input)));
    goto __pyx_L6;
  }

  /* "bright.pyx":4558
 *         elif isinstance(input, dict):
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):             # <<<<<<<<<<<<<<
 *             in_ms = input
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_input, ((PyObject*)__pyx_ptype_11mass_stream_MassStream)); 
  if (__pyx_t_2) {

    /* "bright.pyx":4559
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(conv.dict_to_map_int_dbl(input))
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input             # <<<<<<<<<<<<<<
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 */
    if (!(likely(((__pyx_v_input) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_input, __pyx_ptype_11mass_stream_MassStream))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_input);
    __Pyx_DECREF(((PyObject *)__pyx_v_in_ms));
    __pyx_v_in_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_input);

    /* "bright.pyx":4560
 *         elif isinstance(input, mass_stream.MassStream):
 *             in_ms = input
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
    (__pyx_v_output->ms_pointer[0]) = ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->doCalc((__pyx_v_in_ms->ms_pointer[0]));
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "bright.pyx":4562
 *             output.ms_pointer[0] = (<cpp_bright.Reactor1G *> self.fr1g_pointer).doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 * 
 *         return output             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_output));
  __pyx_r = ((PyObject *)__pyx_v_output);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FastReactor1G.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_in_ms);
  __Pyx_XDECREF((PyObject *)__pyx_v_output);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4569
 * 
 * 
 *     def LatticeEPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_19LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_19LatticeEPlanar[] = "Calculates the lattice function E(F) for planar geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_19LatticeEPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeEPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeEPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeEPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4569; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeEPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4576
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeEPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeEPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4579
 * 
 * 
 *     def LatticeFPlanar(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_20LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_20LatticeFPlanar[] = "Calculates the lattice function F(F) for planar geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_20LatticeFPlanar(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFPlanar");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFPlanar") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFPlanar", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4579; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeFPlanar");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4586
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeFPlanar(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeFPlanar(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4589
 * 
 * 
 *     def LatticeESpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_21LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_21LatticeESpherical[] = "Calculates the lattice function E(F) for spherical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_21LatticeESpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeESpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeESpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeESpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeESpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4596
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeESpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeESpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4599
 * 
 * 
 *     def LatticeFSpherical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_22LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_22LatticeFSpherical[] = "Calculates the lattice function F(F) for spherical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_22LatticeFSpherical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFSpherical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFSpherical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFSpherical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeFSpherical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4606
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeFSpherical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeFSpherical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4609
 * 
 * 
 *     def LatticeECylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_23LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_23LatticeECylindrical[] = "Calculates the lattice function E(F) for cylindrical geometry.  Sets value as LatticeE_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_23LatticeECylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeECylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeECylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeECylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeECylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4616
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeECylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeECylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4619
 * 
 * 
 *     def LatticeFCylindrical(self, double a, double b):             # <<<<<<<<<<<<<<
 *         """Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_
 * 
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_24LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_24LatticeFCylindrical[] = "Calculates the lattice function F(F) for cylindrical geometry.  Sets value as LatticeF_F_\n\n        Args:\n            * a (float): Fuel region radius equivalent [cm].\n            * b (float): Unit fuel cell pitch length equivalent [cm].\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_24LatticeFCylindrical(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a,&__pyx_n_s__b,0};
  __Pyx_RefNannySetupContext("LatticeFCylindrical");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "LatticeFCylindrical") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("LatticeFCylindrical", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FastReactor1G.LatticeFCylindrical");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4626
 *             * b (float): Unit fuel cell pitch length equivalent [cm].
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).LatticeFCylindrical(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->LatticeFCylindrical(__pyx_v_a, __pyx_v_b);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4632
 * 
 * 
 *     def calcZeta(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_25calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_25calcZeta[] = "This calculates the thermal disadvantage factor for the geometry specified by Lattice.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_25calcZeta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZeta");

  /* "bright.pyx":4636
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcZeta()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcZeta();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4639
 * 
 * 
 *     def calcZetaPlanar(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a planar geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_26calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_26calcZetaPlanar[] = "This calculates the thermal disadvantage factor for a planar geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_26calcZetaPlanar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaPlanar");

  /* "bright.pyx":4643
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcZetaPlanar()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcZetaPlanar();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4646
 * 
 * 
 *     def calcZetaSpherical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a spherical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_27calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_27calcZetaSpherical[] = "This calculates the thermal disadvantage factor for a spherical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_27calcZetaSpherical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaSpherical");

  /* "bright.pyx":4650
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcZetaSpherical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcZetaSpherical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4653
 * 
 * 
 *     def calcZetaCylindrical(self):             # <<<<<<<<<<<<<<
 *         """This calculates the thermal disadvantage factor for a clyindrical geometry.  The results
 *         are set to zeta_F_.
 */

static PyObject *__pyx_pf_6bright_13FastReactor1G_28calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_13FastReactor1G_28calcZetaCylindrical[] = "This calculates the thermal disadvantage factor for a clyindrical geometry.  The results\n        are set to zeta_F_.\n        ";
static PyObject *__pyx_pf_6bright_13FastReactor1G_28calcZetaCylindrical(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calcZetaCylindrical");

  /* "bright.pyx":4657
 *         are set to zeta_F_.
 *         """
 *         (<cpp_bright.Reactor1G *> self.fr1g_pointer).calcZetaCylindrical()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((Reactor1G *)((struct __pyx_obj_6bright_FastReactor1G *)__pyx_v_self)->fr1g_pointer)->calcZetaCylindrical();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4703
 *     #cdef cpp_bright.FuelFabrication * ff_pointer
 * 
 *     def __cinit__(self, mass_streams=None, mass_weights_in=None, reactor=None, params2track=None, char * name=""):             # <<<<<<<<<<<<<<
 *         cdef std.string cpp_name = std.string(name)
 *         cdef Reactor1G r1g
 */

static int __pyx_pf_6bright_15FuelFabrication___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_mass_streams = 0;
  PyObject *__pyx_v_mass_weights_in = 0;
  PyObject *__pyx_v_reactor = 0;
  PyObject *__pyx_v_params2track = 0;
  char *__pyx_v_name;
  std::string __pyx_v_cpp_name;
  struct __pyx_obj_6bright_Reactor1G *__pyx_v_r1g;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__mass_streams,&__pyx_n_s__mass_weights_in,&__pyx_n_s__reactor,&__pyx_n_s__params2track,&__pyx_n_s__name,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_streams);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_weights_in);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__params2track);
        if (value) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_mass_streams = values[0];
    __pyx_v_mass_weights_in = values[1];
    __pyx_v_reactor = values[2];
    __pyx_v_params2track = values[3];
    if (values[4]) {
      __pyx_v_name = PyBytes_AsString(values[4]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_name = ((char *)__pyx_k_1);
    }
  } else {
    __pyx_v_mass_streams = ((PyObject *)Py_None);
    __pyx_v_mass_weights_in = ((PyObject *)Py_None);
    __pyx_v_reactor = ((PyObject *)Py_None);
    __pyx_v_params2track = ((PyObject *)Py_None);
    __pyx_v_name = ((char *)__pyx_k_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_params2track = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: __pyx_v_reactor = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_mass_weights_in = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_mass_streams = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_r1g = ((struct __pyx_obj_6bright_Reactor1G *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":4704
 * 
 *     def __cinit__(self, mass_streams=None, mass_weights_in=None, reactor=None, params2track=None, char * name=""):
 *         cdef std.string cpp_name = std.string(name)             # <<<<<<<<<<<<<<
 *         cdef Reactor1G r1g
 * 
 */
  __pyx_v_cpp_name = std::string(__pyx_v_name);

  /* "bright.pyx":4707
 *         cdef Reactor1G r1g
 * 
 *         if (mass_streams is None) and (mass_weights_in is None) and (reactor is None) and (params2track is None):             # <<<<<<<<<<<<<<
 *             self.ff_pointer = new cpp_bright.FuelFabrication(std.string(name))
 * 
 */
  __pyx_t_1 = (__pyx_v_mass_streams == Py_None);
  if (__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_mass_weights_in == Py_None);
    if (__pyx_t_2) {
      __pyx_t_3 = (__pyx_v_reactor == Py_None);
      if (__pyx_t_3) {
        __pyx_t_4 = (__pyx_v_params2track == Py_None);
        __pyx_t_5 = __pyx_t_4;
      } else {
        __pyx_t_5 = __pyx_t_3;
      }
      __pyx_t_3 = __pyx_t_5;
    } else {
      __pyx_t_3 = __pyx_t_2;
    }
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":4708
 * 
 *         if (mass_streams is None) and (mass_weights_in is None) and (reactor is None) and (params2track is None):
 *             self.ff_pointer = new cpp_bright.FuelFabrication(std.string(name))             # <<<<<<<<<<<<<<
 * 
 *         elif (mass_streams is None) and (mass_weights_in is None) and (reactor is None) and isinstance(params2track, set):
 */
    ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer = new FuelFabrication(std::string(__pyx_v_name));
    goto __pyx_L6;
  }

  /* "bright.pyx":4710
 *             self.ff_pointer = new cpp_bright.FuelFabrication(std.string(name))
 * 
 *         elif (mass_streams is None) and (mass_weights_in is None) and (reactor is None) and isinstance(params2track, set):             # <<<<<<<<<<<<<<
 *             self.ff_pointer = new cpp_bright.FuelFabrication(conv.py_to_cpp_set_str(params2track), cpp_name)
 * 
 */
  __pyx_t_2 = (__pyx_v_mass_streams == Py_None);
  if (__pyx_t_2) {
    __pyx_t_1 = (__pyx_v_mass_weights_in == Py_None);
    if (__pyx_t_1) {
      __pyx_t_3 = (__pyx_v_reactor == Py_None);
      if (__pyx_t_3) {
        __pyx_t_5 = PySet_Check(__pyx_v_params2track); 
        __pyx_t_4 = __pyx_t_5;
      } else {
        __pyx_t_4 = __pyx_t_3;
      }
      __pyx_t_3 = __pyx_t_4;
    } else {
      __pyx_t_3 = __pyx_t_1;
    }
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "bright.pyx":4711
 * 
 *         elif (mass_streams is None) and (mass_weights_in is None) and (reactor is None) and isinstance(params2track, set):
 *             self.ff_pointer = new cpp_bright.FuelFabrication(conv.py_to_cpp_set_str(params2track), cpp_name)             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and (params2track is None):
 */
    if (!(likely(PySet_CheckExact(__pyx_v_params2track))||((__pyx_v_params2track) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_params2track)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer = new FuelFabrication(__pyx_f_13stlconverters_py_to_cpp_set_str(((PyObject*)__pyx_v_params2track)), __pyx_v_cpp_name);
    goto __pyx_L6;
  }

  /* "bright.pyx":4713
 *             self.ff_pointer = new cpp_bright.FuelFabrication(conv.py_to_cpp_set_str(params2track), cpp_name)
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and (params2track is None):             # <<<<<<<<<<<<<<
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 */
  __pyx_t_1 = PyDict_Check(__pyx_v_mass_streams); 
  if (__pyx_t_1) {
    __pyx_t_2 = PyDict_Check(__pyx_v_mass_weights_in); 
    if (__pyx_t_2) {
      __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_reactor, ((PyObject*)__pyx_ptype_6bright_Reactor1G)); 
      if (__pyx_t_3) {
        __pyx_t_4 = (__pyx_v_params2track == Py_None);
        __pyx_t_5 = __pyx_t_4;
      } else {
        __pyx_t_5 = __pyx_t_3;
      }
      __pyx_t_3 = __pyx_t_5;
    } else {
      __pyx_t_3 = __pyx_t_2;
    }
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":4714
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and (params2track is None):
 *             r1g = reactor             # <<<<<<<<<<<<<<
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 */
    if (!(likely(((__pyx_v_reactor) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor, __pyx_ptype_6bright_Reactor1G))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor);
    __Pyx_DECREF(((PyObject *)__pyx_v_r1g));
    __pyx_v_r1g = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_reactor);

    /* "bright.pyx":4716
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),             # <<<<<<<<<<<<<<
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),
 *                                 r1g.r1g_pointer[0],
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_streams))||((__pyx_v_mass_streams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_streams)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4717
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),             # <<<<<<<<<<<<<<
 *                                 r1g.r1g_pointer[0],
 *                                 std.string(name))
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_weights_in))||((__pyx_v_mass_weights_in) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_weights_in)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4715
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and (params2track is None):
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(             # <<<<<<<<<<<<<<
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),
 */
    ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer = new FuelFabrication(__pyx_f_11mass_stream_dict_to_map_str_msp(((PyObject*)__pyx_v_mass_streams)), __pyx_f_13stlconverters_dict_to_map_str_dbl(((PyObject*)__pyx_v_mass_weights_in)), (__pyx_v_r1g->r1g_pointer[0]), std::string(__pyx_v_name));
    goto __pyx_L6;
  }

  /* "bright.pyx":4721
 *                                 std.string(name))
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and isinstance(params2track, set):             # <<<<<<<<<<<<<<
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_mass_streams); 
  if (__pyx_t_2) {
    __pyx_t_1 = PyDict_Check(__pyx_v_mass_weights_in); 
    if (__pyx_t_1) {
      __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_reactor, ((PyObject*)__pyx_ptype_6bright_Reactor1G)); 
      if (__pyx_t_3) {
        __pyx_t_5 = PySet_Check(__pyx_v_params2track); 
        __pyx_t_4 = __pyx_t_5;
      } else {
        __pyx_t_4 = __pyx_t_3;
      }
      __pyx_t_3 = __pyx_t_4;
    } else {
      __pyx_t_3 = __pyx_t_1;
    }
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "bright.pyx":4722
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and isinstance(params2track, set):
 *             r1g = reactor             # <<<<<<<<<<<<<<
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 */
    if (!(likely(((__pyx_v_reactor) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor, __pyx_ptype_6bright_Reactor1G))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor);
    __Pyx_DECREF(((PyObject *)__pyx_v_r1g));
    __pyx_v_r1g = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_reactor);

    /* "bright.pyx":4724
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),             # <<<<<<<<<<<<<<
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),
 *                                 r1g.r1g_pointer[0],
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_streams))||((__pyx_v_mass_streams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_streams)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4725
 *             self.ff_pointer = new cpp_bright.FuelFabrication(
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),             # <<<<<<<<<<<<<<
 *                                 r1g.r1g_pointer[0],
 *                                 conv.py_to_cpp_set_str(params2track),
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_weights_in))||((__pyx_v_mass_weights_in) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_weights_in)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4727
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),
 *                                 r1g.r1g_pointer[0],
 *                                 conv.py_to_cpp_set_str(params2track),             # <<<<<<<<<<<<<<
 *                                 std.string(name))
 * 
 */
    if (!(likely(PySet_CheckExact(__pyx_v_params2track))||((__pyx_v_params2track) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_params2track)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4723
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G) and isinstance(params2track, set):
 *             r1g = reactor
 *             self.ff_pointer = new cpp_bright.FuelFabrication(             # <<<<<<<<<<<<<<
 *                                 mass_stream.dict_to_map_str_msp(mass_streams),
 *                                 conv.dict_to_map_str_dbl(mass_weights_in),
 */
    ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer = new FuelFabrication(__pyx_f_11mass_stream_dict_to_map_str_msp(((PyObject*)__pyx_v_mass_streams)), __pyx_f_13stlconverters_dict_to_map_str_dbl(((PyObject*)__pyx_v_mass_weights_in)), (__pyx_v_r1g->r1g_pointer[0]), __pyx_f_13stlconverters_py_to_cpp_set_str(((PyObject*)__pyx_v_params2track)), std::string(__pyx_v_name));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":4731
 * 
 *         else:
 *             if mass_streams is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))
 * 
 */
    __pyx_t_1 = (__pyx_v_mass_streams != Py_None);
    if (__pyx_t_1) {

      /* "bright.pyx":4732
 *         else:
 *             if mass_streams is not None:
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))             # <<<<<<<<<<<<<<
 * 
 *             if mass_weights_in is not None:
 */
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(((PyObject *)__pyx_kp_s_12), __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_7));
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "bright.pyx":4734
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))
 * 
 *             if mass_weights_in is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))
 * 
 */
    __pyx_t_1 = (__pyx_v_mass_weights_in != Py_None);
    if (__pyx_t_1) {

      /* "bright.pyx":4735
 * 
 *             if mass_weights_in is not None:
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))             # <<<<<<<<<<<<<<
 * 
 *             if reactor is not None:
 */
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(((PyObject *)__pyx_kp_s_13), __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_7));
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "bright.pyx":4737
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))
 * 
 *             if reactor is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))
 * 
 */
    __pyx_t_1 = (__pyx_v_reactor != Py_None);
    if (__pyx_t_1) {

      /* "bright.pyx":4738
 * 
 *             if reactor is not None:
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))             # <<<<<<<<<<<<<<
 * 
 *             if params2track is not None:
 */
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_reactor)));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(__pyx_v_reactor)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_reactor)));
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_7));
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L9;
    }
    __pyx_L9:;

    /* "bright.pyx":4740
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))
 * 
 *             if params2track is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The params2track keyword must be a set of strings or None.  Got " + str(type(params2track)))
 * 
 */
    __pyx_t_1 = (__pyx_v_params2track != Py_None);
    if (__pyx_t_1) {

      /* "bright.pyx":4741
 * 
 *             if params2track is not None:
 *                 raise TypeError("The params2track keyword must be a set of strings or None.  Got " + str(type(params2track)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_params2track)));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(__pyx_v_params2track)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_params2track)));
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_7));
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L10;
    }
    __pyx_L10:;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("bright.FuelFabrication.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_r1g);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4744
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.ff_pointer
 * 
 */

static void __pyx_pf_6bright_15FuelFabrication_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bright_15FuelFabrication_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "bright.pyx":4745
 * 
 *     def __dealloc__(self):
 *         del self.ff_pointer             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer;

  __Pyx_RefNannyFinishContext();
}

/* "bright.pyx":4755
 * 
 *     property mass_streams:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return mass_stream.map_to_dict_str_msp(self.ff_pointer.mass_streams)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_12mass_streams___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_12mass_streams___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4756
 *     property mass_streams:
 *         def __get__(self):
 *             return mass_stream.map_to_dict_str_msp(self.ff_pointer.mass_streams)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_11mass_stream_map_to_dict_str_msp(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_streams)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.mass_streams.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4758
 *             return mass_stream.map_to_dict_str_msp(self.ff_pointer.mass_streams)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.mass_streams = mass_stream.dict_to_map_str_msp(value)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_12mass_streams_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_12mass_streams_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4759
 * 
 *         def __set__(self, dict value):
 *             self.ff_pointer.mass_streams = mass_stream.dict_to_map_str_msp(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_streams = __pyx_f_11mass_stream_dict_to_map_str_msp(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.mass_streams.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4763
 * 
 *     property mass_weights_in:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_in)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_15mass_weights_in___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_15mass_weights_in___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4764
 *     property mass_weights_in:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_in)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_weights_in)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.mass_weights_in.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4766
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_in)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.mass_weights_in = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_15mass_weights_in_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_15mass_weights_in_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4767
 * 
 *         def __set__(self, dict value):
 *             self.ff_pointer.mass_weights_in = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_weights_in = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.mass_weights_in.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4771
 * 
 *     property mass_weights_out:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_out)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_16mass_weights_out___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_16mass_weights_out___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4772
 *     property mass_weights_out:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_out)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_weights_out)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.mass_weights_out.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4774
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.mass_weights_out)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.mass_weights_out = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_16mass_weights_out_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_16mass_weights_out_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4775
 * 
 *         def __set__(self, dict value):
 *             self.ff_pointer.mass_weights_out = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->mass_weights_out = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.mass_weights_out.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4779
 * 
 *     property deltaRs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.deltaRs)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_7deltaRs___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_7deltaRs___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4780
 *     property deltaRs:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.deltaRs)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->deltaRs)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.deltaRs.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4782
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.deltaRs)
 * 
 *         def __set__(self, dict value):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.deltaRs = conv.dict_to_map_str_dbl(value)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_7deltaRs_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_7deltaRs_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyDict_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4783
 * 
 *         def __set__(self, dict value):
 *             self.ff_pointer.deltaRs = conv.dict_to_map_str_dbl(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->deltaRs = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.deltaRs.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4787
 * 
 *     property reactor:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef Reactor1G value = Reactor1G()
 *             value.r1g_pointer[0] = self.ff_pointer.reactor
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_7reactor___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_7reactor___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_6bright_Reactor1G *__pyx_v_value = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4788
 *     property reactor:
 *         def __get__(self):
 *             cdef Reactor1G value = Reactor1G()             # <<<<<<<<<<<<<<
 *             value.r1g_pointer[0] = self.ff_pointer.reactor
 *             return value
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_Reactor1G)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_value = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4789
 *         def __get__(self):
 *             cdef Reactor1G value = Reactor1G()
 *             value.r1g_pointer[0] = self.ff_pointer.reactor             # <<<<<<<<<<<<<<
 *             return value
 * 
 */
  (__pyx_v_value->r1g_pointer[0]) = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->reactor;

  /* "bright.pyx":4790
 *             cdef Reactor1G value = Reactor1G()
 *             value.r1g_pointer[0] = self.ff_pointer.reactor
 *             return value             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Reactor1G value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_value));
  __pyx_r = ((PyObject *)__pyx_v_value);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.reactor.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4792
 *             return value
 * 
 *         def __set__(self, Reactor1G value):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.reactor = <cpp_bright.Reactor1G> value.r1g_pointer[0]
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_7reactor_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_7reactor_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_6bright_Reactor1G, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4793
 * 
 *         def __set__(self, Reactor1G value):
 *             self.ff_pointer.reactor = <cpp_bright.Reactor1G> value.r1g_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->reactor = (((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_value)->r1g_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.reactor.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4799
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.ff_pointer.name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_4name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4800
 *     property name:
 *         def __get__(self):
 *             cdef std.string n = self.ff_pointer.name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->name;

  /* "bright.pyx":4801
 *         def __get__(self):
 *             cdef std.string n = self.ff_pointer.name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4803
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4803; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4804
 * 
 *         def __set__(self, char * n):
 *             self.ff_pointer.name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4808
 * 
 *     property natural_name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef std.string n = self.ff_pointer.natural_name
 *             return n.c_str()
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_12natural_name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_12natural_name___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4809
 *     property natural_name:
 *         def __get__(self):
 *             cdef std.string n = self.ff_pointer.natural_name             # <<<<<<<<<<<<<<
 *             return n.c_str()
 * 
 */
  __pyx_v_n = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->natural_name;

  /* "bright.pyx":4810
 *         def __get__(self):
 *             cdef std.string n = self.ff_pointer.natural_name
 *             return n.c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char * n):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_n.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.natural_name.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4812
 *             return n.c_str()
 * 
 *         def __set__(self, char * n):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.natural_name = std.string(n)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_12natural_name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_n) {
  char *__pyx_v_n;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_n); {
    __pyx_v_n = PyBytes_AsString(__pyx_arg_n); if (unlikely((!__pyx_v_n) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.natural_name.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4813
 * 
 *         def __set__(self, char * n):
 *             self.ff_pointer.natural_name = std.string(n)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->natural_name = std::string(__pyx_v_n);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4817
 * 
 *     property IsosIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosIn
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_6IsosIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_6IsosIn___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4818
 *     property IsosIn:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosIn
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4819
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosIn             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->IsosIn;

  /* "bright.pyx":4820
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosIn
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.IsosIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4822
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_6IsosIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4823
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.ff_pointer.IsosIn = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->IsosIn = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.IsosIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4827
 * 
 *     property IsosOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosOut
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_7IsosOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_7IsosOut___get__(PyObject *__pyx_v_self) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4828
 *     property IsosOut:
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosOut
 *             return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4829
 *         def __get__(self):
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosOut             # <<<<<<<<<<<<<<
 *             return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->IsosOut;

  /* "bright.pyx":4830
 *             cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *             py_ms.ms_pointer[0] = self.ff_pointer.IsosOut
 *             return py_ms             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.IsosOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4832
 *             return py_ms
 * 
 *         def __set__(self, mass_stream.MassStream ms):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_7IsosOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ms) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ms), __pyx_ptype_11mass_stream_MassStream, 1, "ms", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4833
 * 
 *         def __set__(self, mass_stream.MassStream ms):
 *             self.ff_pointer.IsosOut = <cpp_mass_stream.MassStream> ms.ms_pointer[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->IsosOut = (((struct __pyx_obj_11mass_stream_MassStream *)__pyx_v_ms)->ms_pointer[0]);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.IsosOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4837
 * 
 *     property ParamsIn:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsIn)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_8ParamsIn___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_8ParamsIn___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4838
 *     property ParamsIn:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsIn)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict pi):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->ParamsIn)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.ParamsIn.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4840
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsIn)
 * 
 *         def __set__(self, dict pi):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_8ParamsIn_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pi) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pi), (&PyDict_Type), 1, "pi", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4841
 * 
 *         def __set__(self, dict pi):
 *             self.ff_pointer.ParamsIn = conv.dict_to_map_str_dbl(pi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->ParamsIn = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_pi);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.ParamsIn.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4845
 * 
 *     property ParamsOut:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsOut)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_9ParamsOut___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_9ParamsOut___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4846
 *     property ParamsOut:
 *         def __get__(self):
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsOut)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, dict po):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_map_to_dict_str_dbl(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->ParamsOut)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.ParamsOut.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4848
 *             return conv.map_to_dict_str_dbl(self.ff_pointer.ParamsOut)
 * 
 *         def __set__(self, dict po):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_9ParamsOut_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_po) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_po), (&PyDict_Type), 1, "po", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4849
 * 
 *         def __set__(self, dict po):
 *             self.ff_pointer.ParamsOut = conv.dict_to_map_str_dbl(po)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->ParamsOut = __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_po);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.ParamsOut.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4853
 * 
 *     property PassNum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ff_pointer.PassNum
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_7PassNum___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_7PassNum___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4854
 *     property PassNum:
 *         def __get__(self):
 *             return self.ff_pointer.PassNum             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int pn):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->PassNum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.PassNum.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4856
 *             return self.ff_pointer.PassNum
 * 
 *         def __set__(self, int pn):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.PassNum = pn
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_7PassNum_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_pn) {
  int __pyx_v_pn;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_pn); {
    __pyx_v_pn = __Pyx_PyInt_AsInt(__pyx_arg_pn); if (unlikely((__pyx_v_pn == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.PassNum.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "bright.pyx":4857
 * 
 *         def __set__(self, int pn):
 *             self.ff_pointer.PassNum = pn             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->PassNum = __pyx_v_pn;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4861
 * 
 *     property params2track:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return conv.cpp_to_py_set_str(self.ff_pointer.params2track)
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_12params2track___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bright_15FuelFabrication_12params2track___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "bright.pyx":4862
 *     property params2track:
 *         def __get__(self):
 *             return conv.cpp_to_py_set_str(self.ff_pointer.params2track)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, set p2t):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_13stlconverters_cpp_to_py_set_str(((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->params2track)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.params2track.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4864
 *             return conv.cpp_to_py_set_str(self.ff_pointer.params2track)
 * 
 *         def __set__(self, set p2t):             # <<<<<<<<<<<<<<
 *             self.ff_pointer.params2track = conv.py_to_cpp_set_str(p2t)
 * 
 */

static int __pyx_pf_6bright_15FuelFabrication_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t); /*proto*/
static int __pyx_pf_6bright_15FuelFabrication_12params2track_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_p2t) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p2t), (&PySet_Type), 1, "p2t", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4865
 * 
 *         def __set__(self, set p2t):
 *             self.ff_pointer.params2track = conv.py_to_cpp_set_str(p2t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->params2track = __pyx_f_13stlconverters_py_to_cpp_set_str(__pyx_v_p2t);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.params2track.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4873
 *     #
 * 
 *     def initialize(self, dict mass_streams, dict mass_weights_in, Reactor1G reactor):             # <<<<<<<<<<<<<<
 *         """The initialize() method takes the appropriate mass streams, input mass weights,
 *         a reactor objects and resets the current FuelFabrication instance.
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_2initialize[] = "The initialize() method takes the appropriate mass streams, input mass weights,\n        a reactor objects and resets the current FuelFabrication instance.\n\n        Args:\n            * mass_streams (dict): A dictionary whose keys are string labels and whose values are mass streams.  \n            * mass_weights_in (dict): A dictionary whose keys are the same as for mass_streams\n              and whose values are the associated weight (float) for that stream.\n            * reactor (Reactor1G): An instance of a Reactor1G class to fabricate fuel for.\n        ";
static PyObject *__pyx_pf_6bright_15FuelFabrication_2initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_mass_streams = 0;
  PyObject *__pyx_v_mass_weights_in = 0;
  struct __pyx_obj_6bright_Reactor1G *__pyx_v_reactor = 0;
  struct __pyx_obj_6bright_Reactor1G *__pyx_v_r1g = 0;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__mass_streams,&__pyx_n_s__mass_weights_in,&__pyx_n_s__reactor,0};
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_streams);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_weights_in);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "initialize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_mass_streams = ((PyObject*)values[0]);
    __pyx_v_mass_weights_in = ((PyObject*)values[1]);
    __pyx_v_reactor = ((struct __pyx_obj_6bright_Reactor1G *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_mass_streams = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_mass_weights_in = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_reactor = ((struct __pyx_obj_6bright_Reactor1G *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("initialize", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.initialize");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mass_streams), (&PyDict_Type), 1, "mass_streams", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mass_weights_in), (&PyDict_Type), 1, "mass_weights_in", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reactor), __pyx_ptype_6bright_Reactor1G, 1, "reactor", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "bright.pyx":4883
 *             * reactor (Reactor1G): An instance of a Reactor1G class to fabricate fuel for.
 *         """
 *         cdef Reactor1G r1g = reactor             # <<<<<<<<<<<<<<
 *         self.ff_pointer.initialize(mass_stream.dict_to_map_str_msp(mass_streams),
 *                                    conv.dict_to_map_str_dbl(mass_weights_in),
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_reactor));
  __pyx_v_r1g = __pyx_v_reactor;

  /* "bright.pyx":4886
 *         self.ff_pointer.initialize(mass_stream.dict_to_map_str_msp(mass_streams),
 *                                    conv.dict_to_map_str_dbl(mass_weights_in),
 *                                    r1g.r1g_pointer[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->initialize(__pyx_f_11mass_stream_dict_to_map_str_msp(__pyx_v_mass_streams), __pyx_f_13stlconverters_dict_to_map_str_dbl(__pyx_v_mass_weights_in), (__pyx_v_r1g->r1g_pointer[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r1g);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4889
 * 
 * 
 *     def setParams(self):             # <<<<<<<<<<<<<<
 *         """Here the parameters for FuelFabrication are set.  For example::
 * 
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_3setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_3setParams[] = "Here the parameters for FuelFabrication are set.  For example::\n\n            self.ParamsIn[\"Weight_U235\"]  = self.mass_weights_in[\"U235\"]\n            self.Paramsout[\"Weight_U235\"] = self.mass_weights_out[\"U235\"]\n\n            self.ParamsIn[\"deltaR_U235\"]  = self.deltaRs[\"U235\"]\n            self.Paramsout[\"deltaR_U235\"] = self.deltaRs[\"U235\"]\n\n            self.ParamsIn[\"Weight_U238\"]  = self.mass_weights_in[\"U238\"]\n            self.Paramsout[\"Weight_U238\"] = self.mass_weights_out[\"U238\"]\n\n            self.ParamsIn[\"deltaR_U238\"]  = self.deltaRs[\"U238\"]\n            self.Paramsout[\"deltaR_U238\"] = self.deltaRs[\"U238\"]\n        ";
static PyObject *__pyx_pf_6bright_15FuelFabrication_3setParams(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setParams");

  /* "bright.pyx":4904
 *             self.Paramsout["deltaR_U238"] = self.deltaRs["U238"]
 *         """
 *         (<cpp_bright.FCComp *> self.ff_pointer).setParams()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((FCComp *)((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer)->setParams();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4910
 * 
 * 
 *     def calc_deltaRs(self):             # <<<<<<<<<<<<<<
 *         """Computes deltaRs for each mass stream."""
 *         self.ff_pointer.calc_deltaRs()
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_4calc_deltaRs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_4calc_deltaRs[] = "Computes deltaRs for each mass stream.";
static PyObject *__pyx_pf_6bright_15FuelFabrication_4calc_deltaRs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calc_deltaRs");

  /* "bright.pyx":4912
 *     def calc_deltaRs(self):
 *         """Computes deltaRs for each mass stream."""
 *         self.ff_pointer.calc_deltaRs()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->calc_deltaRs();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4915
 * 
 * 
 *     def calc_core_input(self):             # <<<<<<<<<<<<<<
 *         """Computes the core input mass stream that becomes IsosOut based on mass_streams and
 *         mass_weights_out.
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_5calc_core_input(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_5calc_core_input[] = "Computes the core input mass stream that becomes IsosOut based on mass_streams and \n        mass_weights_out.\n\n        Returns:\n            * core_input (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_15FuelFabrication_5calc_core_input(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_py_ms = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("calc_core_input");

  /* "bright.pyx":4922
 *             * core_input (MassStream): IsosOut.
 *         """
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 *         py_ms.ms_pointer[0] = self.ff_pointer.calc_core_input()
 *         return py_ms
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_py_ms = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4923
 *         """
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *         py_ms.ms_pointer[0] = self.ff_pointer.calc_core_input()             # <<<<<<<<<<<<<<
 *         return py_ms
 * 
 */
  (__pyx_v_py_ms->ms_pointer[0]) = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->calc_core_input();

  /* "bright.pyx":4924
 *         cdef mass_stream.MassStream py_ms = mass_stream.MassStream()
 *         py_ms.ms_pointer[0] = self.ff_pointer.calc_core_input()
 *         return py_ms             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_py_ms));
  __pyx_r = ((PyObject *)__pyx_v_py_ms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bright.FuelFabrication.calc_core_input");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4927
 * 
 * 
 *     def calc_mass_ratios(self):             # <<<<<<<<<<<<<<
 *         """Calculates mass_weights_out by varying the values of the two parameter which had
 *         negative values in mass_weights_in.  Therefore, this is the portion of the code that
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_6calc_mass_ratios(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_6calc_mass_ratios[] = "Calculates mass_weights_out by varying the values of the two parameter which had \n        negative values in mass_weights_in.  Therefore, this is the portion of the code that \n        performs the optimization calculation.\n        ";
static PyObject *__pyx_pf_6bright_15FuelFabrication_6calc_mass_ratios(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("calc_mass_ratios");

  /* "bright.pyx":4932
 *         performs the optimization calculation.
 *         """
 *         self.ff_pointer.calc_mass_ratios()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->calc_mass_ratios();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bright.pyx":4938
 * 
 * 
 *     def doCalc(self, mass_streams=None, mass_weights_in=None, reactor=None):             # <<<<<<<<<<<<<<
 *         """This method performs an optimization calculation on all input mass streams to determine
 *         the mass ratios that generate the correct fuel form for the reactor.  It then compiles
 */

static PyObject *__pyx_pf_6bright_15FuelFabrication_7doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bright_15FuelFabrication_7doCalc[] = "This method performs an optimization calculation on all input mass streams to determine\n        the mass ratios that generate the correct fuel form for the reactor.  It then compiles \n        the fuel and returns the resultant MassStream. \n\n        Args:\n            * mass_streams (dict): A dictionary whose keys are string labels and whose values are mass streams.  \n            * mass_weights_in (dict): A dictionary whose keys are the same as for mass_streams\n              and whose values are the associated weight (float) for that stream.\n            * reactor (Reactor1G): An instance of a Reactor1G class to fabricate fuel for.\n\n        Returns:\n            * core_input (MassStream): IsosOut.\n        ";
static PyObject *__pyx_pf_6bright_15FuelFabrication_7doCalc(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_mass_streams = 0;
  PyObject *__pyx_v_mass_weights_in = 0;
  PyObject *__pyx_v_reactor = 0;
  struct __pyx_obj_6bright_Reactor1G *__pyx_v_r1g;
  struct __pyx_obj_11mass_stream_MassStream *__pyx_v_core_input = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__mass_streams,&__pyx_n_s__mass_weights_in,&__pyx_n_s__reactor,0};
  __Pyx_RefNannySetupContext("doCalc");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_streams);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass_weights_in);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reactor);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "doCalc") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4938; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_mass_streams = values[0];
    __pyx_v_mass_weights_in = values[1];
    __pyx_v_reactor = values[2];
  } else {
    __pyx_v_mass_streams = ((PyObject *)Py_None);
    __pyx_v_mass_weights_in = ((PyObject *)Py_None);
    __pyx_v_reactor = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_reactor = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_mass_weights_in = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_mass_streams = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("doCalc", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4938; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bright.FuelFabrication.doCalc");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_r1g = ((struct __pyx_obj_6bright_Reactor1G *)Py_None); __Pyx_INCREF(Py_None);

  /* "bright.pyx":4953
 *         """
 *         cdef Reactor1G r1g
 *         cdef mass_stream.MassStream core_input = mass_stream.MassStream()             # <<<<<<<<<<<<<<
 * 
 *         if (mass_streams is None) and (mass_weights_in is None) and (reactor is None):
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_11mass_stream_MassStream)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_core_input = ((struct __pyx_obj_11mass_stream_MassStream *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bright.pyx":4955
 *         cdef mass_stream.MassStream core_input = mass_stream.MassStream()
 * 
 *         if (mass_streams is None) and (mass_weights_in is None) and (reactor is None):             # <<<<<<<<<<<<<<
 *             core_input.ms_pointer[0] = (<cpp_bright.FCComp *> self.ff_pointer).doCalc()
 * 
 */
  __pyx_t_2 = (__pyx_v_mass_streams == Py_None);
  if (__pyx_t_2) {
    __pyx_t_3 = (__pyx_v_mass_weights_in == Py_None);
    if (__pyx_t_3) {
      __pyx_t_4 = (__pyx_v_reactor == Py_None);
      __pyx_t_5 = __pyx_t_4;
    } else {
      __pyx_t_5 = __pyx_t_3;
    }
    __pyx_t_3 = __pyx_t_5;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (__pyx_t_3) {

    /* "bright.pyx":4956
 * 
 *         if (mass_streams is None) and (mass_weights_in is None) and (reactor is None):
 *             core_input.ms_pointer[0] = (<cpp_bright.FCComp *> self.ff_pointer).doCalc()             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G):
 */
    (__pyx_v_core_input->ms_pointer[0]) = ((FCComp *)((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer)->doCalc();
    goto __pyx_L6;
  }

  /* "bright.pyx":4958
 *             core_input.ms_pointer[0] = (<cpp_bright.FCComp *> self.ff_pointer).doCalc()
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G):             # <<<<<<<<<<<<<<
 *             r1g = reactor
 *             core_input.ms_pointer[0] = self.ff_pointer.doCalc(
 */
  __pyx_t_3 = PyDict_Check(__pyx_v_mass_streams); 
  if (__pyx_t_3) {
    __pyx_t_2 = PyDict_Check(__pyx_v_mass_weights_in); 
    if (__pyx_t_2) {
      __pyx_t_5 = __Pyx_TypeCheck(__pyx_v_reactor, ((PyObject*)__pyx_ptype_6bright_Reactor1G)); 
      __pyx_t_4 = __pyx_t_5;
    } else {
      __pyx_t_4 = __pyx_t_2;
    }
    __pyx_t_2 = __pyx_t_4;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "bright.pyx":4959
 * 
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G):
 *             r1g = reactor             # <<<<<<<<<<<<<<
 *             core_input.ms_pointer[0] = self.ff_pointer.doCalc(
 *                                                             mass_stream.dict_to_map_str_msp(mass_streams),
 */
    if (!(likely(((__pyx_v_reactor) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_reactor, __pyx_ptype_6bright_Reactor1G))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_reactor);
    __Pyx_DECREF(((PyObject *)__pyx_v_r1g));
    __pyx_v_r1g = ((struct __pyx_obj_6bright_Reactor1G *)__pyx_v_reactor);

    /* "bright.pyx":4961
 *             r1g = reactor
 *             core_input.ms_pointer[0] = self.ff_pointer.doCalc(
 *                                                             mass_stream.dict_to_map_str_msp(mass_streams),             # <<<<<<<<<<<<<<
 *                                                             conv.dict_to_map_str_dbl(mass_weights_in),
 *                                                             r1g.r1g_pointer[0])
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_streams))||((__pyx_v_mass_streams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_streams)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4962
 *             core_input.ms_pointer[0] = self.ff_pointer.doCalc(
 *                                                             mass_stream.dict_to_map_str_msp(mass_streams),
 *                                                             conv.dict_to_map_str_dbl(mass_weights_in),             # <<<<<<<<<<<<<<
 *                                                             r1g.r1g_pointer[0])
 * 
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_mass_weights_in))||((__pyx_v_mass_weights_in) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected dict, got %.200s", Py_TYPE(__pyx_v_mass_weights_in)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "bright.pyx":4960
 *         elif isinstance(mass_streams, dict) and isinstance(mass_weights_in, dict) and isinstance(reactor, Reactor1G):
 *             r1g = reactor
 *             core_input.ms_pointer[0] = self.ff_pointer.doCalc(             # <<<<<<<<<<<<<<
 *                                                             mass_stream.dict_to_map_str_msp(mass_streams),
 *                                                             conv.dict_to_map_str_dbl(mass_weights_in),
 */
    (__pyx_v_core_input->ms_pointer[0]) = ((struct __pyx_obj_6bright_FuelFabrication *)__pyx_v_self)->ff_pointer->doCalc(__pyx_f_11mass_stream_dict_to_map_str_msp(((PyObject*)__pyx_v_mass_streams)), __pyx_f_13stlconverters_dict_to_map_str_dbl(((PyObject*)__pyx_v_mass_weights_in)), (__pyx_v_r1g->r1g_pointer[0]));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "bright.pyx":4966
 * 
 *         else:
 *             if mass_streams is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))
 * 
 */
    __pyx_t_2 = (__pyx_v_mass_streams != Py_None);
    if (__pyx_t_2) {

      /* "bright.pyx":4967
 *         else:
 *             if mass_streams is not None:
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))             # <<<<<<<<<<<<<<
 * 
 *             if mass_weights_in is not None:
 */
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_mass_streams)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_12), __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "bright.pyx":4969
 *                 raise TypeError("The mass_streams keyword must be a dictionary of (string, MassStream) items or None.  Got " + str(type(mass_streams)))
 * 
 *             if mass_weights_in is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))
 * 
 */
    __pyx_t_2 = (__pyx_v_mass_weights_in != Py_None);
    if (__pyx_t_2) {

      /* "bright.pyx":4970
 * 
 *             if mass_weights_in is not None:
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))             # <<<<<<<<<<<<<<
 * 
 *             if reactor is not None:
 */
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_mass_weights_in)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_13), __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "bright.pyx":4972
 *                 raise TypeError("The mass_weights_in keyword must be a dictionary of (string, float) items or None.  Got " + str(type(mass_weights_in)))
 * 
 *             if reactor is not None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))
 * 
 */
    __pyx_t_2 = (__pyx_v_reactor != Py_None);
    if (__pyx_t_2) {

      /* "bright.pyx":4973
 * 
 *             if reactor is not None:
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))             # <<<<<<<<<<<<<<
 * 
 *         return core_input
 */
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_reactor)));
      PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(__pyx_v_reactor)));
      __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_reactor)));
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_6));
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L9;
    }
    __pyx_L9:;
  }
  __pyx_L6:;

  /* "bright.pyx":4975
 *                 raise TypeError("The reactor keyword must be a Reactor1G instance or None.  Got " + str(type(reactor)))
 * 
 *         return core_input             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_core_input));
  __pyx_r = ((PyObject *)__pyx_v_core_input);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bright.FuelFabrication.doCalc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_r1g);
  __Pyx_XDECREF((PyObject *)__pyx_v_core_input);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":188
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("__getbuffer__");
  if (__pyx_v_info == NULL) return 0;
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "numpy.pxd":194
 *             # of flags
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "numpy.pxd":195
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "numpy.pxd":197
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(((PyArrayObject *)__pyx_v_self));

  /* "numpy.pxd":199
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "numpy.pxd":200
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "numpy.pxd":202
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L5:;

  /* "numpy.pxd":204
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
  if (__pyx_t_1) {

    /* "numpy.pxd":205
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
    __pyx_t_2 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_C_CONTIGUOUS));
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "numpy.pxd":206
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_16), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "numpy.pxd":208
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_3 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
  if (__pyx_t_3) {

    /* "numpy.pxd":209
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_F_CONTIGUOUS));
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "numpy.pxd":210
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_18), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "numpy.pxd":212
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(((PyArrayObject *)__pyx_v_self));

  /* "numpy.pxd":213
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info. This is allocated
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "numpy.pxd":214
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 */
  if (__pyx_v_copy_shape) {

    /* "numpy.pxd":217
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * __pyx_v_ndim) * 2)));

    /* "numpy.pxd":218
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "numpy.pxd":219
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_5 = __pyx_v_ndim;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "numpy.pxd":220
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);

      /* "numpy.pxd":221
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);
    }
    goto __pyx_L8;
  }
  /*else*/ {

    /* "numpy.pxd":223
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(((PyArrayObject *)__pyx_v_self)));

    /* "numpy.pxd":224
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(((PyArrayObject *)__pyx_v_self)));
  }
  __pyx_L8:;

  /* "numpy.pxd":225
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "numpy.pxd":226
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(((PyArrayObject *)__pyx_v_self));

  /* "numpy.pxd":227
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(((PyArrayObject *)__pyx_v_self)));

  /* "numpy.pxd":230
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "numpy.pxd":231
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __Pyx_INCREF(((PyObject *)((PyArrayObject *)__pyx_v_self)->descr));
  __pyx_v_descr = ((PyArrayObject *)__pyx_v_self)->descr;

  /* "numpy.pxd":235
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "numpy.pxd":237
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = (!__pyx_v_hasfields);
  if (__pyx_t_2) {
    __pyx_t_3 = (!__pyx_v_copy_shape);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "numpy.pxd":239
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "numpy.pxd":242
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(__pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = __pyx_v_self;
  }
  __pyx_L11:;

  /* "numpy.pxd":244
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 */
  __pyx_t_1 = (!__pyx_v_hasfields);
  if (__pyx_t_1) {

    /* "numpy.pxd":245
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 */
    __pyx_v_t = __pyx_v_descr->type_num;

    /* "numpy.pxd":246
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_1 = (__pyx_v_descr->byteorder == '>');
    if (__pyx_t_1) {
      __pyx_t_2 = __pyx_v_little_endian;
    } else {
      __pyx_t_2 = __pyx_t_1;
    }
    if (!__pyx_t_2) {

      /* "numpy.pxd":247
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      __pyx_t_1 = (__pyx_v_descr->byteorder == '<');
      if (__pyx_t_1) {
        __pyx_t_3 = (!__pyx_v_little_endian);
        __pyx_t_7 = __pyx_t_3;
      } else {
        __pyx_t_7 = __pyx_t_1;
      }
      __pyx_t_1 = __pyx_t_7;
    } else {
      __pyx_t_1 = __pyx_t_2;
    }
    if (__pyx_t_1) {

      /* "numpy.pxd":248
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_20), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L13;
    }
    __pyx_L13:;

    /* "numpy.pxd":249
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_BYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__b;
      goto __pyx_L14;
    }

    /* "numpy.pxd":250
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UBYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__B;
      goto __pyx_L14;
    }

    /* "numpy.pxd":251
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_SHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__h;
      goto __pyx_L14;
    }

    /* "numpy.pxd":252
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_USHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__H;
      goto __pyx_L14;
    }

    /* "numpy.pxd":253
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_INT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__i;
      goto __pyx_L14;
    }

    /* "numpy.pxd":254
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UINT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__I;
      goto __pyx_L14;
    }

    /* "numpy.pxd":255
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__l;
      goto __pyx_L14;
    }

    /* "numpy.pxd":256
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__L;
      goto __pyx_L14;
    }

    /* "numpy.pxd":257
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__q;
      goto __pyx_L14;
    }

    /* "numpy.pxd":258
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Q;
      goto __pyx_L14;
    }

    /* "numpy.pxd":259
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_FLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__f;
      goto __pyx_L14;
    }

    /* "numpy.pxd":260
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_DOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__d;
      goto __pyx_L14;
    }

    /* "numpy.pxd":261
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__g;
      goto __pyx_L14;
    }

    /* "numpy.pxd":262
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CFLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zf;
      goto __pyx_L14;
    }

    /* "numpy.pxd":263
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zd;
      goto __pyx_L14;
    }

    /* "numpy.pxd":264
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CLONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zg;
      goto __pyx_L14;
    }

    /* "numpy.pxd":265
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    __pyx_t_1 = (__pyx_v_t == NPY_OBJECT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__O;
      goto __pyx_L14;
    }
    /*else*/ {

      /* "numpy.pxd":267
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_4 = PyInt_FromLong(__pyx_v_t); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_21), __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_8));
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_8));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_8));
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_8, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L14:;

    /* "numpy.pxd":268
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "numpy.pxd":269
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L12;
  }
  /*else*/ {

    /* "numpy.pxd":271
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "numpy.pxd":272
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "numpy.pxd":273
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "numpy.pxd":276
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)             # <<<<<<<<<<<<<<
 *                 f[0] = 0 # Terminate format string
 * 
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_9;

    /* "numpy.pxd":277
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = 0 # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = 0;
  }
  __pyx_L12:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__");
  __pyx_r = -1;
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":279
 *                 f[0] = 0 # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray_1__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray_1__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__");

  /* "numpy.pxd":280
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = PyArray_HASFIELDS(((PyArrayObject *)__pyx_v_self));
  if (__pyx_t_1) {

    /* "numpy.pxd":281
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "numpy.pxd":282
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "numpy.pxd":283
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L6;
  }
  __pyx_L6:;

  __Pyx_RefNannyFinishContext();
}

/* "numpy.pxd":756
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1");

  /* "numpy.pxd":757
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":759
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2");

  /* "numpy.pxd":760
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":762
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3");

  /* "numpy.pxd":763
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":765
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4");

  /* "numpy.pxd":766
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":768
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5");

  /* "numpy.pxd":769
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":771
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields;
  PyObject *__pyx_v_childname;
  PyObject *__pyx_v_new_offset;
  PyObject *__pyx_v_t;
  char *__pyx_r;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  long __pyx_t_10;
  char *__pyx_t_11;
  __Pyx_RefNannySetupContext("_util_dtypestring");
  __pyx_v_child = ((PyArray_Descr *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_fields = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_childname = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_new_offset = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_t = Py_None; __Pyx_INCREF(Py_None);

  /* "numpy.pxd":778
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "numpy.pxd":779
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "numpy.pxd":782
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = 0; __pyx_t_2 = ((PyObject *)__pyx_v_descr->names); __Pyx_INCREF(__pyx_t_2);
  for (;;) {
    if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
    __Pyx_DECREF(__pyx_v_childname);
    __pyx_v_childname = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "numpy.pxd":783
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (!__pyx_t_3) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_fields));
    __pyx_v_fields = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "numpy.pxd":784
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 */
    if (likely(((PyObject *)__pyx_v_fields) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_fields)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_fields);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_v_child));
      __pyx_v_child = ((PyArray_Descr *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_v_new_offset);
      __pyx_v_new_offset = __pyx_t_4;
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_fields), 2);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "numpy.pxd":786
 *         child, new_offset = fields
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = PyInt_FromLong((__pyx_v_end - __pyx_v_f)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_int_15, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "numpy.pxd":787
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_23), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "numpy.pxd":789
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_6 = (__pyx_v_child->byteorder == '>');
    if (__pyx_t_6) {
      __pyx_t_7 = __pyx_v_little_endian;
    } else {
      __pyx_t_7 = __pyx_t_6;
    }
    if (!__pyx_t_7) {

      /* "numpy.pxd":790
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      __pyx_t_6 = (__pyx_v_child->byteorder == '<');
      if (__pyx_t_6) {
        __pyx_t_8 = (!__pyx_v_little_endian);
        __pyx_t_9 = __pyx_t_8;
      } else {
        __pyx_t_9 = __pyx_t_6;
      }
      __pyx_t_6 = __pyx_t_9;
    } else {
      __pyx_t_6 = __pyx_t_7;
    }
    if (__pyx_t_6) {

      /* "numpy.pxd":791
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_24), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "numpy.pxd":801
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_5 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_5, __pyx_v_new_offset, Py_LT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_6) break;

      /* "numpy.pxd":802
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "numpy.pxd":803
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "numpy.pxd":804
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_10 = 0;
      (__pyx_v_offset[__pyx_t_10]) = ((__pyx_v_offset[__pyx_t_10]) + 1);
    }

    /* "numpy.pxd":806
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_10 = 0;
    (__pyx_v_offset[__pyx_t_10]) = ((__pyx_v_offset[__pyx_t_10]) + __pyx_v_child->elsize);

    /* "numpy.pxd":808
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = (!PyDataType_HASFIELDS(__pyx_v_child));
    if (__pyx_t_6) {

      /* "numpy.pxd":809
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_3 = PyInt_FromLong(__pyx_v_child->type_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_v_t);
      __pyx_v_t = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "numpy.pxd":810
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = ((__pyx_v_end - __pyx_v_f) < 5);
      if (__pyx_t_6) {

        /* "numpy.pxd":811
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_3 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_Raise(__pyx_t_3, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L10;
      }
      __pyx_L10:;

      /* "numpy.pxd":814
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L11;
      }

      /* "numpy.pxd":815
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L11;
      }

      /* "numpy.pxd":816
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L11;
      }

      /* "numpy.pxd":817
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L11;
      }

      /* "numpy.pxd":818
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L11;
      }

      /* "numpy.pxd":819
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L11;
      }

      /* "numpy.pxd":820
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L11;
      }

      /* "numpy.pxd":821
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L11;
      }

      /* "numpy.pxd":822
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L11;
      }

      /* "numpy.pxd":823
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L11;
      }

      /* "numpy.pxd":824
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L11;
      }

      /* "numpy.pxd":825
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_5 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L11;
      }

      /* "numpy.pxd":826
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L11;
      }

      /* "numpy.pxd":827
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "numpy.pxd":828
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "numpy.pxd":829
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "numpy.pxd":830
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_3 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "numpy.pxd":832
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_21), __pyx_v_t); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_3));
        PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
        __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L11:;

      /* "numpy.pxd":833
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L9;
    }
    /*else*/ {

      /* "numpy.pxd":837
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_11 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_11;
    }
    __pyx_L9:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "numpy.pxd":838
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_child);
  __Pyx_DECREF(__pyx_v_fields);
  __Pyx_DECREF(__pyx_v_childname);
  __Pyx_DECREF(__pyx_v_new_offset);
  __Pyx_DECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":953
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_array_base");

  /* "numpy.pxd":955
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  if (__pyx_t_1) {

    /* "numpy.pxd":956
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "numpy.pxd":958
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "numpy.pxd":959
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "numpy.pxd":960
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "numpy.pxd":961
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  __Pyx_RefNannyFinishContext();
}

/* "numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base");

  /* "numpy.pxd":964
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = (__pyx_v_arr->base == NULL);
  if (__pyx_t_1) {

    /* "numpy.pxd":965
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "numpy.pxd":967
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_6bright_FCComp(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bright_6FCComp___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_FCComp(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_6FCComp_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bright_6FCComp_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_4name___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_6FCComp_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_6FCComp_12params2track___get__(o);
}

static int __pyx_setprop_6bright_6FCComp_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_6FCComp_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_FCComp[] = {
  {__Pyx_NAMESTR("writeIsoPass"), (PyCFunction)__pyx_pf_6bright_6FCComp_2writeIsoPass, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_2writeIsoPass)},
  {__Pyx_NAMESTR("writeParamPass"), (PyCFunction)__pyx_pf_6bright_6FCComp_3writeParamPass, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_3writeParamPass)},
  {__Pyx_NAMESTR("writeText"), (PyCFunction)__pyx_pf_6bright_6FCComp_4writeText, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_4writeText)},
  {__Pyx_NAMESTR("writeHDF5"), (PyCFunction)__pyx_pf_6bright_6FCComp_5writeHDF5, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_5writeHDF5)},
  {__Pyx_NAMESTR("writeout"), (PyCFunction)__pyx_pf_6bright_6FCComp_6writeout, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_6writeout)},
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_6FCComp_7setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_7setParams)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_6FCComp_8doCalc, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_6FCComp_8doCalc)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_FCComp[] = {
  {(char *)"name", __pyx_getprop_6bright_6FCComp_name, __pyx_setprop_6bright_6FCComp_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_6FCComp_natural_name, __pyx_setprop_6bright_6FCComp_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_6FCComp_IsosIn, __pyx_setprop_6bright_6FCComp_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_6FCComp_IsosOut, __pyx_setprop_6bright_6FCComp_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_6FCComp_ParamsIn, __pyx_setprop_6bright_6FCComp_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_6FCComp_ParamsOut, __pyx_setprop_6bright_6FCComp_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_6FCComp_PassNum, __pyx_setprop_6bright_6FCComp_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_6FCComp_params2track, __pyx_setprop_6bright_6FCComp_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FCComp = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FCComp = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FCComp = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FCComp = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_FCComp = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.FCComp"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_FCComp), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_FCComp, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FCComp, /*tp_as_number*/
  &__pyx_tp_as_sequence_FCComp, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FCComp, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FCComp, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Base Fuel Cycle Component Class.\n\n    Args:\n        * paramlist (sequence of str): A set of parameter names (str) that the component will track.\n        * name (str): The name of the fuel cycle component instance.\n\n    Note that this automatically calls the protected :meth:`initialize` C function.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_FCComp, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_FCComp, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_FCComp, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_EnrichmentParameters(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bright_20EnrichmentParameters___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_EnrichmentParameters(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_20EnrichmentParameters_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_alpha_0(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_7alpha_0___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_alpha_0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_7alpha_0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_Mstar_0(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_7Mstar_0___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_Mstar_0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_7Mstar_0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_1j___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_1j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_k(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_1k___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_k(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_1k_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_N0(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_2N0___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_N0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_2N0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_M0(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_2M0___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_M0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_2M0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_xP_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_4xP_j___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_xP_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_4xP_j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_20EnrichmentParameters_xW_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_20EnrichmentParameters_4xW_j___get__(o);
}

static int __pyx_setprop_6bright_20EnrichmentParameters_xW_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_20EnrichmentParameters_4xW_j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_EnrichmentParameters[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_EnrichmentParameters[] = {
  {(char *)"alpha_0", __pyx_getprop_6bright_20EnrichmentParameters_alpha_0, __pyx_setprop_6bright_20EnrichmentParameters_alpha_0, 0, 0},
  {(char *)"Mstar_0", __pyx_getprop_6bright_20EnrichmentParameters_Mstar_0, __pyx_setprop_6bright_20EnrichmentParameters_Mstar_0, 0, 0},
  {(char *)"j", __pyx_getprop_6bright_20EnrichmentParameters_j, __pyx_setprop_6bright_20EnrichmentParameters_j, 0, 0},
  {(char *)"k", __pyx_getprop_6bright_20EnrichmentParameters_k, __pyx_setprop_6bright_20EnrichmentParameters_k, 0, 0},
  {(char *)"N0", __pyx_getprop_6bright_20EnrichmentParameters_N0, __pyx_setprop_6bright_20EnrichmentParameters_N0, 0, 0},
  {(char *)"M0", __pyx_getprop_6bright_20EnrichmentParameters_M0, __pyx_setprop_6bright_20EnrichmentParameters_M0, 0, 0},
  {(char *)"xP_j", __pyx_getprop_6bright_20EnrichmentParameters_xP_j, __pyx_setprop_6bright_20EnrichmentParameters_xP_j, 0, 0},
  {(char *)"xW_j", __pyx_getprop_6bright_20EnrichmentParameters_xW_j, __pyx_setprop_6bright_20EnrichmentParameters_xW_j, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_EnrichmentParameters = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_EnrichmentParameters = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_EnrichmentParameters = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_EnrichmentParameters = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_EnrichmentParameters = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.EnrichmentParameters"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_EnrichmentParameters), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_EnrichmentParameters, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_EnrichmentParameters, /*tp_as_number*/
  &__pyx_tp_as_sequence_EnrichmentParameters, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_EnrichmentParameters, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_EnrichmentParameters, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("This class is a collection of values that mirror the attributes in \n    Enrichment that are required for the cascade model to run.\n    In C-code this a simple `struct.  Like ReactorParameters, this class \n    takes no arguments on initialization.  An empty ErichmentParameters\n    instance has all values (weakly) set to zero.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_EnrichmentParameters, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_EnrichmentParameters, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_EnrichmentParameters, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_Enrichment(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_FCComp(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_10Enrichment___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_Enrichment(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_10Enrichment_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_FCComp(o);
}

static PyObject *__pyx_getprop_6bright_10Enrichment_alpha_0(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_7alpha_0___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_alpha_0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_7alpha_0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_Mstar_0(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_7Mstar_0___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_Mstar_0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_7Mstar_0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_Mstar(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_5Mstar___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_Mstar(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_5Mstar_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_IsosTail(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_8IsosTail___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_IsosTail(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_8IsosTail_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_1j___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_1j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_k(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_1k___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_k(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_1k_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_xP_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_4xP_j___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_xP_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_4xP_j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_xW_j(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_4xW_j___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_xW_j(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_4xW_j_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_N(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_1N___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_N(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_1N_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_M(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_1M___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_M(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_1M_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_N0(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_2N0___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_N0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_2N0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_M0(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_2M0___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_M0(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_2M0_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_TotalPerFeed(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_12TotalPerFeed___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_TotalPerFeed(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_12TotalPerFeed_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_SWUperFeed(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_10SWUperFeed___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_SWUperFeed(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_10SWUperFeed_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_SWUperProduct(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_13SWUperProduct___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_SWUperProduct(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_13SWUperProduct_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_4name___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_10Enrichment_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_10Enrichment_12params2track___get__(o);
}

static int __pyx_setprop_6bright_10Enrichment_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_10Enrichment_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_Enrichment[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_10Enrichment_2initialize, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_10Enrichment_2initialize)},
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_10Enrichment_3setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_10Enrichment_3setParams)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_10Enrichment_4doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_10Enrichment_4doCalc)},
  {__Pyx_NAMESTR("PoverF"), (PyCFunction)__pyx_pf_6bright_10Enrichment_5PoverF, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_10Enrichment_5PoverF)},
  {__Pyx_NAMESTR("WoverF"), (PyCFunction)__pyx_pf_6bright_10Enrichment_6WoverF, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_10Enrichment_6WoverF)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_Enrichment[] = {
  {(char *)"alpha_0", __pyx_getprop_6bright_10Enrichment_alpha_0, __pyx_setprop_6bright_10Enrichment_alpha_0, 0, 0},
  {(char *)"Mstar_0", __pyx_getprop_6bright_10Enrichment_Mstar_0, __pyx_setprop_6bright_10Enrichment_Mstar_0, 0, 0},
  {(char *)"Mstar", __pyx_getprop_6bright_10Enrichment_Mstar, __pyx_setprop_6bright_10Enrichment_Mstar, 0, 0},
  {(char *)"IsosTail", __pyx_getprop_6bright_10Enrichment_IsosTail, __pyx_setprop_6bright_10Enrichment_IsosTail, 0, 0},
  {(char *)"j", __pyx_getprop_6bright_10Enrichment_j, __pyx_setprop_6bright_10Enrichment_j, 0, 0},
  {(char *)"k", __pyx_getprop_6bright_10Enrichment_k, __pyx_setprop_6bright_10Enrichment_k, 0, 0},
  {(char *)"xP_j", __pyx_getprop_6bright_10Enrichment_xP_j, __pyx_setprop_6bright_10Enrichment_xP_j, 0, 0},
  {(char *)"xW_j", __pyx_getprop_6bright_10Enrichment_xW_j, __pyx_setprop_6bright_10Enrichment_xW_j, 0, 0},
  {(char *)"N", __pyx_getprop_6bright_10Enrichment_N, __pyx_setprop_6bright_10Enrichment_N, 0, 0},
  {(char *)"M", __pyx_getprop_6bright_10Enrichment_M, __pyx_setprop_6bright_10Enrichment_M, 0, 0},
  {(char *)"N0", __pyx_getprop_6bright_10Enrichment_N0, __pyx_setprop_6bright_10Enrichment_N0, 0, 0},
  {(char *)"M0", __pyx_getprop_6bright_10Enrichment_M0, __pyx_setprop_6bright_10Enrichment_M0, 0, 0},
  {(char *)"TotalPerFeed", __pyx_getprop_6bright_10Enrichment_TotalPerFeed, __pyx_setprop_6bright_10Enrichment_TotalPerFeed, 0, 0},
  {(char *)"SWUperFeed", __pyx_getprop_6bright_10Enrichment_SWUperFeed, __pyx_setprop_6bright_10Enrichment_SWUperFeed, 0, 0},
  {(char *)"SWUperProduct", __pyx_getprop_6bright_10Enrichment_SWUperProduct, __pyx_setprop_6bright_10Enrichment_SWUperProduct, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_10Enrichment_name, __pyx_setprop_6bright_10Enrichment_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_10Enrichment_natural_name, __pyx_setprop_6bright_10Enrichment_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_10Enrichment_IsosIn, __pyx_setprop_6bright_10Enrichment_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_10Enrichment_IsosOut, __pyx_setprop_6bright_10Enrichment_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_10Enrichment_ParamsIn, __pyx_setprop_6bright_10Enrichment_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_10Enrichment_ParamsOut, __pyx_setprop_6bright_10Enrichment_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_10Enrichment_PassNum, __pyx_setprop_6bright_10Enrichment_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_10Enrichment_params2track, __pyx_setprop_6bright_10Enrichment_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Enrichment = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Enrichment = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Enrichment = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Enrichment = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_Enrichment = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.Enrichment"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_Enrichment), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_Enrichment, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Enrichment, /*tp_as_number*/
  &__pyx_tp_as_sequence_Enrichment, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Enrichment, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Enrichment, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Enrichment Fuel Cycle Component Class.  Daughter of BriPy.FCComp class.\n\n    Args:\n        * enrich_params (EnrichmentParameters): This specifies how the enrichment \n          cascade should be set up.  It is a EnrichmentParameters\n          helper object.  If enrich_params is not specified, then the cascade \n          is initialized with UraniumEnrichmentDefaults.\n        * name (str): The name of the enrichment fuel cycle component instance.\n\n    Note that this automatically calls the public initialize() C function.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_Enrichment, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_Enrichment, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_Enrichment, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_Reprocess(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_FCComp(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_9Reprocess_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_Reprocess(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_9Reprocess_2__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_FCComp(o);
}

static PyObject *__pyx_getprop_6bright_9Reprocess_sepeff(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_6sepeff___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_sepeff(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_6sepeff_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_4name___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reprocess_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reprocess_12params2track___get__(o);
}

static int __pyx_setprop_6bright_9Reprocess_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reprocess_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_Reprocess[] = {
  {__Pyx_NAMESTR("_cpp_sepeff"), (PyCFunction)__pyx_pf_6bright_9Reprocess__cpp_sepeff, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_9Reprocess_3initialize, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_9Reprocess_3initialize)},
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_9Reprocess_4setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reprocess_4setParams)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_9Reprocess_5doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reprocess_5doCalc)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_Reprocess[] = {
  {(char *)"sepeff", __pyx_getprop_6bright_9Reprocess_sepeff, __pyx_setprop_6bright_9Reprocess_sepeff, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_9Reprocess_name, __pyx_setprop_6bright_9Reprocess_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_9Reprocess_natural_name, __pyx_setprop_6bright_9Reprocess_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_9Reprocess_IsosIn, __pyx_setprop_6bright_9Reprocess_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_9Reprocess_IsosOut, __pyx_setprop_6bright_9Reprocess_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_9Reprocess_ParamsIn, __pyx_setprop_6bright_9Reprocess_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_9Reprocess_ParamsOut, __pyx_setprop_6bright_9Reprocess_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_9Reprocess_PassNum, __pyx_setprop_6bright_9Reprocess_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_9Reprocess_params2track, __pyx_setprop_6bright_9Reprocess_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Reprocess = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Reprocess = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Reprocess = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Reprocess = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_Reprocess = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.Reprocess"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_Reprocess), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_Reprocess, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Reprocess, /*tp_as_number*/
  &__pyx_tp_as_sequence_Reprocess, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Reprocess, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Reprocess, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Reprocess Fuel Cycle Component Class.  Daughter of BriPy.FCComp class.\n\n    Args:\n        * sepeff (dict): A dictionary containing the separation efficiencies (float) to initialize\n          the instance with.  The keys of this dictionary must be strings.  However, the strings may \n          represent either elements or isotopes or both::\n\n                #ssed = string dictionary of separation efficiencies.  \n                #Of form {zz: 0.99}, eg \n                ssed = {\"92\": 0.999, \"94\": 0.99} \n                #of form {LL: 0.99}, eg \n                ssed = {\"U\": 0.999, \"PU\": 0.99} \n                #or of form {mixed: 0.99}, eg \n                ssed = {\"U235\": 0.9, \"922350\": 0.999, \"94239\": 0.99}\n\n        * name (str): The name of the reprocessing fuel cycle component instance.\n\n    Note that this automatically calls the public initialize C function.\n\n    .. note::\n       The C++ version of the code also allows you to initialize from an int-keyed dictionary (map).\n       However, due to a from_python C++ signature ambiguity, you cannot do use this directly in Python.\n       Separation efficiencies must therefore be automatically initialized through string dictionaries.\n       If you need to initialize via an int dictionary in python, you can always init with an empty\n       string dictionary and then manually initialize with an int one.  For example::\n\n            R = Reprocess({}, name)\n            R.initialize( {92: 0.99, 942390: 0.9} )\n\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_Reprocess, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_Reprocess, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_Reprocess, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_Storage(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_FCComp(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_7Storage___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_Storage(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_7Storage_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_FCComp(o);
}

static PyObject *__pyx_getprop_6bright_7Storage_decay_time(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_10decay_time___get__(o);
}

static int __pyx_setprop_6bright_7Storage_decay_time(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_10decay_time_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_4name___get__(o);
}

static int __pyx_setprop_6bright_7Storage_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_7Storage_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_7Storage_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_7Storage_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_7Storage_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_7Storage_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_7Storage_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_7Storage_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_7Storage_12params2track___get__(o);
}

static int __pyx_setprop_6bright_7Storage_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_7Storage_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_Storage[] = {
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_7Storage_2setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_7Storage_2setParams)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_7Storage_3doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_7Storage_3doCalc)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_Storage[] = {
  {(char *)"decay_time", __pyx_getprop_6bright_7Storage_decay_time, __pyx_setprop_6bright_7Storage_decay_time, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_7Storage_name, __pyx_setprop_6bright_7Storage_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_7Storage_natural_name, __pyx_setprop_6bright_7Storage_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_7Storage_IsosIn, __pyx_setprop_6bright_7Storage_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_7Storage_IsosOut, __pyx_setprop_6bright_7Storage_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_7Storage_ParamsIn, __pyx_setprop_6bright_7Storage_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_7Storage_ParamsOut, __pyx_setprop_6bright_7Storage_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_7Storage_PassNum, __pyx_setprop_6bright_7Storage_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_7Storage_params2track, __pyx_setprop_6bright_7Storage_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Storage = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Storage = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Storage = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Storage = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_Storage = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.Storage"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_Storage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_Storage, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Storage, /*tp_as_number*/
  &__pyx_tp_as_sequence_Storage, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Storage, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Storage, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Storage Fuel Cycle Component Class.  Daughter of BriPy.FCComp class.\n\n    Args:\n        * name (str): The name of the storage fuel cycle component instance.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_Storage, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_Storage, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_Storage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_FluencePoint(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bright_12FluencePoint___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_FluencePoint(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_12FluencePoint_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bright_12FluencePoint_f(PyObject *o, void *x) {
  return __pyx_pf_6bright_12FluencePoint_1f___get__(o);
}

static int __pyx_setprop_6bright_12FluencePoint_f(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12FluencePoint_1f_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12FluencePoint_F(PyObject *o, void *x) {
  return __pyx_pf_6bright_12FluencePoint_1F___get__(o);
}

static int __pyx_setprop_6bright_12FluencePoint_F(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12FluencePoint_1F_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12FluencePoint_m(PyObject *o, void *x) {
  return __pyx_pf_6bright_12FluencePoint_1m___get__(o);
}

static int __pyx_setprop_6bright_12FluencePoint_m(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12FluencePoint_1m_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_FluencePoint[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_FluencePoint[] = {
  {(char *)"f", __pyx_getprop_6bright_12FluencePoint_f, __pyx_setprop_6bright_12FluencePoint_f, 0, 0},
  {(char *)"F", __pyx_getprop_6bright_12FluencePoint_F, __pyx_setprop_6bright_12FluencePoint_F, 0, 0},
  {(char *)"m", __pyx_getprop_6bright_12FluencePoint_m, __pyx_setprop_6bright_12FluencePoint_m, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FluencePoint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FluencePoint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FluencePoint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FluencePoint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_FluencePoint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.FluencePoint"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_FluencePoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_FluencePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FluencePoint, /*tp_as_number*/
  &__pyx_tp_as_sequence_FluencePoint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FluencePoint, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FluencePoint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("This class holds three simple data points that represent a fluence point.\n\n    Attributes:\n        * f (int): Index of Reactor1G.F immediately lower than the value of F (int).\n        * F (float): Fluence value itself (float). In units of [n/kb] or [neutrons/kilobarn].\n        * m (float): The slope dBU/dF between points f and f+1 (float). \n          Has the odd units of [MWd kb / kgIHM n].\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_FluencePoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_FluencePoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_FluencePoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_ReactorParameters(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bright_17ReactorParameters___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_ReactorParameters(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_17ReactorParameters_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_batches(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_7batches___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_batches(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_7batches_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_flux(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_4flux___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_flux(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_4flux_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_FuelForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_8FuelForm___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_FuelForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_8FuelForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_CoolantForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_11CoolantForm___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_CoolantForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_11CoolantForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_FuelDensity(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_11FuelDensity___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_FuelDensity(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_11FuelDensity_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_CoolantDensity(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_14CoolantDensity___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_CoolantDensity(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_14CoolantDensity_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_pnl(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_3pnl___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_pnl(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_3pnl_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_BUt(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_3BUt___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_BUt(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_3BUt_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_useDisadvantage(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_15useDisadvantage___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_useDisadvantage(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_15useDisadvantage_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_LatticeType(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_11LatticeType___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_LatticeType(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_11LatticeType_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_HydrogenRescale(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_15HydrogenRescale___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_HydrogenRescale(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_15HydrogenRescale_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_Radius(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_6Radius___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_Radius(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_6Radius_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_Length(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_6Length___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_Length(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_6Length_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_open_slots(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_10open_slots___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_open_slots(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_10open_slots_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_17ReactorParameters_total_slots(PyObject *o, void *x) {
  return __pyx_pf_6bright_17ReactorParameters_11total_slots___get__(o);
}

static int __pyx_setprop_6bright_17ReactorParameters_total_slots(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_17ReactorParameters_11total_slots_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_ReactorParameters[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_ReactorParameters[] = {
  {(char *)"batches", __pyx_getprop_6bright_17ReactorParameters_batches, __pyx_setprop_6bright_17ReactorParameters_batches, 0, 0},
  {(char *)"flux", __pyx_getprop_6bright_17ReactorParameters_flux, __pyx_setprop_6bright_17ReactorParameters_flux, 0, 0},
  {(char *)"FuelForm", __pyx_getprop_6bright_17ReactorParameters_FuelForm, __pyx_setprop_6bright_17ReactorParameters_FuelForm, 0, 0},
  {(char *)"CoolantForm", __pyx_getprop_6bright_17ReactorParameters_CoolantForm, __pyx_setprop_6bright_17ReactorParameters_CoolantForm, 0, 0},
  {(char *)"FuelDensity", __pyx_getprop_6bright_17ReactorParameters_FuelDensity, __pyx_setprop_6bright_17ReactorParameters_FuelDensity, 0, 0},
  {(char *)"CoolantDensity", __pyx_getprop_6bright_17ReactorParameters_CoolantDensity, __pyx_setprop_6bright_17ReactorParameters_CoolantDensity, 0, 0},
  {(char *)"pnl", __pyx_getprop_6bright_17ReactorParameters_pnl, __pyx_setprop_6bright_17ReactorParameters_pnl, 0, 0},
  {(char *)"BUt", __pyx_getprop_6bright_17ReactorParameters_BUt, __pyx_setprop_6bright_17ReactorParameters_BUt, 0, 0},
  {(char *)"useDisadvantage", __pyx_getprop_6bright_17ReactorParameters_useDisadvantage, __pyx_setprop_6bright_17ReactorParameters_useDisadvantage, 0, 0},
  {(char *)"LatticeType", __pyx_getprop_6bright_17ReactorParameters_LatticeType, __pyx_setprop_6bright_17ReactorParameters_LatticeType, 0, 0},
  {(char *)"HydrogenRescale", __pyx_getprop_6bright_17ReactorParameters_HydrogenRescale, __pyx_setprop_6bright_17ReactorParameters_HydrogenRescale, 0, 0},
  {(char *)"Radius", __pyx_getprop_6bright_17ReactorParameters_Radius, __pyx_setprop_6bright_17ReactorParameters_Radius, 0, 0},
  {(char *)"Length", __pyx_getprop_6bright_17ReactorParameters_Length, __pyx_setprop_6bright_17ReactorParameters_Length, 0, 0},
  {(char *)"open_slots", __pyx_getprop_6bright_17ReactorParameters_open_slots, __pyx_setprop_6bright_17ReactorParameters_open_slots, 0, 0},
  {(char *)"total_slots", __pyx_getprop_6bright_17ReactorParameters_total_slots, __pyx_setprop_6bright_17ReactorParameters_total_slots, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ReactorParameters = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ReactorParameters = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ReactorParameters = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ReactorParameters = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_ReactorParameters = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.ReactorParameters"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_ReactorParameters), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_ReactorParameters, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ReactorParameters, /*tp_as_number*/
  &__pyx_tp_as_sequence_ReactorParameters, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ReactorParameters, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ReactorParameters, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("This data structure is a set of physical reactor parameters. It may be used to instantiate new reactor objects **OR**\n    to define default settings for a reactor type.  The data stored in this class is copied over to \n    a reactor instance in the :meth:`Reactor1G.initialize` method.  However, the attributes of this objects \n    take on more natural names than their :class:`Reactor1G` analogies.  This is because it is this \n    object that Bright users will more often be interacting with. \n\n    Attributes:\n        * batches (int): This is the total number of batches in the fuel management scheme. \n          This is typically indexed by b.\n        * flux (float): The nominal flux value that the library for this reactor \n          type was generated with.  Used to correctly weight batch-specific fluxes.\n        * FuelForm (dict): This is the chemical form of fuel as dictionary.  Keys are \n          strings that represent isotopes (mixed form) while values represent the \n          corresponding mass weights.  The heavy metal concentration by the key \"IHM\".  \n          This will automatically fill in the nuclides in IsosIn for the \"IHM\" weight.  \n          For example, LWRs typically use a UOX fuel form::\n\n            ReactorParameters.FuelForm = {\"IHM\": 1.0, \"O16\": 2.0}\n\n        * CoolantForm (dict): This is the chemical form of coolant as dictionary.  \n          This uses the same notation as FuelForm except that \"IHM\" is no longer \n          a valid key.  The term 'coolant' is used in preference over the term \n          'moderator' because not all reactors moderate neutrons.  For example, \n          LWRs often cool the reactor core with borated water::\n\n            ReactorParamters.CoolantForm = {}\n\n            ReactorParamters.CoolantForm[\"H1\"]  = 2.0\n            ReactorParamters.CoolantForm[\"O16\"] = 1.0\n            ReactorParamters.CoolantForm[\"B10\"] = 0.199 * 550 * 10.0**-6\n            ReactorParamters.CoolantForm[\"B11\"] = 0.801 * 550 * 10.0**-6\n\n        * FuelDensity (float): The fuel region density.  A float in units of [g/cm^3].\n        * CoolantDensity (float): The coolant region density.  A float in units of [g/cm^3].\n        * pnl (float): The reactor's non-leakage probability.  This is often \n          used as a calibration parameter.\n        * BUt (float): The reactor's target discharge burnup.  This is given \n          in units of [MWd/kgIHM].  Often the actual discharge burnup BUd does not \n          quite hit this value, but comes acceptably close.\n        * useDisadvantage (bool): Determines whether the thermal disadvantage \n          factor is employed or not.  LWRs typically set this as True while FRs \n          have a False value.\n        * LatticeType (str): A flag that represents what lattice type the fuel \n          assemblies are arranged in.  Currently accepted values are \"Planar\", \n          \"Spherical\", and \"Cylindrical\".\n        * HydrogenRescale (bool): This determines whether the reactor should \n          rescale the Hydrogen-1 destruction rate in the coolant as a\n          function of fluence.  The scaling factor is calculated via the \n          following equation\n\n            .. math:: f(F) = 1.36927 - 0.01119 \\cdot BU(F)\n\n          This is typically not done for fast reactors but is a useful correction \n          for LWRs.\n        * Radius (float): The radius of the fuel region.  In units of [cm].\n        * Length (float): The pitch or length of the unit fuel pin cell.  In units of [cm].\n        * open_slots (float): The number of slots in a fuel assembly that are open.  \n          Thus this is the number of slots that do not contain a fuel pin and are instead \n          filled in by coolant. \n        * total_slots (float): The total number of fuel pin slots in a fuel assembly.  \n          For a 17x17 bundle, S_T is 289.0. \n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_ReactorParameters, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_ReactorParameters, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_ReactorParameters, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_Reactor1G(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_FCComp(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_9Reactor1G___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_Reactor1G(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_9Reactor1G_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_FCComp(o);
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_B(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_1B___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_B(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_1B_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_phi(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3phi___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_phi(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3phi_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_FuelChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_16FuelChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_FuelChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_16FuelChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_CoolantChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_CoolantChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_19CoolantChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_rhoF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4rhoF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_rhoF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4rhoF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_rhoC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4rhoC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_rhoC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4rhoC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_P_NL(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4P_NL___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_P_NL(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4P_NL_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_TargetBU(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_8TargetBU___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_TargetBU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_8TargetBU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_useZeta(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7useZeta___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_useZeta(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7useZeta_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_Lattice(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7Lattice___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_Lattice(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7Lattice_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_H_XS_Rescale(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_12H_XS_Rescale___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_H_XS_Rescale(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_12H_XS_Rescale_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_r(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_1r___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_r(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_1r_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_l(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_1l___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_l(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_1l_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_S_O(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3S_O___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_S_O(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3S_O_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_S_T(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3S_T___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_S_T(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3S_T_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_VF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_2VF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_VF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_2VF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_VC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_2VC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_VC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_2VC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_libfile(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7libfile___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_libfile(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7libfile_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_F(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_1F___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_F(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_1F_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_BUi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6BUi_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_BUi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6BUi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_pi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5pi_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_pi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5pi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_di_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5di_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_di_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5di_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_Tij_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6Tij_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_Tij_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6Tij_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_A_IHM(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5A_IHM___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_A_IHM(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5A_IHM_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_MWF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3MWF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_MWF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3MWF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_MWC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3MWC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_MWC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3MWC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_niF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3niF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_niF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3niF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_niC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3niC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_niC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3niC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_miF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3miF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_miF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3miF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_miC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3miC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_miC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3miC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_NiF(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3NiF___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_NiF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3NiF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_NiC(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3NiC___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_NiC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3NiC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_dF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5dF_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_dF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5dF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_dC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5dC_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_dC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5dC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_BU_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5BU_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_BU_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5BU_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_P_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4P_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_P_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4P_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_D_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4D_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_D_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4D_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_k_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4k_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_k_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4k_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_Mj_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5Mj_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_Mj_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5Mj_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_zeta_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7zeta_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_zeta_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7zeta_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_2fd___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_2fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_Fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_2Fd___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_Fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_2Fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_BUd(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3BUd___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_BUd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3BUd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_k(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_1k___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_k(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_1k_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_InU(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_3InU___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_InU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_3InU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_InTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5InTRU___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_InTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5InTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_InLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5InLAN___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_InLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5InLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_InACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5InACT___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_InACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5InACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_OutU(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4OutU___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_OutU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4OutU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_OutTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6OutTRU___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_OutTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6OutTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_OutLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6OutLAN___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_OutLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6OutLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_OutACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6OutACT___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_OutACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6OutACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_deltaR(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6deltaR___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_deltaR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6deltaR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_TruCR(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_5TruCR___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_TruCR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_5TruCR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_SigmaFa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_10SigmaFa_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_SigmaFa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_10SigmaFa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_SigmaFtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_11SigmaFtr_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_SigmaFtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_11SigmaFtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_kappaF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_9kappaF_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_kappaF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_9kappaF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_SigmaCa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_10SigmaCa_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_SigmaCa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_10SigmaCa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_SigmaCtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_11SigmaCtr_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_SigmaCtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_11SigmaCtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_kappaC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_9kappaC_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_kappaC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_9kappaC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_LatticeE_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_11LatticeE_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_LatticeE_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_11LatticeE_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_LatticeF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_11LatticeF_F____get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_LatticeF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_11LatticeF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_4name___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_9Reactor1G_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_9Reactor1G_12params2track___get__(o);
}

static int __pyx_setprop_6bright_9Reactor1G_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_9Reactor1G_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_Reactor1G[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_2initialize, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_2initialize)},
  {__Pyx_NAMESTR("loadLib"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_3loadLib, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_3loadLib)},
  {__Pyx_NAMESTR("foldMassWeights"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_4foldMassWeights, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_4foldMassWeights)},
  {__Pyx_NAMESTR("mkMj_F_"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_5mkMj_F_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_5mkMj_F_)},
  {__Pyx_NAMESTR("mkMj_Fd_"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_6mkMj_Fd_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_6mkMj_Fd_)},
  {__Pyx_NAMESTR("calcOutIso"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_7calcOutIso, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_7calcOutIso)},
  {__Pyx_NAMESTR("calcSubStreams"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_8calcSubStreams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_8calcSubStreams)},
  {__Pyx_NAMESTR("calcTruCR"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_9calcTruCR, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_9calcTruCR)},
  {__Pyx_NAMESTR("calc_deltaR"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_10calc_deltaR, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_10calc_deltaR)},
  {__Pyx_NAMESTR("FluenceAtBU"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_11FluenceAtBU, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_11FluenceAtBU)},
  {__Pyx_NAMESTR("batchAve"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_12batchAve, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_12batchAve)},
  {__Pyx_NAMESTR("batchAveK"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_13batchAveK, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_13batchAveK)},
  {__Pyx_NAMESTR("BUd_BisectionMethod"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_14BUd_BisectionMethod, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_14BUd_BisectionMethod)},
  {__Pyx_NAMESTR("Run_PNL"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_15Run_PNL, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_15Run_PNL)},
  {__Pyx_NAMESTR("Calibrate_PNL_2_BUd"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_16Calibrate_PNL_2_BUd, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_16Calibrate_PNL_2_BUd)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_17doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_17doCalc)},
  {__Pyx_NAMESTR("LatticeEPlanar"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_18LatticeEPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_18LatticeEPlanar)},
  {__Pyx_NAMESTR("LatticeFPlanar"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_19LatticeFPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_19LatticeFPlanar)},
  {__Pyx_NAMESTR("LatticeESpherical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_20LatticeESpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_20LatticeESpherical)},
  {__Pyx_NAMESTR("LatticeFSpherical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_21LatticeFSpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_21LatticeFSpherical)},
  {__Pyx_NAMESTR("LatticeECylindrical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_22LatticeECylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_22LatticeECylindrical)},
  {__Pyx_NAMESTR("LatticeFCylindrical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_23LatticeFCylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_23LatticeFCylindrical)},
  {__Pyx_NAMESTR("calcZeta"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_24calcZeta, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_24calcZeta)},
  {__Pyx_NAMESTR("calcZetaPlanar"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_25calcZetaPlanar, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_25calcZetaPlanar)},
  {__Pyx_NAMESTR("calcZetaSpherical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_26calcZetaSpherical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_26calcZetaSpherical)},
  {__Pyx_NAMESTR("calcZetaCylindrical"), (PyCFunction)__pyx_pf_6bright_9Reactor1G_27calcZetaCylindrical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_9Reactor1G_27calcZetaCylindrical)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_Reactor1G[] = {
  {(char *)"B", __pyx_getprop_6bright_9Reactor1G_B, __pyx_setprop_6bright_9Reactor1G_B, 0, 0},
  {(char *)"phi", __pyx_getprop_6bright_9Reactor1G_phi, __pyx_setprop_6bright_9Reactor1G_phi, 0, 0},
  {(char *)"FuelChemicalForm", __pyx_getprop_6bright_9Reactor1G_FuelChemicalForm, __pyx_setprop_6bright_9Reactor1G_FuelChemicalForm, 0, 0},
  {(char *)"CoolantChemicalForm", __pyx_getprop_6bright_9Reactor1G_CoolantChemicalForm, __pyx_setprop_6bright_9Reactor1G_CoolantChemicalForm, 0, 0},
  {(char *)"rhoF", __pyx_getprop_6bright_9Reactor1G_rhoF, __pyx_setprop_6bright_9Reactor1G_rhoF, 0, 0},
  {(char *)"rhoC", __pyx_getprop_6bright_9Reactor1G_rhoC, __pyx_setprop_6bright_9Reactor1G_rhoC, 0, 0},
  {(char *)"P_NL", __pyx_getprop_6bright_9Reactor1G_P_NL, __pyx_setprop_6bright_9Reactor1G_P_NL, 0, 0},
  {(char *)"TargetBU", __pyx_getprop_6bright_9Reactor1G_TargetBU, __pyx_setprop_6bright_9Reactor1G_TargetBU, 0, 0},
  {(char *)"useZeta", __pyx_getprop_6bright_9Reactor1G_useZeta, __pyx_setprop_6bright_9Reactor1G_useZeta, 0, 0},
  {(char *)"Lattice", __pyx_getprop_6bright_9Reactor1G_Lattice, __pyx_setprop_6bright_9Reactor1G_Lattice, 0, 0},
  {(char *)"H_XS_Rescale", __pyx_getprop_6bright_9Reactor1G_H_XS_Rescale, __pyx_setprop_6bright_9Reactor1G_H_XS_Rescale, 0, 0},
  {(char *)"r", __pyx_getprop_6bright_9Reactor1G_r, __pyx_setprop_6bright_9Reactor1G_r, 0, 0},
  {(char *)"l", __pyx_getprop_6bright_9Reactor1G_l, __pyx_setprop_6bright_9Reactor1G_l, 0, 0},
  {(char *)"S_O", __pyx_getprop_6bright_9Reactor1G_S_O, __pyx_setprop_6bright_9Reactor1G_S_O, 0, 0},
  {(char *)"S_T", __pyx_getprop_6bright_9Reactor1G_S_T, __pyx_setprop_6bright_9Reactor1G_S_T, 0, 0},
  {(char *)"VF", __pyx_getprop_6bright_9Reactor1G_VF, __pyx_setprop_6bright_9Reactor1G_VF, 0, 0},
  {(char *)"VC", __pyx_getprop_6bright_9Reactor1G_VC, __pyx_setprop_6bright_9Reactor1G_VC, 0, 0},
  {(char *)"libfile", __pyx_getprop_6bright_9Reactor1G_libfile, __pyx_setprop_6bright_9Reactor1G_libfile, 0, 0},
  {(char *)"F", __pyx_getprop_6bright_9Reactor1G_F, __pyx_setprop_6bright_9Reactor1G_F, 0, 0},
  {(char *)"BUi_F_", __pyx_getprop_6bright_9Reactor1G_BUi_F_, __pyx_setprop_6bright_9Reactor1G_BUi_F_, 0, 0},
  {(char *)"pi_F_", __pyx_getprop_6bright_9Reactor1G_pi_F_, __pyx_setprop_6bright_9Reactor1G_pi_F_, 0, 0},
  {(char *)"di_F_", __pyx_getprop_6bright_9Reactor1G_di_F_, __pyx_setprop_6bright_9Reactor1G_di_F_, 0, 0},
  {(char *)"Tij_F_", __pyx_getprop_6bright_9Reactor1G_Tij_F_, __pyx_setprop_6bright_9Reactor1G_Tij_F_, 0, 0},
  {(char *)"A_IHM", __pyx_getprop_6bright_9Reactor1G_A_IHM, __pyx_setprop_6bright_9Reactor1G_A_IHM, 0, 0},
  {(char *)"MWF", __pyx_getprop_6bright_9Reactor1G_MWF, __pyx_setprop_6bright_9Reactor1G_MWF, 0, 0},
  {(char *)"MWC", __pyx_getprop_6bright_9Reactor1G_MWC, __pyx_setprop_6bright_9Reactor1G_MWC, 0, 0},
  {(char *)"niF", __pyx_getprop_6bright_9Reactor1G_niF, __pyx_setprop_6bright_9Reactor1G_niF, 0, 0},
  {(char *)"niC", __pyx_getprop_6bright_9Reactor1G_niC, __pyx_setprop_6bright_9Reactor1G_niC, 0, 0},
  {(char *)"miF", __pyx_getprop_6bright_9Reactor1G_miF, __pyx_setprop_6bright_9Reactor1G_miF, 0, 0},
  {(char *)"miC", __pyx_getprop_6bright_9Reactor1G_miC, __pyx_setprop_6bright_9Reactor1G_miC, 0, 0},
  {(char *)"NiF", __pyx_getprop_6bright_9Reactor1G_NiF, __pyx_setprop_6bright_9Reactor1G_NiF, 0, 0},
  {(char *)"NiC", __pyx_getprop_6bright_9Reactor1G_NiC, __pyx_setprop_6bright_9Reactor1G_NiC, 0, 0},
  {(char *)"dF_F_", __pyx_getprop_6bright_9Reactor1G_dF_F_, __pyx_setprop_6bright_9Reactor1G_dF_F_, 0, 0},
  {(char *)"dC_F_", __pyx_getprop_6bright_9Reactor1G_dC_F_, __pyx_setprop_6bright_9Reactor1G_dC_F_, 0, 0},
  {(char *)"BU_F_", __pyx_getprop_6bright_9Reactor1G_BU_F_, __pyx_setprop_6bright_9Reactor1G_BU_F_, 0, 0},
  {(char *)"P_F_", __pyx_getprop_6bright_9Reactor1G_P_F_, __pyx_setprop_6bright_9Reactor1G_P_F_, 0, 0},
  {(char *)"D_F_", __pyx_getprop_6bright_9Reactor1G_D_F_, __pyx_setprop_6bright_9Reactor1G_D_F_, 0, 0},
  {(char *)"k_F_", __pyx_getprop_6bright_9Reactor1G_k_F_, __pyx_setprop_6bright_9Reactor1G_k_F_, 0, 0},
  {(char *)"Mj_F_", __pyx_getprop_6bright_9Reactor1G_Mj_F_, __pyx_setprop_6bright_9Reactor1G_Mj_F_, 0, 0},
  {(char *)"zeta_F_", __pyx_getprop_6bright_9Reactor1G_zeta_F_, __pyx_setprop_6bright_9Reactor1G_zeta_F_, 0, 0},
  {(char *)"fd", __pyx_getprop_6bright_9Reactor1G_fd, __pyx_setprop_6bright_9Reactor1G_fd, 0, 0},
  {(char *)"Fd", __pyx_getprop_6bright_9Reactor1G_Fd, __pyx_setprop_6bright_9Reactor1G_Fd, 0, 0},
  {(char *)"BUd", __pyx_getprop_6bright_9Reactor1G_BUd, __pyx_setprop_6bright_9Reactor1G_BUd, 0, 0},
  {(char *)"k", __pyx_getprop_6bright_9Reactor1G_k, __pyx_setprop_6bright_9Reactor1G_k, 0, 0},
  {(char *)"InU", __pyx_getprop_6bright_9Reactor1G_InU, __pyx_setprop_6bright_9Reactor1G_InU, 0, 0},
  {(char *)"InTRU", __pyx_getprop_6bright_9Reactor1G_InTRU, __pyx_setprop_6bright_9Reactor1G_InTRU, 0, 0},
  {(char *)"InLAN", __pyx_getprop_6bright_9Reactor1G_InLAN, __pyx_setprop_6bright_9Reactor1G_InLAN, 0, 0},
  {(char *)"InACT", __pyx_getprop_6bright_9Reactor1G_InACT, __pyx_setprop_6bright_9Reactor1G_InACT, 0, 0},
  {(char *)"OutU", __pyx_getprop_6bright_9Reactor1G_OutU, __pyx_setprop_6bright_9Reactor1G_OutU, 0, 0},
  {(char *)"OutTRU", __pyx_getprop_6bright_9Reactor1G_OutTRU, __pyx_setprop_6bright_9Reactor1G_OutTRU, 0, 0},
  {(char *)"OutLAN", __pyx_getprop_6bright_9Reactor1G_OutLAN, __pyx_setprop_6bright_9Reactor1G_OutLAN, 0, 0},
  {(char *)"OutACT", __pyx_getprop_6bright_9Reactor1G_OutACT, __pyx_setprop_6bright_9Reactor1G_OutACT, 0, 0},
  {(char *)"deltaR", __pyx_getprop_6bright_9Reactor1G_deltaR, __pyx_setprop_6bright_9Reactor1G_deltaR, 0, 0},
  {(char *)"TruCR", __pyx_getprop_6bright_9Reactor1G_TruCR, __pyx_setprop_6bright_9Reactor1G_TruCR, 0, 0},
  {(char *)"SigmaFa_F_", __pyx_getprop_6bright_9Reactor1G_SigmaFa_F_, __pyx_setprop_6bright_9Reactor1G_SigmaFa_F_, 0, 0},
  {(char *)"SigmaFtr_F_", __pyx_getprop_6bright_9Reactor1G_SigmaFtr_F_, __pyx_setprop_6bright_9Reactor1G_SigmaFtr_F_, 0, 0},
  {(char *)"kappaF_F_", __pyx_getprop_6bright_9Reactor1G_kappaF_F_, __pyx_setprop_6bright_9Reactor1G_kappaF_F_, 0, 0},
  {(char *)"SigmaCa_F_", __pyx_getprop_6bright_9Reactor1G_SigmaCa_F_, __pyx_setprop_6bright_9Reactor1G_SigmaCa_F_, 0, 0},
  {(char *)"SigmaCtr_F_", __pyx_getprop_6bright_9Reactor1G_SigmaCtr_F_, __pyx_setprop_6bright_9Reactor1G_SigmaCtr_F_, 0, 0},
  {(char *)"kappaC_F_", __pyx_getprop_6bright_9Reactor1G_kappaC_F_, __pyx_setprop_6bright_9Reactor1G_kappaC_F_, 0, 0},
  {(char *)"LatticeE_F_", __pyx_getprop_6bright_9Reactor1G_LatticeE_F_, __pyx_setprop_6bright_9Reactor1G_LatticeE_F_, 0, 0},
  {(char *)"LatticeF_F_", __pyx_getprop_6bright_9Reactor1G_LatticeF_F_, __pyx_setprop_6bright_9Reactor1G_LatticeF_F_, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_9Reactor1G_name, __pyx_setprop_6bright_9Reactor1G_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_9Reactor1G_natural_name, __pyx_setprop_6bright_9Reactor1G_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_9Reactor1G_IsosIn, __pyx_setprop_6bright_9Reactor1G_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_9Reactor1G_IsosOut, __pyx_setprop_6bright_9Reactor1G_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_9Reactor1G_ParamsIn, __pyx_setprop_6bright_9Reactor1G_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_9Reactor1G_ParamsOut, __pyx_setprop_6bright_9Reactor1G_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_9Reactor1G_PassNum, __pyx_setprop_6bright_9Reactor1G_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_9Reactor1G_params2track, __pyx_setprop_6bright_9Reactor1G_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Reactor1G = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Reactor1G = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Reactor1G = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Reactor1G = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_Reactor1G = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.Reactor1G"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_Reactor1G), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_Reactor1G, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Reactor1G, /*tp_as_number*/
  &__pyx_tp_as_sequence_Reactor1G, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Reactor1G, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Reactor1G, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("One-Group Reactor Fuel Cycle Component Class.  Daughter of BriPy.FCComp class.\n\n    Args:\n        * reactor_parameters (ReactorParameters): A special data structure that contains information\n          on how to setup and run the reactor.\n        * params2track (string set): A set of strings that represents what parameter data the reactor should \n          store and set.  Different reactor types may have different characteristic parameters that are of interest.\n        * name (str): The name of the reactor fuel cycle component instance.\n\n    Note that this automatically calls the public initialize() C function.\n\n    .. note:: \n\n        Some data members and functions have names that end in '_F_'.  This indicates that these are a \n        function of fluence, the time integral of the flux.  The '_Fd_' suffix implies that the data is \n        evaluated at the discharge fluence.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_Reactor1G, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_Reactor1G, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_Reactor1G, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_LightWaterReactor1G(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_Reactor1G(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_19LightWaterReactor1G___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_LightWaterReactor1G(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_19LightWaterReactor1G_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_Reactor1G(o);
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_B(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_1B___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_B(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_1B_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_phi(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3phi___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_phi(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3phi_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_FuelChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_FuelChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_16FuelChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_CoolantChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_CoolantChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_19CoolantChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_rhoF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4rhoF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_rhoF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4rhoF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_rhoC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4rhoC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_rhoC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4rhoC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_P_NL(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4P_NL___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_P_NL(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4P_NL_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_TargetBU(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_8TargetBU___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_TargetBU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_8TargetBU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_useZeta(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7useZeta___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_useZeta(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7useZeta_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_Lattice(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7Lattice___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_Lattice(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7Lattice_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_H_XS_Rescale(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_H_XS_Rescale(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_12H_XS_Rescale_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_r(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_1r___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_r(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_1r_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_l(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_1l___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_l(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_1l_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_S_O(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3S_O___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_S_O(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3S_O_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_S_T(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3S_T___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_S_T(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3S_T_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_VF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_2VF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_VF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_2VF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_VC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_2VC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_VC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_2VC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_libfile(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7libfile___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_libfile(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7libfile_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_F(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_1F___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_F(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_1F_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_BUi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6BUi_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_BUi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6BUi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_pi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5pi_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_pi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5pi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_di_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5di_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_di_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5di_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_Tij_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6Tij_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_Tij_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6Tij_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_A_IHM(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5A_IHM___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_A_IHM(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5A_IHM_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_MWF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3MWF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_MWF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3MWF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_MWC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3MWC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_MWC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3MWC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_niF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3niF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_niF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3niF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_niC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3niC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_niC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3niC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_miF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3miF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_miF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3miF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_miC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3miC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_miC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3miC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_NiF(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3NiF___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_NiF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3NiF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_NiC(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3NiC___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_NiC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3NiC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_dF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5dF_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_dF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5dF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_dC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5dC_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_dC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5dC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_BU_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5BU_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_BU_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5BU_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_P_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4P_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_P_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4P_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_D_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4D_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_D_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4D_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_k_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4k_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_k_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4k_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_Mj_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5Mj_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_Mj_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5Mj_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_zeta_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7zeta_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_zeta_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7zeta_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_2fd___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_2fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_Fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_2Fd___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_Fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_2Fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_BUd(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3BUd___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_BUd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3BUd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_k(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_1k___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_k(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_1k_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_InU(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_3InU___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_InU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_3InU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_InTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5InTRU___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_InTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5InTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_InLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5InLAN___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_InLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5InLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_InACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5InACT___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_InACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5InACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_OutU(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4OutU___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_OutU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4OutU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_OutTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6OutTRU___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_OutTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6OutTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_OutLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6OutLAN___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_OutLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6OutLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_OutACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6OutACT___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_OutACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6OutACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_deltaR(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6deltaR___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_deltaR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6deltaR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_TruCR(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_5TruCR___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_TruCR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_5TruCR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_SigmaFa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_SigmaFa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_10SigmaFa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_SigmaFtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_SigmaFtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_11SigmaFtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_kappaF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_kappaF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_9kappaF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_SigmaCa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_SigmaCa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_10SigmaCa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_SigmaCtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_SigmaCtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_11SigmaCtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_kappaC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_kappaC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_9kappaC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_LatticeE_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_LatticeE_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_11LatticeE_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_LatticeF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F____get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_LatticeF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_11LatticeF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_4name___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_19LightWaterReactor1G_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_19LightWaterReactor1G_12params2track___get__(o);
}

static int __pyx_setprop_6bright_19LightWaterReactor1G_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_19LightWaterReactor1G_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_LightWaterReactor1G[] = {
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_2setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_2setParams)},
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_3initialize, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_3initialize)},
  {__Pyx_NAMESTR("loadLib"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_4loadLib, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_4loadLib)},
  {__Pyx_NAMESTR("foldMassWeights"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_5foldMassWeights, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_5foldMassWeights)},
  {__Pyx_NAMESTR("mkMj_F_"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_6mkMj_F_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_6mkMj_F_)},
  {__Pyx_NAMESTR("mkMj_Fd_"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_7mkMj_Fd_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_7mkMj_Fd_)},
  {__Pyx_NAMESTR("calcOutIso"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_8calcOutIso, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_8calcOutIso)},
  {__Pyx_NAMESTR("calcSubStreams"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_9calcSubStreams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_9calcSubStreams)},
  {__Pyx_NAMESTR("calcTruCR"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_10calcTruCR, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_10calcTruCR)},
  {__Pyx_NAMESTR("calc_deltaR"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_11calc_deltaR, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_11calc_deltaR)},
  {__Pyx_NAMESTR("FluenceAtBU"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_12FluenceAtBU, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_12FluenceAtBU)},
  {__Pyx_NAMESTR("batchAve"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_13batchAve, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_13batchAve)},
  {__Pyx_NAMESTR("batchAveK"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_14batchAveK, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_14batchAveK)},
  {__Pyx_NAMESTR("BUd_BisectionMethod"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_15BUd_BisectionMethod, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_15BUd_BisectionMethod)},
  {__Pyx_NAMESTR("Run_PNL"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_16Run_PNL, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_16Run_PNL)},
  {__Pyx_NAMESTR("Calibrate_PNL_2_BUd"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_17Calibrate_PNL_2_BUd, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_17Calibrate_PNL_2_BUd)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_18doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_18doCalc)},
  {__Pyx_NAMESTR("LatticeEPlanar"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_19LatticeEPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_19LatticeEPlanar)},
  {__Pyx_NAMESTR("LatticeFPlanar"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_20LatticeFPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_20LatticeFPlanar)},
  {__Pyx_NAMESTR("LatticeESpherical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_21LatticeESpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_21LatticeESpherical)},
  {__Pyx_NAMESTR("LatticeFSpherical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_22LatticeFSpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_22LatticeFSpherical)},
  {__Pyx_NAMESTR("LatticeECylindrical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_23LatticeECylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_23LatticeECylindrical)},
  {__Pyx_NAMESTR("LatticeFCylindrical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_24LatticeFCylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_24LatticeFCylindrical)},
  {__Pyx_NAMESTR("calcZeta"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_25calcZeta, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_25calcZeta)},
  {__Pyx_NAMESTR("calcZetaPlanar"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_26calcZetaPlanar, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_26calcZetaPlanar)},
  {__Pyx_NAMESTR("calcZetaSpherical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_27calcZetaSpherical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_27calcZetaSpherical)},
  {__Pyx_NAMESTR("calcZetaCylindrical"), (PyCFunction)__pyx_pf_6bright_19LightWaterReactor1G_28calcZetaCylindrical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_19LightWaterReactor1G_28calcZetaCylindrical)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_LightWaterReactor1G[] = {
  {(char *)"B", __pyx_getprop_6bright_19LightWaterReactor1G_B, __pyx_setprop_6bright_19LightWaterReactor1G_B, 0, 0},
  {(char *)"phi", __pyx_getprop_6bright_19LightWaterReactor1G_phi, __pyx_setprop_6bright_19LightWaterReactor1G_phi, 0, 0},
  {(char *)"FuelChemicalForm", __pyx_getprop_6bright_19LightWaterReactor1G_FuelChemicalForm, __pyx_setprop_6bright_19LightWaterReactor1G_FuelChemicalForm, 0, 0},
  {(char *)"CoolantChemicalForm", __pyx_getprop_6bright_19LightWaterReactor1G_CoolantChemicalForm, __pyx_setprop_6bright_19LightWaterReactor1G_CoolantChemicalForm, 0, 0},
  {(char *)"rhoF", __pyx_getprop_6bright_19LightWaterReactor1G_rhoF, __pyx_setprop_6bright_19LightWaterReactor1G_rhoF, 0, 0},
  {(char *)"rhoC", __pyx_getprop_6bright_19LightWaterReactor1G_rhoC, __pyx_setprop_6bright_19LightWaterReactor1G_rhoC, 0, 0},
  {(char *)"P_NL", __pyx_getprop_6bright_19LightWaterReactor1G_P_NL, __pyx_setprop_6bright_19LightWaterReactor1G_P_NL, 0, 0},
  {(char *)"TargetBU", __pyx_getprop_6bright_19LightWaterReactor1G_TargetBU, __pyx_setprop_6bright_19LightWaterReactor1G_TargetBU, 0, 0},
  {(char *)"useZeta", __pyx_getprop_6bright_19LightWaterReactor1G_useZeta, __pyx_setprop_6bright_19LightWaterReactor1G_useZeta, 0, 0},
  {(char *)"Lattice", __pyx_getprop_6bright_19LightWaterReactor1G_Lattice, __pyx_setprop_6bright_19LightWaterReactor1G_Lattice, 0, 0},
  {(char *)"H_XS_Rescale", __pyx_getprop_6bright_19LightWaterReactor1G_H_XS_Rescale, __pyx_setprop_6bright_19LightWaterReactor1G_H_XS_Rescale, 0, 0},
  {(char *)"r", __pyx_getprop_6bright_19LightWaterReactor1G_r, __pyx_setprop_6bright_19LightWaterReactor1G_r, 0, 0},
  {(char *)"l", __pyx_getprop_6bright_19LightWaterReactor1G_l, __pyx_setprop_6bright_19LightWaterReactor1G_l, 0, 0},
  {(char *)"S_O", __pyx_getprop_6bright_19LightWaterReactor1G_S_O, __pyx_setprop_6bright_19LightWaterReactor1G_S_O, 0, 0},
  {(char *)"S_T", __pyx_getprop_6bright_19LightWaterReactor1G_S_T, __pyx_setprop_6bright_19LightWaterReactor1G_S_T, 0, 0},
  {(char *)"VF", __pyx_getprop_6bright_19LightWaterReactor1G_VF, __pyx_setprop_6bright_19LightWaterReactor1G_VF, 0, 0},
  {(char *)"VC", __pyx_getprop_6bright_19LightWaterReactor1G_VC, __pyx_setprop_6bright_19LightWaterReactor1G_VC, 0, 0},
  {(char *)"libfile", __pyx_getprop_6bright_19LightWaterReactor1G_libfile, __pyx_setprop_6bright_19LightWaterReactor1G_libfile, 0, 0},
  {(char *)"F", __pyx_getprop_6bright_19LightWaterReactor1G_F, __pyx_setprop_6bright_19LightWaterReactor1G_F, 0, 0},
  {(char *)"BUi_F_", __pyx_getprop_6bright_19LightWaterReactor1G_BUi_F_, __pyx_setprop_6bright_19LightWaterReactor1G_BUi_F_, 0, 0},
  {(char *)"pi_F_", __pyx_getprop_6bright_19LightWaterReactor1G_pi_F_, __pyx_setprop_6bright_19LightWaterReactor1G_pi_F_, 0, 0},
  {(char *)"di_F_", __pyx_getprop_6bright_19LightWaterReactor1G_di_F_, __pyx_setprop_6bright_19LightWaterReactor1G_di_F_, 0, 0},
  {(char *)"Tij_F_", __pyx_getprop_6bright_19LightWaterReactor1G_Tij_F_, __pyx_setprop_6bright_19LightWaterReactor1G_Tij_F_, 0, 0},
  {(char *)"A_IHM", __pyx_getprop_6bright_19LightWaterReactor1G_A_IHM, __pyx_setprop_6bright_19LightWaterReactor1G_A_IHM, 0, 0},
  {(char *)"MWF", __pyx_getprop_6bright_19LightWaterReactor1G_MWF, __pyx_setprop_6bright_19LightWaterReactor1G_MWF, 0, 0},
  {(char *)"MWC", __pyx_getprop_6bright_19LightWaterReactor1G_MWC, __pyx_setprop_6bright_19LightWaterReactor1G_MWC, 0, 0},
  {(char *)"niF", __pyx_getprop_6bright_19LightWaterReactor1G_niF, __pyx_setprop_6bright_19LightWaterReactor1G_niF, 0, 0},
  {(char *)"niC", __pyx_getprop_6bright_19LightWaterReactor1G_niC, __pyx_setprop_6bright_19LightWaterReactor1G_niC, 0, 0},
  {(char *)"miF", __pyx_getprop_6bright_19LightWaterReactor1G_miF, __pyx_setprop_6bright_19LightWaterReactor1G_miF, 0, 0},
  {(char *)"miC", __pyx_getprop_6bright_19LightWaterReactor1G_miC, __pyx_setprop_6bright_19LightWaterReactor1G_miC, 0, 0},
  {(char *)"NiF", __pyx_getprop_6bright_19LightWaterReactor1G_NiF, __pyx_setprop_6bright_19LightWaterReactor1G_NiF, 0, 0},
  {(char *)"NiC", __pyx_getprop_6bright_19LightWaterReactor1G_NiC, __pyx_setprop_6bright_19LightWaterReactor1G_NiC, 0, 0},
  {(char *)"dF_F_", __pyx_getprop_6bright_19LightWaterReactor1G_dF_F_, __pyx_setprop_6bright_19LightWaterReactor1G_dF_F_, 0, 0},
  {(char *)"dC_F_", __pyx_getprop_6bright_19LightWaterReactor1G_dC_F_, __pyx_setprop_6bright_19LightWaterReactor1G_dC_F_, 0, 0},
  {(char *)"BU_F_", __pyx_getprop_6bright_19LightWaterReactor1G_BU_F_, __pyx_setprop_6bright_19LightWaterReactor1G_BU_F_, 0, 0},
  {(char *)"P_F_", __pyx_getprop_6bright_19LightWaterReactor1G_P_F_, __pyx_setprop_6bright_19LightWaterReactor1G_P_F_, 0, 0},
  {(char *)"D_F_", __pyx_getprop_6bright_19LightWaterReactor1G_D_F_, __pyx_setprop_6bright_19LightWaterReactor1G_D_F_, 0, 0},
  {(char *)"k_F_", __pyx_getprop_6bright_19LightWaterReactor1G_k_F_, __pyx_setprop_6bright_19LightWaterReactor1G_k_F_, 0, 0},
  {(char *)"Mj_F_", __pyx_getprop_6bright_19LightWaterReactor1G_Mj_F_, __pyx_setprop_6bright_19LightWaterReactor1G_Mj_F_, 0, 0},
  {(char *)"zeta_F_", __pyx_getprop_6bright_19LightWaterReactor1G_zeta_F_, __pyx_setprop_6bright_19LightWaterReactor1G_zeta_F_, 0, 0},
  {(char *)"fd", __pyx_getprop_6bright_19LightWaterReactor1G_fd, __pyx_setprop_6bright_19LightWaterReactor1G_fd, 0, 0},
  {(char *)"Fd", __pyx_getprop_6bright_19LightWaterReactor1G_Fd, __pyx_setprop_6bright_19LightWaterReactor1G_Fd, 0, 0},
  {(char *)"BUd", __pyx_getprop_6bright_19LightWaterReactor1G_BUd, __pyx_setprop_6bright_19LightWaterReactor1G_BUd, 0, 0},
  {(char *)"k", __pyx_getprop_6bright_19LightWaterReactor1G_k, __pyx_setprop_6bright_19LightWaterReactor1G_k, 0, 0},
  {(char *)"InU", __pyx_getprop_6bright_19LightWaterReactor1G_InU, __pyx_setprop_6bright_19LightWaterReactor1G_InU, 0, 0},
  {(char *)"InTRU", __pyx_getprop_6bright_19LightWaterReactor1G_InTRU, __pyx_setprop_6bright_19LightWaterReactor1G_InTRU, 0, 0},
  {(char *)"InLAN", __pyx_getprop_6bright_19LightWaterReactor1G_InLAN, __pyx_setprop_6bright_19LightWaterReactor1G_InLAN, 0, 0},
  {(char *)"InACT", __pyx_getprop_6bright_19LightWaterReactor1G_InACT, __pyx_setprop_6bright_19LightWaterReactor1G_InACT, 0, 0},
  {(char *)"OutU", __pyx_getprop_6bright_19LightWaterReactor1G_OutU, __pyx_setprop_6bright_19LightWaterReactor1G_OutU, 0, 0},
  {(char *)"OutTRU", __pyx_getprop_6bright_19LightWaterReactor1G_OutTRU, __pyx_setprop_6bright_19LightWaterReactor1G_OutTRU, 0, 0},
  {(char *)"OutLAN", __pyx_getprop_6bright_19LightWaterReactor1G_OutLAN, __pyx_setprop_6bright_19LightWaterReactor1G_OutLAN, 0, 0},
  {(char *)"OutACT", __pyx_getprop_6bright_19LightWaterReactor1G_OutACT, __pyx_setprop_6bright_19LightWaterReactor1G_OutACT, 0, 0},
  {(char *)"deltaR", __pyx_getprop_6bright_19LightWaterReactor1G_deltaR, __pyx_setprop_6bright_19LightWaterReactor1G_deltaR, 0, 0},
  {(char *)"TruCR", __pyx_getprop_6bright_19LightWaterReactor1G_TruCR, __pyx_setprop_6bright_19LightWaterReactor1G_TruCR, 0, 0},
  {(char *)"SigmaFa_F_", __pyx_getprop_6bright_19LightWaterReactor1G_SigmaFa_F_, __pyx_setprop_6bright_19LightWaterReactor1G_SigmaFa_F_, 0, 0},
  {(char *)"SigmaFtr_F_", __pyx_getprop_6bright_19LightWaterReactor1G_SigmaFtr_F_, __pyx_setprop_6bright_19LightWaterReactor1G_SigmaFtr_F_, 0, 0},
  {(char *)"kappaF_F_", __pyx_getprop_6bright_19LightWaterReactor1G_kappaF_F_, __pyx_setprop_6bright_19LightWaterReactor1G_kappaF_F_, 0, 0},
  {(char *)"SigmaCa_F_", __pyx_getprop_6bright_19LightWaterReactor1G_SigmaCa_F_, __pyx_setprop_6bright_19LightWaterReactor1G_SigmaCa_F_, 0, 0},
  {(char *)"SigmaCtr_F_", __pyx_getprop_6bright_19LightWaterReactor1G_SigmaCtr_F_, __pyx_setprop_6bright_19LightWaterReactor1G_SigmaCtr_F_, 0, 0},
  {(char *)"kappaC_F_", __pyx_getprop_6bright_19LightWaterReactor1G_kappaC_F_, __pyx_setprop_6bright_19LightWaterReactor1G_kappaC_F_, 0, 0},
  {(char *)"LatticeE_F_", __pyx_getprop_6bright_19LightWaterReactor1G_LatticeE_F_, __pyx_setprop_6bright_19LightWaterReactor1G_LatticeE_F_, 0, 0},
  {(char *)"LatticeF_F_", __pyx_getprop_6bright_19LightWaterReactor1G_LatticeF_F_, __pyx_setprop_6bright_19LightWaterReactor1G_LatticeF_F_, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_19LightWaterReactor1G_name, __pyx_setprop_6bright_19LightWaterReactor1G_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_19LightWaterReactor1G_natural_name, __pyx_setprop_6bright_19LightWaterReactor1G_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_19LightWaterReactor1G_IsosIn, __pyx_setprop_6bright_19LightWaterReactor1G_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_19LightWaterReactor1G_IsosOut, __pyx_setprop_6bright_19LightWaterReactor1G_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_19LightWaterReactor1G_ParamsIn, __pyx_setprop_6bright_19LightWaterReactor1G_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_19LightWaterReactor1G_ParamsOut, __pyx_setprop_6bright_19LightWaterReactor1G_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_19LightWaterReactor1G_PassNum, __pyx_setprop_6bright_19LightWaterReactor1G_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_19LightWaterReactor1G_params2track, __pyx_setprop_6bright_19LightWaterReactor1G_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LightWaterReactor1G = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LightWaterReactor1G = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LightWaterReactor1G = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LightWaterReactor1G = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_LightWaterReactor1G = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.LightWaterReactor1G"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_LightWaterReactor1G), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_LightWaterReactor1G, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_LightWaterReactor1G, /*tp_as_number*/
  &__pyx_tp_as_sequence_LightWaterReactor1G, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LightWaterReactor1G, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LightWaterReactor1G, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("A One-Group Light Water Reactor Fuel Cycle Component.  This is a daughter class of Reactor1G and \n    a granddaughter of FCComp.\n\n    Keyword Args:\n        * libfile (string): The path the the LWR HDF5 data library.  This value is set to \n          Reactor1G.libfile and used by Reactor1G.loadLib.\n        * reactor_parameters (ReactorParameters): The physical reactor parameter data to initialize this\n          LWR instance with.  If this argument is not provided, default values are taken.\n        * name (string): The name of this LWR instance.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_LightWaterReactor1G, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_LightWaterReactor1G, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_LightWaterReactor1G, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_FastReactor1G(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_Reactor1G(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_13FastReactor1G___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_FastReactor1G(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_13FastReactor1G_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_Reactor1G(o);
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_B(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_1B___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_B(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_1B_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_phi(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3phi___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_phi(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3phi_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_FuelChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_FuelChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_16FuelChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_CoolantChemicalForm(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_CoolantChemicalForm(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_19CoolantChemicalForm_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_rhoF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4rhoF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_rhoF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4rhoF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_rhoC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4rhoC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_rhoC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4rhoC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_P_NL(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4P_NL___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_P_NL(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4P_NL_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_TargetBU(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_8TargetBU___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_TargetBU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_8TargetBU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_useZeta(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7useZeta___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_useZeta(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7useZeta_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_Lattice(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7Lattice___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_Lattice(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7Lattice_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_H_XS_Rescale(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_H_XS_Rescale(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_12H_XS_Rescale_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_r(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_1r___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_r(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_1r_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_l(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_1l___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_l(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_1l_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_S_O(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3S_O___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_S_O(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3S_O_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_S_T(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3S_T___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_S_T(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3S_T_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_VF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_2VF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_VF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_2VF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_VC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_2VC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_VC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_2VC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_libfile(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7libfile___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_libfile(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7libfile_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_F(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_1F___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_F(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_1F_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_BUi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6BUi_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_BUi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6BUi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_pi_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5pi_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_pi_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5pi_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_di_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5di_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_di_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5di_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_Tij_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6Tij_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_Tij_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6Tij_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_A_IHM(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5A_IHM___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_A_IHM(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5A_IHM_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_MWF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3MWF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_MWF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3MWF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_MWC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3MWC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_MWC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3MWC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_niF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3niF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_niF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3niF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_niC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3niC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_niC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3niC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_miF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3miF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_miF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3miF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_miC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3miC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_miC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3miC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_NiF(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3NiF___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_NiF(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3NiF_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_NiC(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3NiC___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_NiC(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3NiC_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_dF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5dF_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_dF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5dF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_dC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5dC_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_dC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5dC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_BU_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5BU_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_BU_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5BU_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_P_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4P_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_P_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4P_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_D_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4D_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_D_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4D_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_k_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4k_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_k_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4k_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_Mj_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5Mj_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_Mj_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5Mj_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_zeta_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7zeta_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_zeta_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7zeta_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_2fd___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_2fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_Fd(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_2Fd___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_Fd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_2Fd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_BUd(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3BUd___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_BUd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3BUd_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_k(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_1k___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_k(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_1k_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_InU(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_3InU___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_InU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_3InU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_InTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5InTRU___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_InTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5InTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_InLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5InLAN___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_InLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5InLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_InACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5InACT___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_InACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5InACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_OutU(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4OutU___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_OutU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4OutU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_OutTRU(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6OutTRU___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_OutTRU(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6OutTRU_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_OutLAN(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6OutLAN___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_OutLAN(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6OutLAN_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_OutACT(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6OutACT___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_OutACT(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6OutACT_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_deltaR(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6deltaR___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_deltaR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6deltaR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_TruCR(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_5TruCR___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_TruCR(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_5TruCR_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_SigmaFa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_10SigmaFa_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_SigmaFa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_10SigmaFa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_SigmaFtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_SigmaFtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_11SigmaFtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_kappaF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_9kappaF_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_kappaF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_9kappaF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_SigmaCa_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_10SigmaCa_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_SigmaCa_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_10SigmaCa_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_SigmaCtr_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_SigmaCtr_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_11SigmaCtr_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_kappaC_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_9kappaC_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_kappaC_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_9kappaC_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_LatticeE_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_11LatticeE_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_LatticeE_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_11LatticeE_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_LatticeF_F_(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_11LatticeF_F____get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_LatticeF_F_(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_11LatticeF_F__1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_4name___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_13FastReactor1G_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_13FastReactor1G_12params2track___get__(o);
}

static int __pyx_setprop_6bright_13FastReactor1G_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_13FastReactor1G_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_FastReactor1G[] = {
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_2setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_2setParams)},
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_3initialize, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_3initialize)},
  {__Pyx_NAMESTR("loadLib"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_4loadLib, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_4loadLib)},
  {__Pyx_NAMESTR("foldMassWeights"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_5foldMassWeights, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_5foldMassWeights)},
  {__Pyx_NAMESTR("mkMj_F_"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_6mkMj_F_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_6mkMj_F_)},
  {__Pyx_NAMESTR("mkMj_Fd_"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_7mkMj_Fd_, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_7mkMj_Fd_)},
  {__Pyx_NAMESTR("calcOutIso"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_8calcOutIso, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_8calcOutIso)},
  {__Pyx_NAMESTR("calcSubStreams"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_9calcSubStreams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_9calcSubStreams)},
  {__Pyx_NAMESTR("calcTruCR"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_10calcTruCR, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_10calcTruCR)},
  {__Pyx_NAMESTR("calc_deltaR"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_11calc_deltaR, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_11calc_deltaR)},
  {__Pyx_NAMESTR("FluenceAtBU"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_12FluenceAtBU, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_12FluenceAtBU)},
  {__Pyx_NAMESTR("batchAve"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_13batchAve, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_13batchAve)},
  {__Pyx_NAMESTR("batchAveK"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_14batchAveK, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_14batchAveK)},
  {__Pyx_NAMESTR("BUd_BisectionMethod"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_15BUd_BisectionMethod, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_15BUd_BisectionMethod)},
  {__Pyx_NAMESTR("Run_PNL"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_16Run_PNL, METH_O, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_16Run_PNL)},
  {__Pyx_NAMESTR("Calibrate_PNL_2_BUd"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_17Calibrate_PNL_2_BUd, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_17Calibrate_PNL_2_BUd)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_18doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_18doCalc)},
  {__Pyx_NAMESTR("LatticeEPlanar"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_19LatticeEPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_19LatticeEPlanar)},
  {__Pyx_NAMESTR("LatticeFPlanar"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_20LatticeFPlanar, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_20LatticeFPlanar)},
  {__Pyx_NAMESTR("LatticeESpherical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_21LatticeESpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_21LatticeESpherical)},
  {__Pyx_NAMESTR("LatticeFSpherical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_22LatticeFSpherical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_22LatticeFSpherical)},
  {__Pyx_NAMESTR("LatticeECylindrical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_23LatticeECylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_23LatticeECylindrical)},
  {__Pyx_NAMESTR("LatticeFCylindrical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_24LatticeFCylindrical, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_24LatticeFCylindrical)},
  {__Pyx_NAMESTR("calcZeta"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_25calcZeta, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_25calcZeta)},
  {__Pyx_NAMESTR("calcZetaPlanar"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_26calcZetaPlanar, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_26calcZetaPlanar)},
  {__Pyx_NAMESTR("calcZetaSpherical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_27calcZetaSpherical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_27calcZetaSpherical)},
  {__Pyx_NAMESTR("calcZetaCylindrical"), (PyCFunction)__pyx_pf_6bright_13FastReactor1G_28calcZetaCylindrical, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_13FastReactor1G_28calcZetaCylindrical)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_FastReactor1G[] = {
  {(char *)"B", __pyx_getprop_6bright_13FastReactor1G_B, __pyx_setprop_6bright_13FastReactor1G_B, 0, 0},
  {(char *)"phi", __pyx_getprop_6bright_13FastReactor1G_phi, __pyx_setprop_6bright_13FastReactor1G_phi, 0, 0},
  {(char *)"FuelChemicalForm", __pyx_getprop_6bright_13FastReactor1G_FuelChemicalForm, __pyx_setprop_6bright_13FastReactor1G_FuelChemicalForm, 0, 0},
  {(char *)"CoolantChemicalForm", __pyx_getprop_6bright_13FastReactor1G_CoolantChemicalForm, __pyx_setprop_6bright_13FastReactor1G_CoolantChemicalForm, 0, 0},
  {(char *)"rhoF", __pyx_getprop_6bright_13FastReactor1G_rhoF, __pyx_setprop_6bright_13FastReactor1G_rhoF, 0, 0},
  {(char *)"rhoC", __pyx_getprop_6bright_13FastReactor1G_rhoC, __pyx_setprop_6bright_13FastReactor1G_rhoC, 0, 0},
  {(char *)"P_NL", __pyx_getprop_6bright_13FastReactor1G_P_NL, __pyx_setprop_6bright_13FastReactor1G_P_NL, 0, 0},
  {(char *)"TargetBU", __pyx_getprop_6bright_13FastReactor1G_TargetBU, __pyx_setprop_6bright_13FastReactor1G_TargetBU, 0, 0},
  {(char *)"useZeta", __pyx_getprop_6bright_13FastReactor1G_useZeta, __pyx_setprop_6bright_13FastReactor1G_useZeta, 0, 0},
  {(char *)"Lattice", __pyx_getprop_6bright_13FastReactor1G_Lattice, __pyx_setprop_6bright_13FastReactor1G_Lattice, 0, 0},
  {(char *)"H_XS_Rescale", __pyx_getprop_6bright_13FastReactor1G_H_XS_Rescale, __pyx_setprop_6bright_13FastReactor1G_H_XS_Rescale, 0, 0},
  {(char *)"r", __pyx_getprop_6bright_13FastReactor1G_r, __pyx_setprop_6bright_13FastReactor1G_r, 0, 0},
  {(char *)"l", __pyx_getprop_6bright_13FastReactor1G_l, __pyx_setprop_6bright_13FastReactor1G_l, 0, 0},
  {(char *)"S_O", __pyx_getprop_6bright_13FastReactor1G_S_O, __pyx_setprop_6bright_13FastReactor1G_S_O, 0, 0},
  {(char *)"S_T", __pyx_getprop_6bright_13FastReactor1G_S_T, __pyx_setprop_6bright_13FastReactor1G_S_T, 0, 0},
  {(char *)"VF", __pyx_getprop_6bright_13FastReactor1G_VF, __pyx_setprop_6bright_13FastReactor1G_VF, 0, 0},
  {(char *)"VC", __pyx_getprop_6bright_13FastReactor1G_VC, __pyx_setprop_6bright_13FastReactor1G_VC, 0, 0},
  {(char *)"libfile", __pyx_getprop_6bright_13FastReactor1G_libfile, __pyx_setprop_6bright_13FastReactor1G_libfile, 0, 0},
  {(char *)"F", __pyx_getprop_6bright_13FastReactor1G_F, __pyx_setprop_6bright_13FastReactor1G_F, 0, 0},
  {(char *)"BUi_F_", __pyx_getprop_6bright_13FastReactor1G_BUi_F_, __pyx_setprop_6bright_13FastReactor1G_BUi_F_, 0, 0},
  {(char *)"pi_F_", __pyx_getprop_6bright_13FastReactor1G_pi_F_, __pyx_setprop_6bright_13FastReactor1G_pi_F_, 0, 0},
  {(char *)"di_F_", __pyx_getprop_6bright_13FastReactor1G_di_F_, __pyx_setprop_6bright_13FastReactor1G_di_F_, 0, 0},
  {(char *)"Tij_F_", __pyx_getprop_6bright_13FastReactor1G_Tij_F_, __pyx_setprop_6bright_13FastReactor1G_Tij_F_, 0, 0},
  {(char *)"A_IHM", __pyx_getprop_6bright_13FastReactor1G_A_IHM, __pyx_setprop_6bright_13FastReactor1G_A_IHM, 0, 0},
  {(char *)"MWF", __pyx_getprop_6bright_13FastReactor1G_MWF, __pyx_setprop_6bright_13FastReactor1G_MWF, 0, 0},
  {(char *)"MWC", __pyx_getprop_6bright_13FastReactor1G_MWC, __pyx_setprop_6bright_13FastReactor1G_MWC, 0, 0},
  {(char *)"niF", __pyx_getprop_6bright_13FastReactor1G_niF, __pyx_setprop_6bright_13FastReactor1G_niF, 0, 0},
  {(char *)"niC", __pyx_getprop_6bright_13FastReactor1G_niC, __pyx_setprop_6bright_13FastReactor1G_niC, 0, 0},
  {(char *)"miF", __pyx_getprop_6bright_13FastReactor1G_miF, __pyx_setprop_6bright_13FastReactor1G_miF, 0, 0},
  {(char *)"miC", __pyx_getprop_6bright_13FastReactor1G_miC, __pyx_setprop_6bright_13FastReactor1G_miC, 0, 0},
  {(char *)"NiF", __pyx_getprop_6bright_13FastReactor1G_NiF, __pyx_setprop_6bright_13FastReactor1G_NiF, 0, 0},
  {(char *)"NiC", __pyx_getprop_6bright_13FastReactor1G_NiC, __pyx_setprop_6bright_13FastReactor1G_NiC, 0, 0},
  {(char *)"dF_F_", __pyx_getprop_6bright_13FastReactor1G_dF_F_, __pyx_setprop_6bright_13FastReactor1G_dF_F_, 0, 0},
  {(char *)"dC_F_", __pyx_getprop_6bright_13FastReactor1G_dC_F_, __pyx_setprop_6bright_13FastReactor1G_dC_F_, 0, 0},
  {(char *)"BU_F_", __pyx_getprop_6bright_13FastReactor1G_BU_F_, __pyx_setprop_6bright_13FastReactor1G_BU_F_, 0, 0},
  {(char *)"P_F_", __pyx_getprop_6bright_13FastReactor1G_P_F_, __pyx_setprop_6bright_13FastReactor1G_P_F_, 0, 0},
  {(char *)"D_F_", __pyx_getprop_6bright_13FastReactor1G_D_F_, __pyx_setprop_6bright_13FastReactor1G_D_F_, 0, 0},
  {(char *)"k_F_", __pyx_getprop_6bright_13FastReactor1G_k_F_, __pyx_setprop_6bright_13FastReactor1G_k_F_, 0, 0},
  {(char *)"Mj_F_", __pyx_getprop_6bright_13FastReactor1G_Mj_F_, __pyx_setprop_6bright_13FastReactor1G_Mj_F_, 0, 0},
  {(char *)"zeta_F_", __pyx_getprop_6bright_13FastReactor1G_zeta_F_, __pyx_setprop_6bright_13FastReactor1G_zeta_F_, 0, 0},
  {(char *)"fd", __pyx_getprop_6bright_13FastReactor1G_fd, __pyx_setprop_6bright_13FastReactor1G_fd, 0, 0},
  {(char *)"Fd", __pyx_getprop_6bright_13FastReactor1G_Fd, __pyx_setprop_6bright_13FastReactor1G_Fd, 0, 0},
  {(char *)"BUd", __pyx_getprop_6bright_13FastReactor1G_BUd, __pyx_setprop_6bright_13FastReactor1G_BUd, 0, 0},
  {(char *)"k", __pyx_getprop_6bright_13FastReactor1G_k, __pyx_setprop_6bright_13FastReactor1G_k, 0, 0},
  {(char *)"InU", __pyx_getprop_6bright_13FastReactor1G_InU, __pyx_setprop_6bright_13FastReactor1G_InU, 0, 0},
  {(char *)"InTRU", __pyx_getprop_6bright_13FastReactor1G_InTRU, __pyx_setprop_6bright_13FastReactor1G_InTRU, 0, 0},
  {(char *)"InLAN", __pyx_getprop_6bright_13FastReactor1G_InLAN, __pyx_setprop_6bright_13FastReactor1G_InLAN, 0, 0},
  {(char *)"InACT", __pyx_getprop_6bright_13FastReactor1G_InACT, __pyx_setprop_6bright_13FastReactor1G_InACT, 0, 0},
  {(char *)"OutU", __pyx_getprop_6bright_13FastReactor1G_OutU, __pyx_setprop_6bright_13FastReactor1G_OutU, 0, 0},
  {(char *)"OutTRU", __pyx_getprop_6bright_13FastReactor1G_OutTRU, __pyx_setprop_6bright_13FastReactor1G_OutTRU, 0, 0},
  {(char *)"OutLAN", __pyx_getprop_6bright_13FastReactor1G_OutLAN, __pyx_setprop_6bright_13FastReactor1G_OutLAN, 0, 0},
  {(char *)"OutACT", __pyx_getprop_6bright_13FastReactor1G_OutACT, __pyx_setprop_6bright_13FastReactor1G_OutACT, 0, 0},
  {(char *)"deltaR", __pyx_getprop_6bright_13FastReactor1G_deltaR, __pyx_setprop_6bright_13FastReactor1G_deltaR, 0, 0},
  {(char *)"TruCR", __pyx_getprop_6bright_13FastReactor1G_TruCR, __pyx_setprop_6bright_13FastReactor1G_TruCR, 0, 0},
  {(char *)"SigmaFa_F_", __pyx_getprop_6bright_13FastReactor1G_SigmaFa_F_, __pyx_setprop_6bright_13FastReactor1G_SigmaFa_F_, 0, 0},
  {(char *)"SigmaFtr_F_", __pyx_getprop_6bright_13FastReactor1G_SigmaFtr_F_, __pyx_setprop_6bright_13FastReactor1G_SigmaFtr_F_, 0, 0},
  {(char *)"kappaF_F_", __pyx_getprop_6bright_13FastReactor1G_kappaF_F_, __pyx_setprop_6bright_13FastReactor1G_kappaF_F_, 0, 0},
  {(char *)"SigmaCa_F_", __pyx_getprop_6bright_13FastReactor1G_SigmaCa_F_, __pyx_setprop_6bright_13FastReactor1G_SigmaCa_F_, 0, 0},
  {(char *)"SigmaCtr_F_", __pyx_getprop_6bright_13FastReactor1G_SigmaCtr_F_, __pyx_setprop_6bright_13FastReactor1G_SigmaCtr_F_, 0, 0},
  {(char *)"kappaC_F_", __pyx_getprop_6bright_13FastReactor1G_kappaC_F_, __pyx_setprop_6bright_13FastReactor1G_kappaC_F_, 0, 0},
  {(char *)"LatticeE_F_", __pyx_getprop_6bright_13FastReactor1G_LatticeE_F_, __pyx_setprop_6bright_13FastReactor1G_LatticeE_F_, 0, 0},
  {(char *)"LatticeF_F_", __pyx_getprop_6bright_13FastReactor1G_LatticeF_F_, __pyx_setprop_6bright_13FastReactor1G_LatticeF_F_, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_13FastReactor1G_name, __pyx_setprop_6bright_13FastReactor1G_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_13FastReactor1G_natural_name, __pyx_setprop_6bright_13FastReactor1G_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_13FastReactor1G_IsosIn, __pyx_setprop_6bright_13FastReactor1G_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_13FastReactor1G_IsosOut, __pyx_setprop_6bright_13FastReactor1G_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_13FastReactor1G_ParamsIn, __pyx_setprop_6bright_13FastReactor1G_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_13FastReactor1G_ParamsOut, __pyx_setprop_6bright_13FastReactor1G_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_13FastReactor1G_PassNum, __pyx_setprop_6bright_13FastReactor1G_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_13FastReactor1G_params2track, __pyx_setprop_6bright_13FastReactor1G_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FastReactor1G = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FastReactor1G = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FastReactor1G = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FastReactor1G = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_FastReactor1G = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.FastReactor1G"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_FastReactor1G), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_FastReactor1G, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FastReactor1G, /*tp_as_number*/
  &__pyx_tp_as_sequence_FastReactor1G, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FastReactor1G, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FastReactor1G, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("A One-Group Fast Reactor Fuel Cycle Component.  This is a daughter class of Reactor1G and \n    a granddaughter of FCComp.\n\n    Keyword Args:\n        * libfile (string): The path the the FR HDF5 data library.  This value is set to \n          Reactor1G.libfile and used by Reactor1G.loadLib.\n        * reactor_parameters (ReactorParameters): The physical reactor parameter data to initialize this\n          LWR instance with.  If this argument is not provided, default values are taken.\n        * name (string): The name of this FR instance.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_FastReactor1G, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_FastReactor1G, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_FastReactor1G, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_FuelFabrication(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bright_FCComp(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bright_15FuelFabrication___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bright_FuelFabrication(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bright_15FuelFabrication_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bright_FCComp(o);
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_mass_streams(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_12mass_streams___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_mass_streams(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_12mass_streams_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_mass_weights_in(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_15mass_weights_in___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_mass_weights_in(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_15mass_weights_in_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_mass_weights_out(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_16mass_weights_out___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_mass_weights_out(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_16mass_weights_out_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_deltaRs(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_7deltaRs___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_deltaRs(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_7deltaRs_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_reactor(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_7reactor___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_reactor(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_7reactor_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_4name___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_4name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_natural_name(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_12natural_name___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_natural_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_12natural_name_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_IsosIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_6IsosIn___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_IsosIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_6IsosIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_IsosOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_7IsosOut___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_IsosOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_7IsosOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_ParamsIn(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_8ParamsIn___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_ParamsIn(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_8ParamsIn_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_ParamsOut(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_9ParamsOut___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_ParamsOut(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_9ParamsOut_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_PassNum(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_7PassNum___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_PassNum(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_7PassNum_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_15FuelFabrication_params2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_15FuelFabrication_12params2track___get__(o);
}

static int __pyx_setprop_6bright_15FuelFabrication_params2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_15FuelFabrication_12params2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_FuelFabrication[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_2initialize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_2initialize)},
  {__Pyx_NAMESTR("setParams"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_3setParams, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_3setParams)},
  {__Pyx_NAMESTR("calc_deltaRs"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_4calc_deltaRs, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_4calc_deltaRs)},
  {__Pyx_NAMESTR("calc_core_input"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_5calc_core_input, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_5calc_core_input)},
  {__Pyx_NAMESTR("calc_mass_ratios"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_6calc_mass_ratios, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_6calc_mass_ratios)},
  {__Pyx_NAMESTR("doCalc"), (PyCFunction)__pyx_pf_6bright_15FuelFabrication_7doCalc, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bright_15FuelFabrication_7doCalc)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_FuelFabrication[] = {
  {(char *)"mass_streams", __pyx_getprop_6bright_15FuelFabrication_mass_streams, __pyx_setprop_6bright_15FuelFabrication_mass_streams, 0, 0},
  {(char *)"mass_weights_in", __pyx_getprop_6bright_15FuelFabrication_mass_weights_in, __pyx_setprop_6bright_15FuelFabrication_mass_weights_in, 0, 0},
  {(char *)"mass_weights_out", __pyx_getprop_6bright_15FuelFabrication_mass_weights_out, __pyx_setprop_6bright_15FuelFabrication_mass_weights_out, 0, 0},
  {(char *)"deltaRs", __pyx_getprop_6bright_15FuelFabrication_deltaRs, __pyx_setprop_6bright_15FuelFabrication_deltaRs, 0, 0},
  {(char *)"reactor", __pyx_getprop_6bright_15FuelFabrication_reactor, __pyx_setprop_6bright_15FuelFabrication_reactor, 0, 0},
  {(char *)"name", __pyx_getprop_6bright_15FuelFabrication_name, __pyx_setprop_6bright_15FuelFabrication_name, 0, 0},
  {(char *)"natural_name", __pyx_getprop_6bright_15FuelFabrication_natural_name, __pyx_setprop_6bright_15FuelFabrication_natural_name, 0, 0},
  {(char *)"IsosIn", __pyx_getprop_6bright_15FuelFabrication_IsosIn, __pyx_setprop_6bright_15FuelFabrication_IsosIn, 0, 0},
  {(char *)"IsosOut", __pyx_getprop_6bright_15FuelFabrication_IsosOut, __pyx_setprop_6bright_15FuelFabrication_IsosOut, 0, 0},
  {(char *)"ParamsIn", __pyx_getprop_6bright_15FuelFabrication_ParamsIn, __pyx_setprop_6bright_15FuelFabrication_ParamsIn, 0, 0},
  {(char *)"ParamsOut", __pyx_getprop_6bright_15FuelFabrication_ParamsOut, __pyx_setprop_6bright_15FuelFabrication_ParamsOut, 0, 0},
  {(char *)"PassNum", __pyx_getprop_6bright_15FuelFabrication_PassNum, __pyx_setprop_6bright_15FuelFabrication_PassNum, 0, 0},
  {(char *)"params2track", __pyx_getprop_6bright_15FuelFabrication_params2track, __pyx_setprop_6bright_15FuelFabrication_params2track, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FuelFabrication = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FuelFabrication = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FuelFabrication = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FuelFabrication = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_FuelFabrication = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.FuelFabrication"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_FuelFabrication), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_FuelFabrication, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FuelFabrication, /*tp_as_number*/
  &__pyx_tp_as_sequence_FuelFabrication, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FuelFabrication, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FuelFabrication, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Fuel Fabrication Fuel Cycle Component Class.  Daughter of BriPy.FCComp class.\n\n    Keyword Args:\n        * mass_streams (dict): A dictionary whose keys are string labels (eg, \"U-235\", \n          \"TRU\", \"My Fuel\") and whose values are mass streams.  For example::\n\n            mass_streams = {\n                \"U235\": MassStream({922350: 1.0}, 1.0, \"U-235\"),\n                \"U236\": MassStream({922360: 1.0}, 1.0, \"U-236\"),\n                \"U238\": MassStream({922380: 1.0}, 1.0, \"U-238\"),\n                }\n\n          would be valid for a light water reactor.\n        * mass_weights_in (dict): A dictionary whose keys are the same as for mass_streams\n          and whose values are the associated weight (float) for that stream.  If a stream\n          should be allowed to vary (optimized over), specify its weight as a negative number.\n          For instance::\n\n            mass_weights_in = {\n                \"U235\": -1.0,\n                \"U236\": 0.005,\n                \"U238\": -1.0,        \n                }\n\n          would be valid for a light water reactor with half a percent of U-236 always present.\n        * reactor (Reactor1G): An instance of a Reactor1G class to fabricate fuel for.\n        * params2track (list of str): Additional parameters to track, if any.        \n        * name (str): The name of the fuel fabrication fuel cycle component instance.\n\n    Note that this automatically calls the public initialize() C function.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_FuelFabrication, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_FuelFabrication, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_FuelFabrication, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bright_BrightConfig(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bright_BrightConfig(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_BRIGHT_DATA(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_BRIGHT_DATA(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_11BRIGHT_DATA_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_isos2track(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_10isos2track___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_isos2track(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_10isos2track_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_verbosity(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_9verbosity___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_verbosity(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_9verbosity_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_write_hdf5(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_10write_hdf5___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_write_hdf5(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_10write_hdf5_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_write_text(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_10write_text___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_write_text(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_10write_text_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bright_12BrightConfig_output_filename(PyObject *o, void *x) {
  return __pyx_pf_6bright_12BrightConfig_15output_filename___get__(o);
}

static int __pyx_setprop_6bright_12BrightConfig_output_filename(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bright_12BrightConfig_15output_filename_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bright_BrightConfig[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bright_BrightConfig[] = {
  {(char *)"BRIGHT_DATA", __pyx_getprop_6bright_12BrightConfig_BRIGHT_DATA, __pyx_setprop_6bright_12BrightConfig_BRIGHT_DATA, 0, 0},
  {(char *)"isos2track", __pyx_getprop_6bright_12BrightConfig_isos2track, __pyx_setprop_6bright_12BrightConfig_isos2track, 0, 0},
  {(char *)"verbosity", __pyx_getprop_6bright_12BrightConfig_verbosity, __pyx_setprop_6bright_12BrightConfig_verbosity, 0, 0},
  {(char *)"write_hdf5", __pyx_getprop_6bright_12BrightConfig_write_hdf5, __pyx_setprop_6bright_12BrightConfig_write_hdf5, 0, 0},
  {(char *)"write_text", __pyx_getprop_6bright_12BrightConfig_write_text, __pyx_setprop_6bright_12BrightConfig_write_text, 0, 0},
  {(char *)"output_filename", __pyx_getprop_6bright_12BrightConfig_output_filename, __pyx_setprop_6bright_12BrightConfig_output_filename, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BrightConfig = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BrightConfig = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BrightConfig = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BrightConfig = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_6bright_BrightConfig = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bright.BrightConfig"), /*tp_name*/
  sizeof(struct __pyx_obj_6bright_BrightConfig), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bright_BrightConfig, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BrightConfig, /*tp_as_number*/
  &__pyx_tp_as_sequence_BrightConfig, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BrightConfig, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BrightConfig, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bright_BrightConfig, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bright_BrightConfig, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bright_BrightConfig, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {__Pyx_NAMESTR("PyBrightStart"), (PyCFunction)__pyx_pf_6bright_PyBrightStart, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("bright"),
    __Pyx_DOCSTR(__pyx_k_27), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_kp_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 0},
  {&__pyx_kp_u_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 1, 0, 0},
  {&__pyx_kp_u_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 1, 0, 0},
  {&__pyx_kp_u_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 1, 0, 0},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_kp_u_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 1, 0, 0},
  {&__pyx_kp_u_22, __pyx_k_22, sizeof(__pyx_k_22), 0, 1, 0, 0},
  {&__pyx_kp_u_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 1, 0, 0},
  {&__pyx_n_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 1},
  {&__pyx_n_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 1},
  {&__pyx_n_s_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 0, 1, 1},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_n_s__A_IHM, __pyx_k__A_IHM, sizeof(__pyx_k__A_IHM), 0, 0, 1, 1},
  {&__pyx_n_s__B, __pyx_k__B, sizeof(__pyx_k__B), 0, 0, 1, 1},
  {&__pyx_n_s__BRIGHT_DATA, __pyx_k__BRIGHT_DATA, sizeof(__pyx_k__BRIGHT_DATA), 0, 0, 1, 1},
  {&__pyx_n_s__BU_F_, __pyx_k__BU_F_, sizeof(__pyx_k__BU_F_), 0, 0, 1, 1},
  {&__pyx_n_s__BUd, __pyx_k__BUd, sizeof(__pyx_k__BUd), 0, 0, 1, 1},
  {&__pyx_n_s__BUd_BisectionMethod, __pyx_k__BUd_BisectionMethod, sizeof(__pyx_k__BUd_BisectionMethod), 0, 0, 1, 1},
  {&__pyx_n_s__BUi_F_, __pyx_k__BUi_F_, sizeof(__pyx_k__BUi_F_), 0, 0, 1, 1},
  {&__pyx_n_s__BUt, __pyx_k__BUt, sizeof(__pyx_k__BUt), 0, 0, 1, 1},
  {&__pyx_n_s__BrightStart, __pyx_k__BrightStart, sizeof(__pyx_k__BrightStart), 0, 0, 1, 1},
  {&__pyx_n_s__Calibrate_PNL_2_BUd, __pyx_k__Calibrate_PNL_2_BUd, sizeof(__pyx_k__Calibrate_PNL_2_BUd), 0, 0, 1, 1},
  {&__pyx_n_s__CoolantChemicalForm, __pyx_k__CoolantChemicalForm, sizeof(__pyx_k__CoolantChemicalForm), 0, 0, 1, 1},
  {&__pyx_n_s__CoolantDensity, __pyx_k__CoolantDensity, sizeof(__pyx_k__CoolantDensity), 0, 0, 1, 1},
  {&__pyx_n_s__CoolantForm, __pyx_k__CoolantForm, sizeof(__pyx_k__CoolantForm), 0, 0, 1, 1},
  {&__pyx_n_s__D_F_, __pyx_k__D_F_, sizeof(__pyx_k__D_F_), 0, 0, 1, 1},
  {&__pyx_n_s__F, __pyx_k__F, sizeof(__pyx_k__F), 0, 0, 1, 1},
  {&__pyx_n_s__FRDefaults, __pyx_k__FRDefaults, sizeof(__pyx_k__FRDefaults), 0, 0, 1, 1},
  {&__pyx_n_s__Fd, __pyx_k__Fd, sizeof(__pyx_k__Fd), 0, 0, 1, 1},
  {&__pyx_n_s__FluenceAtBU, __pyx_k__FluenceAtBU, sizeof(__pyx_k__FluenceAtBU), 0, 0, 1, 1},
  {&__pyx_n_s__FuelChemicalForm, __pyx_k__FuelChemicalForm, sizeof(__pyx_k__FuelChemicalForm), 0, 0, 1, 1},
  {&__pyx_n_s__FuelDensity, __pyx_k__FuelDensity, sizeof(__pyx_k__FuelDensity), 0, 0, 1, 1},
  {&__pyx_n_s__FuelForm, __pyx_k__FuelForm, sizeof(__pyx_k__FuelForm), 0, 0, 1, 1},
  {&__pyx_n_s__H_XS_Rescale, __pyx_k__H_XS_Rescale, sizeof(__pyx_k__H_XS_Rescale), 0, 0, 1, 1},
  {&__pyx_n_s__HydrogenRescale, __pyx_k__HydrogenRescale, sizeof(__pyx_k__HydrogenRescale), 0, 0, 1, 1},
  {&__pyx_n_s__InACT, __pyx_k__InACT, sizeof(__pyx_k__InACT), 0, 0, 1, 1},
  {&__pyx_n_s__InLAN, __pyx_k__InLAN, sizeof(__pyx_k__InLAN), 0, 0, 1, 1},
  {&__pyx_n_s__InTRU, __pyx_k__InTRU, sizeof(__pyx_k__InTRU), 0, 0, 1, 1},
  {&__pyx_n_s__InU, __pyx_k__InU, sizeof(__pyx_k__InU), 0, 0, 1, 1},
  {&__pyx_n_s__IsosIn, __pyx_k__IsosIn, sizeof(__pyx_k__IsosIn), 0, 0, 1, 1},
  {&__pyx_n_s__IsosOut, __pyx_k__IsosOut, sizeof(__pyx_k__IsosOut), 0, 0, 1, 1},
  {&__pyx_n_s__IsosTail, __pyx_k__IsosTail, sizeof(__pyx_k__IsosTail), 0, 0, 1, 1},
  {&__pyx_n_s__LLzz, __pyx_k__LLzz, sizeof(__pyx_k__LLzz), 0, 0, 1, 1},
  {&__pyx_n_s__LWRDefaults, __pyx_k__LWRDefaults, sizeof(__pyx_k__LWRDefaults), 0, 0, 1, 1},
  {&__pyx_n_s__Lattice, __pyx_k__Lattice, sizeof(__pyx_k__Lattice), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeECylindrical, __pyx_k__LatticeECylindrical, sizeof(__pyx_k__LatticeECylindrical), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeEPlanar, __pyx_k__LatticeEPlanar, sizeof(__pyx_k__LatticeEPlanar), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeESpherical, __pyx_k__LatticeESpherical, sizeof(__pyx_k__LatticeESpherical), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeE_F_, __pyx_k__LatticeE_F_, sizeof(__pyx_k__LatticeE_F_), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeFCylindrical, __pyx_k__LatticeFCylindrical, sizeof(__pyx_k__LatticeFCylindrical), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeFPlanar, __pyx_k__LatticeFPlanar, sizeof(__pyx_k__LatticeFPlanar), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeFSpherical, __pyx_k__LatticeFSpherical, sizeof(__pyx_k__LatticeFSpherical), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeF_F_, __pyx_k__LatticeF_F_, sizeof(__pyx_k__LatticeF_F_), 0, 0, 1, 1},
  {&__pyx_n_s__LatticeType, __pyx_k__LatticeType, sizeof(__pyx_k__LatticeType), 0, 0, 1, 1},
  {&__pyx_n_s__Length, __pyx_k__Length, sizeof(__pyx_k__Length), 0, 0, 1, 1},
  {&__pyx_n_s__M, __pyx_k__M, sizeof(__pyx_k__M), 0, 0, 1, 1},
  {&__pyx_n_s__M0, __pyx_k__M0, sizeof(__pyx_k__M0), 0, 0, 1, 1},
  {&__pyx_n_s__MWC, __pyx_k__MWC, sizeof(__pyx_k__MWC), 0, 0, 1, 1},
  {&__pyx_n_s__MWF, __pyx_k__MWF, sizeof(__pyx_k__MWF), 0, 0, 1, 1},
  {&__pyx_n_s__Mj_F_, __pyx_k__Mj_F_, sizeof(__pyx_k__Mj_F_), 0, 0, 1, 1},
  {&__pyx_n_s__Mstar, __pyx_k__Mstar, sizeof(__pyx_k__Mstar), 0, 0, 1, 1},
  {&__pyx_n_s__Mstar_0, __pyx_k__Mstar_0, sizeof(__pyx_k__Mstar_0), 0, 0, 1, 1},
  {&__pyx_n_s__N, __pyx_k__N, sizeof(__pyx_k__N), 0, 0, 1, 1},
  {&__pyx_n_s__N0, __pyx_k__N0, sizeof(__pyx_k__N0), 0, 0, 1, 1},
  {&__pyx_n_s__NiC, __pyx_k__NiC, sizeof(__pyx_k__NiC), 0, 0, 1, 1},
  {&__pyx_n_s__NiF, __pyx_k__NiF, sizeof(__pyx_k__NiF), 0, 0, 1, 1},
  {&__pyx_n_s__OutACT, __pyx_k__OutACT, sizeof(__pyx_k__OutACT), 0, 0, 1, 1},
  {&__pyx_n_s__OutLAN, __pyx_k__OutLAN, sizeof(__pyx_k__OutLAN), 0, 0, 1, 1},
  {&__pyx_n_s__OutTRU, __pyx_k__OutTRU, sizeof(__pyx_k__OutTRU), 0, 0, 1, 1},
  {&__pyx_n_s__OutU, __pyx_k__OutU, sizeof(__pyx_k__OutU), 0, 0, 1, 1},
  {&__pyx_n_s__PDk_flag, __pyx_k__PDk_flag, sizeof(__pyx_k__PDk_flag), 0, 0, 1, 1},
  {&__pyx_n_s__P_F_, __pyx_k__P_F_, sizeof(__pyx_k__P_F_), 0, 0, 1, 1},
  {&__pyx_n_s__P_NL, __pyx_k__P_NL, sizeof(__pyx_k__P_NL), 0, 0, 1, 1},
  {&__pyx_n_s__ParamsIn, __pyx_k__ParamsIn, sizeof(__pyx_k__ParamsIn), 0, 0, 1, 1},
  {&__pyx_n_s__ParamsOut, __pyx_k__ParamsOut, sizeof(__pyx_k__ParamsOut), 0, 0, 1, 1},
  {&__pyx_n_s__PassNum, __pyx_k__PassNum, sizeof(__pyx_k__PassNum), 0, 0, 1, 1},
  {&__pyx_n_s__PoverF, __pyx_k__PoverF, sizeof(__pyx_k__PoverF), 0, 0, 1, 1},
  {&__pyx_n_s__Radius, __pyx_k__Radius, sizeof(__pyx_k__Radius), 0, 0, 1, 1},
  {&__pyx_n_s__Run_PNL, __pyx_k__Run_PNL, sizeof(__pyx_k__Run_PNL), 0, 0, 1, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__SWUperFeed, __pyx_k__SWUperFeed, sizeof(__pyx_k__SWUperFeed), 0, 0, 1, 1},
  {&__pyx_n_s__SWUperProduct, __pyx_k__SWUperProduct, sizeof(__pyx_k__SWUperProduct), 0, 0, 1, 1},
  {&__pyx_n_s__S_O, __pyx_k__S_O, sizeof(__pyx_k__S_O), 0, 0, 1, 1},
  {&__pyx_n_s__S_T, __pyx_k__S_T, sizeof(__pyx_k__S_T), 0, 0, 1, 1},
  {&__pyx_n_s__SigmaCa_F_, __pyx_k__SigmaCa_F_, sizeof(__pyx_k__SigmaCa_F_), 0, 0, 1, 1},
  {&__pyx_n_s__SigmaCtr_F_, __pyx_k__SigmaCtr_F_, sizeof(__pyx_k__SigmaCtr_F_), 0, 0, 1, 1},
  {&__pyx_n_s__SigmaFa_F_, __pyx_k__SigmaFa_F_, sizeof(__pyx_k__SigmaFa_F_), 0, 0, 1, 1},
  {&__pyx_n_s__SigmaFtr_F_, __pyx_k__SigmaFtr_F_, sizeof(__pyx_k__SigmaFtr_F_), 0, 0, 1, 1},
  {&__pyx_n_s__TargetBU, __pyx_k__TargetBU, sizeof(__pyx_k__TargetBU), 0, 0, 1, 1},
  {&__pyx_n_s__Tij_F_, __pyx_k__Tij_F_, sizeof(__pyx_k__Tij_F_), 0, 0, 1, 1},
  {&__pyx_n_s__TotalPerFeed, __pyx_k__TotalPerFeed, sizeof(__pyx_k__TotalPerFeed), 0, 0, 1, 1},
  {&__pyx_n_s__TruCR, __pyx_k__TruCR, sizeof(__pyx_k__TruCR), 0, 0, 1, 1},
  {&__pyx_n_s__TypeError, __pyx_k__TypeError, sizeof(__pyx_k__TypeError), 0, 0, 1, 1},
  {&__pyx_n_s__VC, __pyx_k__VC, sizeof(__pyx_k__VC), 0, 0, 1, 1},
  {&__pyx_n_s__VF, __pyx_k__VF, sizeof(__pyx_k__VF), 0, 0, 1, 1},
  {&__pyx_n_s__ValueError, __pyx_k__ValueError, sizeof(__pyx_k__ValueError), 0, 0, 1, 1},
  {&__pyx_n_s__WoverF, __pyx_k__WoverF, sizeof(__pyx_k__WoverF), 0, 0, 1, 1},
  {&__pyx_n_s____file__, __pyx_k____file__, sizeof(__pyx_k____file__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___cpp_sepeff, __pyx_k___cpp_sepeff, sizeof(__pyx_k___cpp_sepeff), 0, 0, 1, 1},
  {&__pyx_n_s__a, __pyx_k__a, sizeof(__pyx_k__a), 0, 0, 1, 1},
  {&__pyx_n_s__alpha_0, __pyx_k__alpha_0, sizeof(__pyx_k__alpha_0), 0, 0, 1, 1},
  {&__pyx_n_s__b, __pyx_k__b, sizeof(__pyx_k__b), 0, 0, 1, 1},
  {&__pyx_n_s__base, __pyx_k__base, sizeof(__pyx_k__base), 0, 0, 1, 1},
  {&__pyx_n_s__basestring, __pyx_k__basestring, sizeof(__pyx_k__basestring), 0, 0, 1, 1},
  {&__pyx_n_s__batchAve, __pyx_k__batchAve, sizeof(__pyx_k__batchAve), 0, 0, 1, 1},
  {&__pyx_n_s__batchAveK, __pyx_k__batchAveK, sizeof(__pyx_k__batchAveK), 0, 0, 1, 1},
  {&__pyx_n_s__batches, __pyx_k__batches, sizeof(__pyx_k__batches), 0, 0, 1, 1},
  {&__pyx_n_s__bright, __pyx_k__bright, sizeof(__pyx_k__bright), 0, 0, 1, 1},
  {&__pyx_n_s__bright_config, __pyx_k__bright_config, sizeof(__pyx_k__bright_config), 0, 0, 1, 1},
  {&__pyx_n_s__bright_data, __pyx_k__bright_data, sizeof(__pyx_k__bright_data), 0, 0, 1, 1},
  {&__pyx_n_s__buf, __pyx_k__buf, sizeof(__pyx_k__buf), 0, 0, 1, 1},
  {&__pyx_n_s__byteorder, __pyx_k__byteorder, sizeof(__pyx_k__byteorder), 0, 0, 1, 1},
  {&__pyx_n_s__c_str, __pyx_k__c_str, sizeof(__pyx_k__c_str), 0, 0, 1, 1},
  {&__pyx_n_s__calcOutIso, __pyx_k__calcOutIso, sizeof(__pyx_k__calcOutIso), 0, 0, 1, 1},
  {&__pyx_n_s__calcSubStreams, __pyx_k__calcSubStreams, sizeof(__pyx_k__calcSubStreams), 0, 0, 1, 1},
  {&__pyx_n_s__calcTruCR, __pyx_k__calcTruCR, sizeof(__pyx_k__calcTruCR), 0, 0, 1, 1},
  {&__pyx_n_s__calcZeta, __pyx_k__calcZeta, sizeof(__pyx_k__calcZeta), 0, 0, 1, 1},
  {&__pyx_n_s__calcZetaCylindrical, __pyx_k__calcZetaCylindrical, sizeof(__pyx_k__calcZetaCylindrical), 0, 0, 1, 1},
  {&__pyx_n_s__calcZetaPlanar, __pyx_k__calcZetaPlanar, sizeof(__pyx_k__calcZetaPlanar), 0, 0, 1, 1},
  {&__pyx_n_s__calcZetaSpherical, __pyx_k__calcZetaSpherical, sizeof(__pyx_k__calcZetaSpherical), 0, 0, 1, 1},
  {&__pyx_n_s__calc_core_input, __pyx_k__calc_core_input, sizeof(__pyx_k__calc_core_input), 0, 0, 1, 1},
  {&__pyx_n_s__calc_deltaR, __pyx_k__calc_deltaR, sizeof(__pyx_k__calc_deltaR), 0, 0, 1, 1},
  {&__pyx_n_s__calc_deltaRs, __pyx_k__calc_deltaRs, sizeof(__pyx_k__calc_deltaRs), 0, 0, 1, 1},
  {&__pyx_n_s__calc_mass_ratios, __pyx_k__calc_mass_ratios, sizeof(__pyx_k__calc_mass_ratios), 0, 0, 1, 1},
  {&__pyx_n_s__clear, __pyx_k__clear, sizeof(__pyx_k__clear), 0, 0, 1, 1},
  {&__pyx_n_s__dC_F_, __pyx_k__dC_F_, sizeof(__pyx_k__dC_F_), 0, 0, 1, 1},
  {&__pyx_n_s__dF_F_, __pyx_k__dF_F_, sizeof(__pyx_k__dF_F_), 0, 0, 1, 1},
  {&__pyx_n_s__datasetname, __pyx_k__datasetname, sizeof(__pyx_k__datasetname), 0, 0, 1, 1},
  {&__pyx_n_s__decay_time, __pyx_k__decay_time, sizeof(__pyx_k__decay_time), 0, 0, 1, 1},
  {&__pyx_n_s__deltaR, __pyx_k__deltaR, sizeof(__pyx_k__deltaR), 0, 0, 1, 1},
  {&__pyx_n_s__deltaRs, __pyx_k__deltaRs, sizeof(__pyx_k__deltaRs), 0, 0, 1, 1},
  {&__pyx_n_s__descr, __pyx_k__descr, sizeof(__pyx_k__descr), 0, 0, 1, 1},
  {&__pyx_n_s__di_F_, __pyx_k__di_F_, sizeof(__pyx_k__di_F_), 0, 0, 1, 1},
  {&__pyx_n_s__doCalc, __pyx_k__doCalc, sizeof(__pyx_k__doCalc), 0, 0, 1, 1},
  {&__pyx_n_s__e_pointer, __pyx_k__e_pointer, sizeof(__pyx_k__e_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__enrich_params, __pyx_k__enrich_params, sizeof(__pyx_k__enrich_params), 0, 0, 1, 1},
  {&__pyx_n_s__environ, __pyx_k__environ, sizeof(__pyx_k__environ), 0, 0, 1, 1},
  {&__pyx_n_s__ep_pointer, __pyx_k__ep_pointer, sizeof(__pyx_k__ep_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__f, __pyx_k__f, sizeof(__pyx_k__f), 0, 0, 1, 1},
  {&__pyx_n_s__fccomp_pointer, __pyx_k__fccomp_pointer, sizeof(__pyx_k__fccomp_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__fd, __pyx_k__fd, sizeof(__pyx_k__fd), 0, 0, 1, 1},
  {&__pyx_n_s__ff_pointer, __pyx_k__ff_pointer, sizeof(__pyx_k__ff_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__fields, __pyx_k__fields, sizeof(__pyx_k__fields), 0, 0, 1, 1},
  {&__pyx_n_s__filename, __pyx_k__filename, sizeof(__pyx_k__filename), 0, 0, 1, 1},
  {&__pyx_n_s__flux, __pyx_k__flux, sizeof(__pyx_k__flux), 0, 0, 1, 1},
  {&__pyx_n_s__foldMassWeights, __pyx_k__foldMassWeights, sizeof(__pyx_k__foldMassWeights), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__fp_pointer, __pyx_k__fp_pointer, sizeof(__pyx_k__fp_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__fr1g_pointer, __pyx_k__fr1g_pointer, sizeof(__pyx_k__fr1g_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__initialize, __pyx_k__initialize, sizeof(__pyx_k__initialize), 0, 0, 1, 1},
  {&__pyx_n_s__input, __pyx_k__input, sizeof(__pyx_k__input), 0, 0, 1, 1},
  {&__pyx_n_s__isoname, __pyx_k__isoname, sizeof(__pyx_k__isoname), 0, 0, 1, 1},
  {&__pyx_n_s__items, __pyx_k__items, sizeof(__pyx_k__items), 0, 0, 1, 1},
  {&__pyx_n_s__itemsize, __pyx_k__itemsize, sizeof(__pyx_k__itemsize), 0, 0, 1, 1},
  {&__pyx_n_s__j, __pyx_k__j, sizeof(__pyx_k__j), 0, 0, 1, 1},
  {&__pyx_n_s__join, __pyx_k__join, sizeof(__pyx_k__join), 0, 0, 1, 1},
  {&__pyx_n_s__k, __pyx_k__k, sizeof(__pyx_k__k), 0, 0, 1, 1},
  {&__pyx_n_s__k_F_, __pyx_k__k_F_, sizeof(__pyx_k__k_F_), 0, 0, 1, 1},
  {&__pyx_n_s__kappaC_F_, __pyx_k__kappaC_F_, sizeof(__pyx_k__kappaC_F_), 0, 0, 1, 1},
  {&__pyx_n_s__kappaF_F_, __pyx_k__kappaF_F_, sizeof(__pyx_k__kappaF_F_), 0, 0, 1, 1},
  {&__pyx_n_s__l, __pyx_k__l, sizeof(__pyx_k__l), 0, 0, 1, 1},
  {&__pyx_n_s__libfile, __pyx_k__libfile, sizeof(__pyx_k__libfile), 0, 0, 1, 1},
  {&__pyx_n_s__loadLib, __pyx_k__loadLib, sizeof(__pyx_k__loadLib), 0, 0, 1, 1},
  {&__pyx_n_s__lwr1g_pointer, __pyx_k__lwr1g_pointer, sizeof(__pyx_k__lwr1g_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__m, __pyx_k__m, sizeof(__pyx_k__m), 0, 0, 1, 1},
  {&__pyx_n_s__mass_stream, __pyx_k__mass_stream, sizeof(__pyx_k__mass_stream), 0, 0, 1, 1},
  {&__pyx_n_s__mass_streams, __pyx_k__mass_streams, sizeof(__pyx_k__mass_streams), 0, 0, 1, 1},
  {&__pyx_n_s__mass_weights_in, __pyx_k__mass_weights_in, sizeof(__pyx_k__mass_weights_in), 0, 0, 1, 1},
  {&__pyx_n_s__mass_weights_out, __pyx_k__mass_weights_out, sizeof(__pyx_k__mass_weights_out), 0, 0, 1, 1},
  {&__pyx_n_s__miC, __pyx_k__miC, sizeof(__pyx_k__miC), 0, 0, 1, 1},
  {&__pyx_n_s__miF, __pyx_k__miF, sizeof(__pyx_k__miF), 0, 0, 1, 1},
  {&__pyx_n_s__mixed_2_zzaaam, __pyx_k__mixed_2_zzaaam, sizeof(__pyx_k__mixed_2_zzaaam), 0, 0, 1, 1},
  {&__pyx_n_s__mkMj_F_, __pyx_k__mkMj_F_, sizeof(__pyx_k__mkMj_F_), 0, 0, 1, 1},
  {&__pyx_n_s__mkMj_Fd_, __pyx_k__mkMj_Fd_, sizeof(__pyx_k__mkMj_Fd_), 0, 0, 1, 1},
  {&__pyx_n_s__ms_pointer, __pyx_k__ms_pointer, sizeof(__pyx_k__ms_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__names, __pyx_k__names, sizeof(__pyx_k__names), 0, 0, 1, 1},
  {&__pyx_n_s__natural_name, __pyx_k__natural_name, sizeof(__pyx_k__natural_name), 0, 0, 1, 1},
  {&__pyx_n_s__ndim, __pyx_k__ndim, sizeof(__pyx_k__ndim), 0, 0, 1, 1},
  {&__pyx_n_s__niC, __pyx_k__niC, sizeof(__pyx_k__niC), 0, 0, 1, 1},
  {&__pyx_n_s__niF, __pyx_k__niF, sizeof(__pyx_k__niF), 0, 0, 1, 1},
  {&__pyx_n_s__np, __pyx_k__np, sizeof(__pyx_k__np), 0, 0, 1, 1},
  {&__pyx_n_s__numpy, __pyx_k__numpy, sizeof(__pyx_k__numpy), 0, 0, 1, 1},
  {&__pyx_n_s__obj, __pyx_k__obj, sizeof(__pyx_k__obj), 0, 0, 1, 1},
  {&__pyx_n_s__open_slots, __pyx_k__open_slots, sizeof(__pyx_k__open_slots), 0, 0, 1, 1},
  {&__pyx_n_s__os, __pyx_k__os, sizeof(__pyx_k__os), 0, 0, 1, 1},
  {&__pyx_n_s__params, __pyx_k__params, sizeof(__pyx_k__params), 0, 0, 1, 1},
  {&__pyx_n_s__params2track, __pyx_k__params2track, sizeof(__pyx_k__params2track), 0, 0, 1, 1},
  {&__pyx_n_s__path, __pyx_k__path, sizeof(__pyx_k__path), 0, 0, 1, 1},
  {&__pyx_n_s__phi, __pyx_k__phi, sizeof(__pyx_k__phi), 0, 0, 1, 1},
  {&__pyx_n_s__pi_F_, __pyx_k__pi_F_, sizeof(__pyx_k__pi_F_), 0, 0, 1, 1},
  {&__pyx_n_s__pnl, __pyx_k__pnl, sizeof(__pyx_k__pnl), 0, 0, 1, 1},
  {&__pyx_n_s__r, __pyx_k__r, sizeof(__pyx_k__r), 0, 0, 1, 1},
  {&__pyx_n_s__r1g_pointer, __pyx_k__r1g_pointer, sizeof(__pyx_k__r1g_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__r_pointer, __pyx_k__r_pointer, sizeof(__pyx_k__r_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__reactor, __pyx_k__reactor, sizeof(__pyx_k__reactor), 0, 0, 1, 1},
  {&__pyx_n_s__reactor_parameters, __pyx_k__reactor_parameters, sizeof(__pyx_k__reactor_parameters), 0, 0, 1, 1},
  {&__pyx_n_s__readonly, __pyx_k__readonly, sizeof(__pyx_k__readonly), 0, 0, 1, 1},
  {&__pyx_n_s__rhoC, __pyx_k__rhoC, sizeof(__pyx_k__rhoC), 0, 0, 1, 1},
  {&__pyx_n_s__rhoF, __pyx_k__rhoF, sizeof(__pyx_k__rhoF), 0, 0, 1, 1},
  {&__pyx_n_s__rp_pointer, __pyx_k__rp_pointer, sizeof(__pyx_k__rp_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__s_pointer, __pyx_k__s_pointer, sizeof(__pyx_k__s_pointer), 0, 0, 1, 1},
  {&__pyx_n_s__sepeff, __pyx_k__sepeff, sizeof(__pyx_k__sepeff), 0, 0, 1, 1},
  {&__pyx_n_s__setParams, __pyx_k__setParams, sizeof(__pyx_k__setParams), 0, 0, 1, 1},
  {&__pyx_n_s__shape, __pyx_k__shape, sizeof(__pyx_k__shape), 0, 0, 1, 1},
  {&__pyx_n_s__split, __pyx_k__split, sizeof(__pyx_k__split), 0, 0, 1, 1},
  {&__pyx_n_s__strides, __pyx_k__strides, sizeof(__pyx_k__strides), 0, 0, 1, 1},
  {&__pyx_n_s__suboffsets, __pyx_k__suboffsets, sizeof(__pyx_k__suboffsets), 0, 0, 1, 1},
  {&__pyx_n_s__total_slots, __pyx_k__total_slots, sizeof(__pyx_k__total_slots), 0, 0, 1, 1},
  {&__pyx_n_s__type_num, __pyx_k__type_num, sizeof(__pyx_k__type_num), 0, 0, 1, 1},
  {&__pyx_n_s__useDisadvantage, __pyx_k__useDisadvantage, sizeof(__pyx_k__useDisadvantage), 0, 0, 1, 1},
  {&__pyx_n_s__useZeta, __pyx_k__useZeta, sizeof(__pyx_k__useZeta), 0, 0, 1, 1},
  {&__pyx_n_s__writeHDF5, __pyx_k__writeHDF5, sizeof(__pyx_k__writeHDF5), 0, 0, 1, 1},
  {&__pyx_n_s__writeIsoPass, __pyx_k__writeIsoPass, sizeof(__pyx_k__writeIsoPass), 0, 0, 1, 1},
  {&__pyx_n_s__writeParamPass, __pyx_k__writeParamPass, sizeof(__pyx_k__writeParamPass), 0, 0, 1, 1},
  {&__pyx_n_s__writeText, __pyx_k__writeText, sizeof(__pyx_k__writeText), 0, 0, 1, 1},
  {&__pyx_n_s__writeout, __pyx_k__writeout, sizeof(__pyx_k__writeout), 0, 0, 1, 1},
  {&__pyx_n_s__xP_j, __pyx_k__xP_j, sizeof(__pyx_k__xP_j), 0, 0, 1, 1},
  {&__pyx_n_s__xW_j, __pyx_k__xW_j, sizeof(__pyx_k__xW_j), 0, 0, 1, 1},
  {&__pyx_n_s__x_F, __pyx_k__x_F, sizeof(__pyx_k__x_F), 0, 0, 1, 1},
  {&__pyx_n_s__x_P, __pyx_k__x_P, sizeof(__pyx_k__x_P), 0, 0, 1, 1},
  {&__pyx_n_s__x_W, __pyx_k__x_W, sizeof(__pyx_k__x_W), 0, 0, 1, 1},
  {&__pyx_n_s__zeta_F_, __pyx_k__zeta_F_, sizeof(__pyx_k__zeta_F_), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_basestring = __Pyx_GetName(__pyx_b, __pyx_n_s__basestring); if (!__pyx_builtin_basestring) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetName(__pyx_b, __pyx_n_s__TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants");

  /* "bright.pyx":906
 *                     sepeff[isoname.mixed_2_zzaaam(key)] = value
 *             else:
 *                 raise TypeError("Separation keys must be strings or integers.")             # <<<<<<<<<<<<<<
 * 
 *         return sepeff
 */
  __pyx_k_tuple_3 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_3));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_2));
  PyTuple_SET_ITEM(__pyx_k_tuple_3, 0, ((PyObject *)__pyx_kp_s_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_3));

  /* "bright.pyx":1218
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0])
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")             # <<<<<<<<<<<<<<
 *         else:
 *             if input is None:
 */
  __pyx_k_tuple_6 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_6));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_5));
  PyTuple_SET_ITEM(__pyx_k_tuple_6, 0, ((PyObject *)__pyx_kp_s_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_6));

  /* "bright.pyx":1228
 *                 output.ms_pointer[0] = self.s_pointer.doCalc(<cpp_mass_stream.MassStream> in_ms.ms_pointer[0], <double> decay_time)
 *             else:
 *                 raise TypeError("'input' must be a MassStream, dict, or None.")             # <<<<<<<<<<<<<<
 * 
 *         return output
 */
  __pyx_k_tuple_7 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_7));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_5));
  PyTuple_SET_ITEM(__pyx_k_tuple_7, 0, ((PyObject *)__pyx_kp_s_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_7));

  /* "numpy.pxd":206
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_k_tuple_16 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_16));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_15));
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 0, ((PyObject *)__pyx_kp_u_15));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_15));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "numpy.pxd":210
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_k_tuple_18 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_18)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_18));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_17));
  PyTuple_SET_ITEM(__pyx_k_tuple_18, 0, ((PyObject *)__pyx_kp_u_17));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_17));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_18));

  /* "numpy.pxd":248
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_k_tuple_20 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_20));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_19));
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 0, ((PyObject *)__pyx_kp_u_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "numpy.pxd":787
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
  __pyx_k_tuple_23 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_23)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_23));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_22));
  PyTuple_SET_ITEM(__pyx_k_tuple_23, 0, ((PyObject *)__pyx_kp_u_22));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_22));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_23));

  /* "numpy.pxd":791
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_k_tuple_24 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_24)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_24));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_19));
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 0, ((PyObject *)__pyx_kp_u_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_24));

  /* "numpy.pxd":811
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_k_tuple_26 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_26));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_25));
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, ((PyObject *)__pyx_kp_u_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  #if PY_VERSION_HEX < 0x02040000
  if (unlikely(__Pyx_Py23SetsImport() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initbright(void); /*proto*/
PyMODINIT_FUNC initbright(void)
#else
PyMODINIT_FUNC PyInit_bright(void); /*proto*/
PyMODINIT_FUNC PyInit_bright(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit_bright(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __pyx_binding_PyCFunctionType_USED
  if (__pyx_binding_PyCFunctionType_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("bright"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_27), 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_bright) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6bright_FCComp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FCComp", (PyObject *)&__pyx_type_6bright_FCComp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_FCComp = &__pyx_type_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_EnrichmentParameters) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "EnrichmentParameters", (PyObject *)&__pyx_type_6bright_EnrichmentParameters) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_EnrichmentParameters = &__pyx_type_6bright_EnrichmentParameters;
  __pyx_type_6bright_Enrichment.tp_base = __pyx_ptype_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_Enrichment) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Enrichment", (PyObject *)&__pyx_type_6bright_Enrichment) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_Enrichment = &__pyx_type_6bright_Enrichment;
  __pyx_type_6bright_Reprocess.tp_base = __pyx_ptype_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_Reprocess) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 858; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Reprocess", (PyObject *)&__pyx_type_6bright_Reprocess) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 858; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_Reprocess = &__pyx_type_6bright_Reprocess;
  __pyx_type_6bright_Storage.tp_base = __pyx_ptype_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_Storage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Storage", (PyObject *)&__pyx_type_6bright_Storage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_Storage = &__pyx_type_6bright_Storage;
  if (PyType_Ready(&__pyx_type_6bright_FluencePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FluencePoint", (PyObject *)&__pyx_type_6bright_FluencePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_FluencePoint = &__pyx_type_6bright_FluencePoint;
  if (PyType_Ready(&__pyx_type_6bright_ReactorParameters) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ReactorParameters", (PyObject *)&__pyx_type_6bright_ReactorParameters) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_ReactorParameters = &__pyx_type_6bright_ReactorParameters;
  __pyx_type_6bright_Reactor1G.tp_base = __pyx_ptype_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_Reactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Reactor1G", (PyObject *)&__pyx_type_6bright_Reactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_Reactor1G = &__pyx_type_6bright_Reactor1G;
  __pyx_type_6bright_LightWaterReactor1G.tp_base = __pyx_ptype_6bright_Reactor1G;
  if (PyType_Ready(&__pyx_type_6bright_LightWaterReactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LightWaterReactor1G", (PyObject *)&__pyx_type_6bright_LightWaterReactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_LightWaterReactor1G = &__pyx_type_6bright_LightWaterReactor1G;
  __pyx_type_6bright_FastReactor1G.tp_base = __pyx_ptype_6bright_Reactor1G;
  if (PyType_Ready(&__pyx_type_6bright_FastReactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FastReactor1G", (PyObject *)&__pyx_type_6bright_FastReactor1G) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_FastReactor1G = &__pyx_type_6bright_FastReactor1G;
  __pyx_type_6bright_FuelFabrication.tp_base = __pyx_ptype_6bright_FCComp;
  if (PyType_Ready(&__pyx_type_6bright_FuelFabrication) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FuelFabrication", (PyObject *)&__pyx_type_6bright_FuelFabrication) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_FuelFabrication = &__pyx_type_6bright_FuelFabrication;
  if (PyType_Ready(&__pyx_type_6bright_BrightConfig) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BrightConfig", (PyObject *)&__pyx_type_6bright_BrightConfig) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bright_BrightConfig = &__pyx_type_6bright_BrightConfig;
  /*--- Type import code ---*/
  __pyx_ptype_11mass_stream_MassStream = __Pyx_ImportType("mass_stream", "MassStream", sizeof(struct __pyx_obj_11mass_stream_MassStream), 1); if (unlikely(!__pyx_ptype_11mass_stream_MassStream)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  __pyx_t_1 = __Pyx_ImportModule("mass_stream"); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_1, "dict_to_map_str_msp", (void (**)(void))&__pyx_f_11mass_stream_dict_to_map_str_msp, "std::map<std::string,__pyx_t_11mass_stream_msp> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_1, "map_to_dict_str_msp", (void (**)(void))&__pyx_f_11mass_stream_map_to_dict_str_msp, "PyObject *(std::map<std::string,__pyx_t_11mass_stream_msp>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = __Pyx_ImportModule("stlconverters"); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_int_dbl", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_int_dbl, "std::map<int,double> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_int_dbl", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_int_dbl, "PyObject *(std::map<int,double>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_str_int", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_str_int, "std::map<std::string,int> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_str_int", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_str_int, "PyObject *(std::map<std::string,int>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_int_str", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_int_str, "std::map<int,std::string> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_int_str", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_int_str, "PyObject *(std::map<int,std::string>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_str_dbl", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_str_dbl, "std::map<std::string,double> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_str_dbl", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_str_dbl, "PyObject *(std::map<std::string,double>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "py_to_cpp_set_int", (void (**)(void))&__pyx_f_13stlconverters_py_to_cpp_set_int, "std::set<int> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "cpp_to_py_set_int", (void (**)(void))&__pyx_f_13stlconverters_cpp_to_py_set_int, "PyObject *(std::set<int>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "py_to_cpp_set_str", (void (**)(void))&__pyx_f_13stlconverters_py_to_cpp_set_str, "std::set<std::string> (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "cpp_to_py_set_str", (void (**)(void))&__pyx_f_13stlconverters_cpp_to_py_set_str, "PyObject *(std::set<std::string>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "array_to_vector_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_array_to_vector_1d_dbl, "std::vector<double> (PyArrayObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "vector_to_array_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_vector_to_array_1d_dbl, "PyArrayObject *(std::vector<double>)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_int_vector_to_array_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_int_vector_to_array_1d_dbl, "std::map<int,std::vector<double> > (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_int_array_to_vector_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_int_array_to_vector_1d_dbl, "PyObject *(std::map<int,std::vector<double> >)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "dict_to_map_int_int_vector_to_array_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_dict_to_map_int_int_vector_to_array_1d_dbl, "std::map<int,std::map<int,std::vector<double> > > (PyObject *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_2, "map_to_dict_int_int_array_to_vector_1d_dbl", (void (**)(void))&__pyx_f_13stlconverters_map_to_dict_int_int_array_to_vector_1d_dbl, "PyObject *(std::map<int,std::map<int,std::vector<double> > >)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  /*--- Execution code ---*/

  /* "bright.pyx":11
 * 
 * cimport numpy as np
 * import numpy as np             # <<<<<<<<<<<<<<
 * 
 * # local imports
 */
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__np, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":16
 * cimport std
 * 
 * import isoname             # <<<<<<<<<<<<<<
 * 
 * cimport cpp_mass_stream
 */
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__isoname), 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__isoname, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":27
 * 
 * cimport mass_stream
 * import mass_stream             # <<<<<<<<<<<<<<
 * 
 * import os
 */
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__mass_stream), 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__mass_stream, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":29
 * import mass_stream
 * 
 * import os             # <<<<<<<<<<<<<<
 * 
 * import bright_data
 */
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__os), 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__os, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":31
 * import os
 * 
 * import bright_data             # <<<<<<<<<<<<<<
 * 
 * ######################################
 */
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__bright_data), 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__bright_data, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":45
 * 
 * # Expose the C-code start up routine
 * def BrightStart():             # <<<<<<<<<<<<<<
 *     cpp_bright.BrightStart()
 * 
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_6bright_1BrightStart, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__BrightStart, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":50
 * 
 * # Run the appropriate start-up routines
 * PyBrightStart()             # <<<<<<<<<<<<<<
 * BrightStart()
 * 
 */
  __pyx_t_3 = __pyx_f_6bright_PyBrightStart(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bright.pyx":51
 * # Run the appropriate start-up routines
 * PyBrightStart()
 * BrightStart()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__BrightStart); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":116
 * 
 * # Make a singleton of the Bright config object
 * bright_config = BrightConfig()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bright_BrightConfig)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__bright_config, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":120
 * 
 * # Load isos2track from file functions
 * def load_isos2track_hdf5(char * filename, char * datasetname="", bint clear=False):             # <<<<<<<<<<<<<<
 *     """This convience function tries to load the isos2track set from a dataset
 *     in an HDF5 file.  The dataset *must* be of integer type.  String-based
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_6bright_2load_isos2track_hdf5, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_28, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":152
 * 
 * 
 * def load_isos2track_text(char * filename, bint clear=False):             # <<<<<<<<<<<<<<
 *     """This convience function tries to load the isos2track set from a text
 *     file.  The nuclide names may use any naming convention.  Mixing different
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_6bright_3load_isos2track_text, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_29, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":501
 * 
 * 
 * def UraniumEnrichmentDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.EnrichmentParameters cpp_ued = cpp_bright.fillUraniumEnrichmentDefaults()
 *     cdef EnrichmentParameters ued = EnrichmentParameters()
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_6bright_4UraniumEnrichmentDefaults, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_30, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":910
 *         return sepeff
 * 
 *     def __cinit__(self, dict sepeff={}, char * name=""):             # <<<<<<<<<<<<<<
 *         sepeff = self._cpp_sepeff(sepeff)
 *         self.r_pointer = new cpp_bright.Reprocess(conv.dict_to_map_int_dbl(sepeff), std.string(name))
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __pyx_k_4 = __pyx_t_4;
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;

  /* "bright.pyx":2523
 * 
 * 
 * def LWRDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.ReactorParameters cpp_lwrd = cpp_bright.fillLWRDefaults()
 *     cdef ReactorParameters lwrd = ReactorParameters()
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_6bright_5LWRDefaults, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__LWRDefaults, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":3592
 * 
 * 
 * def FRDefaults():             # <<<<<<<<<<<<<<
 *     cdef cpp_bright.ReactorParameters cpp_frd = cpp_bright.fillFRDefaults()
 *     cdef ReactorParameters frd = ReactorParameters()
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_6bright_6FRDefaults, NULL, __pyx_n_s__bright); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__FRDefaults, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bright.pyx":1
 * """Python wrapper for isoname library."""             # <<<<<<<<<<<<<<
 * # Cython imports
 * from libcpp.map cimport map as cpp_map
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_4)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;

  /* "numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  if (__pyx_m) {
    __Pyx_AddTraceback("init bright");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init bright");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}


static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
                 "need more than %d value%s to unpack", (int)index,
        #else
                 "need more than %zd value%s to unpack", index,
        #endif
                 (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
            "too many values to unpack (expected %d)", (int)expected);
        #else
            "too many values to unpack (expected %zd)", expected);
        #endif
}

static PyObject *__Pyx_UnpackItem(PyObject *iter, Py_ssize_t index) {
    PyObject *item;
    if (!(item = PyIter_Next(iter))) {
        if (!PyErr_Occurred()) {
            __Pyx_RaiseNeedMoreValuesError(index);
        }
    }
    return item;
}

static int __Pyx_EndUnpack(PyObject *iter, Py_ssize_t expected) {
    PyObject *item;
    if ((item = PyIter_Next(iter))) {
        Py_DECREF(item);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    else if (!PyErr_Occurred())
        return 0;
    else
        return -1;
}

static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
    if (Py_TYPE(obj)->tp_as_number && Py_TYPE(obj)->tp_as_number->nb_float) {
        return PyFloat_AsDouble(obj);
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}

typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  int new_count, enc_count;
  int is_complex;
  char enc_type;
  char packmode;
} __Pyx_BufFmt_Context;

static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}

static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}

static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  char msg[] = {ch, 0};
  PyErr_Format(PyExc_ValueError, "Unexpected format string character: '%s'", msg);
}

static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'b': return "'char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 0: return "end";
    default: return "unparseable format string";
  }
}

static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}

static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}

typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_s_long_long;
#endif

static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_s_long_long) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}

static size_t __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'h': case 'i': case 'l': case 'q': return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q': return 'U';
    case 'f': case 'd': case 'g': return (is_complex ? 'C' : 'R');
    case 'O': return 'O';
    case 'P': return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}

static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}

static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset;
  if (ctx->enc_type == 0) return 0;
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;

    if (ctx->packmode == '@' || ctx->packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->packmode == '@') {
      int align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      int align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
    }

    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        /* special case -- treat as struct rather than complex number */
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }

      __Pyx_BufFmt_RaiseExpected(ctx);
      return -1;
    }

    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %"PY_FORMAT_SIZE_T"d "
                   "but %"PY_FORMAT_SIZE_T"d expected", ctx->fmt_offset, offset);
      return -1;
    }

    ctx->fmt_offset += size;

    --ctx->enc_count; /* Consume from buffer string */

    /* Done checking, move to next field, pushing or popping struct stack if needed */
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break; /* breaks both loops as ctx->enc_count == 0 */
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue; /* empty struct */
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}

static int __Pyx_BufFmt_FirstPack(__Pyx_BufFmt_Context* ctx) {
  if (ctx->enc_type != 0 || ctx->packmode != '@') {
    PyErr_SetString(PyExc_ValueError, "Buffer packing mode currently only allowed at beginning of format string (this is a defect)");
    return -1;
  }
  return 0;
}

static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case 10:
      case 13:
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = *ts++;
        break;
      case 'T': /* substruct */
        {
          int i;
          const char* ts_after_sub;
          int struct_count = ctx->new_count;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
        }
        break;
      case '}': /* end of substruct; either repeat or move on */
        ++ts;
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }        /* fall through */
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex) {
          /* Continue pooling same type */
          ctx->enc_count += ctx->new_count;
        } else {
          /* New type */
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_count = ctx->new_count;
          ctx->enc_type = *ts;
          ctx->is_complex = got_Z;
        }
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      default:
        {
          ctx->new_count = __Pyx_BufFmt_ParseNumber(&ts);
          if (ctx->new_count == -1) { /* First char was not a digit */
            char msg[2] = { *ts, 0 };
            PyErr_Format(PyExc_ValueError,
                         "Does not understand character buffer dtype format string ('%s')", msg);
            return NULL;
          }
        }

    }
  }
}

static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}

static CYTHON_INLINE int __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack) {
  if (obj == Py_None) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%"PY_FORMAT_SIZE_T"d byte%s) does not match size of '%s' (%"PY_FORMAT_SIZE_T"d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name,
      dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}

static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
  #if PY_VERSION_HEX >= 0x02060000
  if (Py_TYPE(obj)->tp_flags & Py_TPFLAGS_HAVE_NEWBUFFER)
      return PyObject_GetBuffer(obj, view, flags);
  #endif
  if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pf_5numpy_7ndarray___getbuffer__(obj, view, flags);
  else {
  PyErr_Format(PyExc_TypeError, "'%100s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
  return -1;
    }
}

static void __Pyx_ReleaseBuffer(Py_buffer *view) {
  PyObject* obj = view->obj;
  if (obj) {
if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pf_5numpy_7ndarray_1__releasebuffer__(obj, view);
    Py_DECREF(obj);
    view->obj = NULL;
  }
}

#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && ((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        PyErr_Warn(NULL, warning);
        #else
        PyErr_WarnEx(NULL, warning, 0);
        #endif
    }
    else if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;

    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%s does not export expected C function %s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %s.%s has wrong signature (expected %s, got %s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %s.%s has wrong signature (expected %s, got %s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
